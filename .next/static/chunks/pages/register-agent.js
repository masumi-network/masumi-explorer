/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/register-agent"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fpatricktobler%2Fmasumi-explorer%2Fsrc%2Fpages%2Fregister-agent.tsx&page=%2Fregister-agent!":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fpatricktobler%2Fmasumi-explorer%2Fsrc%2Fpages%2Fregister-agent.tsx&page=%2Fregister-agent! ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/register-agent\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/register-agent.tsx */ \"./src/pages/register-agent.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/register-agent\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRnBhdHJpY2t0b2JsZXIlMkZtYXN1bWktZXhwbG9yZXIlMkZzcmMlMkZwYWdlcyUyRnJlZ2lzdGVyLWFnZW50LnRzeCZwYWdlPSUyRnJlZ2lzdGVyLWFnZW50ISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHNFQUFnQztBQUN2RDtBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9yZWdpc3Rlci1hZ2VudFwiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vc3JjL3BhZ2VzL3JlZ2lzdGVyLWFnZW50LnRzeFwiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvcmVnaXN0ZXItYWdlbnRcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fpatricktobler%2Fmasumi-explorer%2Fsrc%2Fpages%2Fregister-agent.tsx&page=%2Fregister-agent!\n"));

/***/ }),

/***/ "./src/components/dashboard/register/register-section.tsx":
/*!****************************************************************!*\
  !*** ./src/components/dashboard/register/register-section.tsx ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RegisterSection)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var _meshsdk_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meshsdk/react */ \"./node_modules/@meshsdk/react/dist/index.js\");\n/* harmony import */ var _meshsdk_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @meshsdk/core */ \"./node_modules/@meshsdk/core/dist/index.js\");\n/* harmony import */ var _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @meshsdk/core-cst */ \"./node_modules/@meshsdk/core-cst/dist/index.js\");\n/* harmony import */ var ethereum_cryptography_blake2b_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethereum-cryptography/blake2b.js */ \"./node_modules/ethereum-cryptography/esm/blake2b.js\");\n/* harmony import */ var _lib_plutus_minting_contract__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/lib/plutus-minting-contract */ \"./src/lib/plutus-minting-contract.ts\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/ui/button */ \"./src/components/ui/button.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/ui/input */ \"./src/components/ui/input.tsx\");\n/* harmony import */ var _components_ui_label__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/ui/label */ \"./src/components/ui/label.tsx\");\n/* harmony import */ var _components_ui_textarea__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/ui/textarea */ \"./src/components/ui/textarea.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/ui/card */ \"./src/components/ui/card.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_11__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_meshsdk_react__WEBPACK_IMPORTED_MODULE_1__, _meshsdk_core__WEBPACK_IMPORTED_MODULE_2__]);\n([_meshsdk_react__WEBPACK_IMPORTED_MODULE_1__, _meshsdk_core__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n // Updated import path\n\n\n\n\n\n\n// Helper function to split long strings\nfunction splitLongString(str) {\n    let maxLength = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 64;\n    const chunks = [];\n    let remaining = str;\n    while(remaining.length > 0){\n        // Try to split at a space if possible\n        let splitPoint = maxLength;\n        if (remaining.length > maxLength) {\n            const lastSpace = remaining.slice(0, maxLength).lastIndexOf(' ');\n            if (lastSpace > 0) {\n                splitPoint = lastSpace;\n            }\n        }\n        chunks.push(remaining.slice(0, splitPoint));\n        remaining = remaining.slice(splitPoint).trim();\n    }\n    return chunks;\n}\nfunction RegisterSection(param) {\n    let { addDebugInfo } = param;\n    _s();\n    const { wallet, connected } = (0,_meshsdk_react__WEBPACK_IMPORTED_MODULE_1__.useWallet)();\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_11__.useState)(false);\n    const [canMint, setCanMint] = (0,react__WEBPACK_IMPORTED_MODULE_11__.useState)(true);\n    const [pendingTxHash, setPendingTxHash] = (0,react__WEBPACK_IMPORTED_MODULE_11__.useState)(null);\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_11__.useState)({\n        name: 'Test AI Assistant',\n        description: 'A powerful AI assistant that helps with natural language processing, code generation, and general knowledge queries. Specialized in Cardano blockchain technology.',\n        api_url: 'https://api.masumi.network/agents/test-assistant',\n        example_output: 'QmX7bJqhS7XQMnX3qhV5Z9Z9Z9Z9Z9Z9Z9Z9Z9Z9Z9Z9Z9Z',\n        version: '1.0.0',\n        author: {\n            name: 'John Doe',\n            contact: 'john@example.com',\n            organization: 'Masumi Labs'\n        },\n        requests_per_hour: 1000,\n        tags: [\n            'AI',\n            'NLP',\n            'Code Generation',\n            'Cardano'\n        ],\n        legal: {\n            \"privacy policy\": 'https://masumi.network/privacy',\n            terms: 'https://masumi.network/terms',\n            other: 'https://masumi.network/legal'\n        },\n        image: 'https://masumi.network/images/test-assistant.png',\n        paymentAddress: ''\n    });\n    const handleMetadataChange = (field, value)=>{\n        if (field.includes('.')) {\n            const [parent, child] = field.split('.');\n            setFormData((prev)=>({\n                    ...prev,\n                    [parent]: {\n                        ...prev[parent],\n                        [child]: value\n                    }\n                }));\n        } else {\n            setFormData((prev)=>({\n                    ...prev,\n                    [field]: value\n                }));\n        }\n    };\n    const formatPaymentAddress = (address)=>{\n        if (address.length <= 64) {\n            return address;\n        }\n        // Split into chunks of 64 characters\n        const chunks = [];\n        for(let i = 0; i < address.length; i += 64){\n            chunks.push(address.slice(i, i + 64));\n        }\n        return chunks;\n    };\n    const mintAsset = async ()=>{\n        if (!canMint) {\n            alert('Please wait for the previous transaction to confirm (about 20-30 seconds)');\n            return;\n        }\n        try {\n            setLoading(true);\n            setCanMint(false);\n            const paymentContractAddress = 'addr_test1wr3hvt2hw89l6ay85lr0f2nr80tckrnpjr808dxhq39xkssvw7mx8';\n            const script = {\n                code: (0,_meshsdk_core__WEBPACK_IMPORTED_MODULE_2__.applyParamsToScript)(_lib_plutus_minting_contract__WEBPACK_IMPORTED_MODULE_5__.blueprint.validators[0].compiledCode, [\n                    paymentContractAddress\n                ]),\n                version: \"V3\"\n            };\n            // Get all UTXOs\n            const utxos = await wallet.getUtxos();\n            if (utxos.length === 0) {\n                throw new Error('No UTXOs found for the specified wallet');\n            }\n            // Find a suitable UTXO for the transaction\n            const suitableUtxo = utxos.find((utxo)=>{\n                const lovelaceAmount = utxo.output.amount.find((amt)=>amt.unit === 'lovelace');\n                const hasOnlyAda = utxo.output.amount.length === 1;\n                const minRequired = BigInt(25000000); // 25 ADA\n                const isEnough = lovelaceAmount && BigInt(lovelaceAmount.quantity) > minRequired;\n                return lovelaceAmount && isEnough && hasOnlyAda;\n            });\n            if (!suitableUtxo) {\n                throw new Error('No suitable UTXO found. Need at least 25 ADA in a single UTXO with no tokens.');\n            }\n            const txId = suitableUtxo.input.txHash;\n            const txIndex = suitableUtxo.input.outputIndex;\n            const serializedOutput = txId + txIndex.toString(16).padStart(8, '0');\n            const serializedOutputUint8Array = new Uint8Array(Buffer.from(serializedOutput, 'hex'));\n            const blake2b256 = (0,ethereum_cryptography_blake2b_js__WEBPACK_IMPORTED_MODULE_4__.blake2b)(serializedOutputUint8Array, 32);\n            const assetName = Buffer.from(blake2b256).toString('hex');\n            const redeemer = {\n                data: {\n                    alternative: 0,\n                    fields: []\n                },\n                tag: 'MINT'\n            };\n            const policyId = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_3__.deserializePlutusScript)(script.code, script.version).hash().toString();\n            // Let the wallet handle collateral\n            const tx = new _meshsdk_core__WEBPACK_IMPORTED_MODULE_2__.Transaction({\n                initiator: wallet\n            }).setTxInputs([\n                suitableUtxo\n            ]);\n            tx.isCollateralNeeded = true;\n            tx.txBuilder.mintPlutusScript(script.version).mint('1', policyId, assetName).mintingScript(script.code).mintRedeemerValue(redeemer.data, 'Mesh');\n            const metadata = {\n                [policyId]: {\n                    [assetName]: {\n                        name: formData.name,\n                        description: splitLongString(formData.description),\n                        api_url: formData.api_url,\n                        example_output: formData.example_output,\n                        version: formData.version,\n                        author: {\n                            name: formData.author.name,\n                            contact: formData.author.contact,\n                            organization: formData.author.organization\n                        },\n                        requests_per_hour: formData.requests_per_hour,\n                        tags: formData.tags,\n                        legal: {\n                            \"privacy policy\": formData.legal[\"privacy policy\"],\n                            terms: formData.legal.terms,\n                            other: formData.legal.other\n                        },\n                        image: formData.image,\n                        payment_address: formatPaymentAddress(formData.paymentAddress)\n                    }\n                },\n                version: \"1.0\"\n            };\n            tx.setMetadata(721, metadata);\n            const address = await wallet.getChangeAddress();\n            tx.setRequiredSigners([\n                address\n            ]).setChangeAddress(address).sendLovelace(address, '15000000').sendAssets(address, [\n                {\n                    unit: policyId + assetName,\n                    quantity: '1'\n                }\n            ]);\n            const unsignedTx = await tx.build();\n            const signedTx = await wallet.signTx(unsignedTx, true);\n            const txHash = await wallet.submitTx(signedTx);\n            setPendingTxHash(txHash);\n            setTimeout(()=>{\n                setCanMint(true);\n                setPendingTxHash(null);\n            }, 60000);\n        } catch (error) {\n            const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n            console.error('Error minting asset:', error);\n            setCanMint(true);\n            setPendingTxHash(null);\n        } finally{\n            setLoading(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_10__.Card, {\n        className: \"col-span-12 lg:col-span-6\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-6 flex items-start justify-between\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-lg font-medium mb-2\",\n                            children: \"Register Agent\"\n                        }, void 0, false, {\n                            fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                            lineNumber: 278,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"text-sm text-muted-foreground\",\n                            children: \"Register a new agent on Masumi\"\n                        }, void 0, false, {\n                            fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                            lineNumber: 279,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                    lineNumber: 277,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                lineNumber: 276,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"p-6 pt-0\",\n                children: [\n                    !connected ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 p-4 bg-muted text-muted-foreground rounded-md\",\n                        children: \"Please connect your wallet to register an agent\"\n                    }, void 0, false, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                        lineNumber: 285,\n                        columnNumber: 11\n                    }, this) : pendingTxHash ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 p-4 bg-muted text-muted-foreground rounded-md\",\n                        children: [\n                            \"Transaction pending: \",\n                            pendingTxHash,\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 291,\n                                columnNumber: 13\n                            }, this),\n                            \"Please wait for confirmation before registering another agent.\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                        lineNumber: 289,\n                        columnNumber: 11\n                    }, this) : null,\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"space-y-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Agent Name\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 300,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.name,\n                                                onChange: (e)=>handleMetadataChange('name', e.target.value),\n                                                placeholder: \"My AI Agent\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 301,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 299,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Description\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 309,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_textarea__WEBPACK_IMPORTED_MODULE_9__.Textarea, {\n                                                value: formData.description,\n                                                onChange: (e)=>handleMetadataChange('description', e.target.value),\n                                                placeholder: \"Describe what your agent does...\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 310,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 308,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Version\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 318,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.version,\n                                                onChange: (e)=>handleMetadataChange('version', e.target.value),\n                                                placeholder: \"1.0.0\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 319,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 317,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 298,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Author Name\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 330,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.author.name,\n                                                onChange: (e)=>handleMetadataChange('author.name', e.target.value)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 331,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 329,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Contact Email\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 338,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                type: \"email\",\n                                                value: formData.author.contact,\n                                                onChange: (e)=>handleMetadataChange('author.contact', e.target.value)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 339,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 337,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Organization\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 347,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.author.organization,\n                                                onChange: (e)=>handleMetadataChange('author.organization', e.target.value)\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 348,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 346,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 328,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"API Endpoint\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 358,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.api_url,\n                                                onChange: (e)=>handleMetadataChange('api_url', e.target.value),\n                                                placeholder: \"https://api.example.com/agent\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 359,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 357,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Example Output (IPFS Hash)\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 367,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.example_output,\n                                                onChange: (e)=>handleMetadataChange('example_output', e.target.value),\n                                                placeholder: \"QmXyz...\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 368,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 366,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Requests per Hour\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 376,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                type: \"number\",\n                                                value: formData.requests_per_hour,\n                                                onChange: (e)=>handleMetadataChange('requests_per_hour', parseInt(e.target.value))\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 377,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 375,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 356,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Privacy Policy URL\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 388,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.legal[\"privacy policy\"],\n                                                onChange: (e)=>handleMetadataChange('legal.privacy policy', e.target.value),\n                                                placeholder: \"https://example.com/privacy\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 389,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 387,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Terms of Service URL\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 397,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.legal.terms,\n                                                onChange: (e)=>handleMetadataChange('legal.terms', e.target.value),\n                                                placeholder: \"https://example.com/terms\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 398,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 396,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                                children: \"Other Legal Documentation (Optional)\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 406,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                                value: formData.legal.other,\n                                                onChange: (e)=>handleMetadataChange('legal.other', e.target.value),\n                                                placeholder: \"https://example.com/other\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                                lineNumber: 407,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                        lineNumber: 405,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 386,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-y-4\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_label__WEBPACK_IMPORTED_MODULE_8__.Label, {\n                                            htmlFor: \"paymentAddress\",\n                                            children: \"Payment Address\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                            lineNumber: 417,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_7__.Input, {\n                                            id: \"paymentAddress\",\n                                            value: formData.paymentAddress,\n                                            onChange: (e)=>setFormData((prev)=>({\n                                                        ...prev,\n                                                        paymentAddress: e.target.value\n                                                    })),\n                                            placeholder: \"Enter the Cardano address that will receive payments\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                            lineNumber: 418,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                            className: \"text-sm text-muted-foreground mt-1\",\n                                            children: \"This address will receive payments when users interact with your agent\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                            lineNumber: 427,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                    lineNumber: 416,\n                                    columnNumber: 13\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 415,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_6__.Button, {\n                                onClick: mintAsset,\n                                disabled: !connected || loading || !canMint,\n                                className: \"w-full\",\n                                children: loading ? 'Processing...' : !canMint ? 'Waiting for confirmation...' : 'Register Agent'\n                            }, void 0, false, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                                lineNumber: 433,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                        lineNumber: 296,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n                lineNumber: 283,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/dashboard/register/register-section.tsx\",\n        lineNumber: 275,\n        columnNumber: 5\n    }, this);\n}\n_s(RegisterSection, \"MfZwvP7EL7ufJtBHB2ayjpCROMc=\", false, function() {\n    return [\n        _meshsdk_react__WEBPACK_IMPORTED_MODULE_1__.useWallet\n    ];\n});\n_c = RegisterSection;\nvar _c;\n$RefreshReg$(_c, \"RegisterSection\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/dashboard/register/register-section.tsx\n"));

/***/ }),

/***/ "./src/components/ui/card.tsx":
/*!************************************!*\
  !*** ./src/components/ui/card.tsx ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   CardContent: () => (/* binding */ CardContent),\n/* harmony export */   CardDescription: () => (/* binding */ CardDescription),\n/* harmony export */   CardFooter: () => (/* binding */ CardFooter),\n/* harmony export */   CardHeader: () => (/* binding */ CardHeader),\n/* harmony export */   CardTitle: () => (/* binding */ CardTitle)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"./src/lib/utils.ts\");\n\n\n\nconst Card = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"shadow border border-border rounded-2xl\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 9,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = Card;\nCard.displayName = \"Card\";\nconst CardHeader = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c2 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex flex-col space-y-1.5 p-6\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 21,\n        columnNumber: 3\n    }, undefined);\n});\n_c3 = CardHeader;\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c4 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-2xl font-semibold leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 33,\n        columnNumber: 3\n    }, undefined);\n});\n_c5 = CardTitle;\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c6 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-sm text-muted-foreground\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 48,\n        columnNumber: 3\n    }, undefined);\n});\n_c7 = CardDescription;\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c8 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 60,\n        columnNumber: 3\n    }, undefined);\n});\n_c9 = CardContent;\nCardContent.displayName = \"CardContent\";\nconst CardFooter = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c10 = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex items-center p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/card.tsx\",\n        lineNumber: 68,\n        columnNumber: 3\n    }, undefined);\n});\n_c11 = CardFooter;\nCardFooter.displayName = \"CardFooter\";\n\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Card$React.forwardRef\");\n$RefreshReg$(_c1, \"Card\");\n$RefreshReg$(_c2, \"CardHeader$React.forwardRef\");\n$RefreshReg$(_c3, \"CardHeader\");\n$RefreshReg$(_c4, \"CardTitle$React.forwardRef\");\n$RefreshReg$(_c5, \"CardTitle\");\n$RefreshReg$(_c6, \"CardDescription$React.forwardRef\");\n$RefreshReg$(_c7, \"CardDescription\");\n$RefreshReg$(_c8, \"CardContent$React.forwardRef\");\n$RefreshReg$(_c9, \"CardContent\");\n$RefreshReg$(_c10, \"CardFooter$React.forwardRef\");\n$RefreshReg$(_c11, \"CardFooter\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy91aS9jYXJkLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErQjtBQUVFO0FBRWpDLE1BQU1FLHFCQUFPRiw2Q0FBZ0IsTUFHM0IsUUFBMEJJO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEMsV0FBV0osOENBQUVBLENBQUMsMkNBQTJDSTtRQUN4RCxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiSixLQUFLTSxXQUFXLEdBQUc7QUFFbkIsTUFBTUMsMkJBQWFULDZDQUFnQixPQUdqQyxRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDQztRQUNDSCxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FBQyxpQ0FBaUNJO1FBQzlDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JHLFdBQVdELFdBQVcsR0FBRztBQUV6QixNQUFNRSwwQkFBWVYsNkNBQWdCLE9BR2hDLFFBQTBCSTtRQUF6QixFQUFFQyxTQUFTLEVBQUUsR0FBR0MsT0FBTzt5QkFDeEIsOERBQUNLO1FBQ0NQLEtBQUtBO1FBQ0xDLFdBQVdKLDhDQUFFQSxDQUNYLHNEQUNBSTtRQUVELEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JJLFVBQVVGLFdBQVcsR0FBRztBQUV4QixNQUFNSSxnQ0FBa0JaLDZDQUFnQixPQUd0QyxRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87eUJBQ3hCLDhEQUFDTztRQUNDVCxLQUFLQTtRQUNMQyxXQUFXSiw4Q0FBRUEsQ0FBQyxpQ0FBaUNJO1FBQzlDLEdBQUdDLEtBQUs7Ozs7Ozs7O0FBR2JNLGdCQUFnQkosV0FBVyxHQUFHO0FBRTlCLE1BQU1NLDRCQUFjZCw2Q0FBZ0IsT0FHbEMsUUFBMEJJO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFBSUgsS0FBS0E7UUFBS0MsV0FBV0osOENBQUVBLENBQUMsWUFBWUk7UUFBYSxHQUFHQyxLQUFLOzs7Ozs7OztBQUVoRVEsWUFBWU4sV0FBVyxHQUFHO0FBRTFCLE1BQU1PLDJCQUFhZiw2Q0FBZ0IsUUFHakMsUUFBMEJJO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ0M7UUFDQ0gsS0FBS0E7UUFDTEMsV0FBV0osOENBQUVBLENBQUMsOEJBQThCSTtRQUMzQyxHQUFHQyxLQUFLOzs7Ozs7OztBQUdiUyxXQUFXUCxXQUFXLEdBQUc7QUFTdkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9zcmMvY29tcG9uZW50cy91aS9jYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIjtcblxuY29uc3QgQ2FyZCA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxEaXZFbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPGRpdlxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJzaGFkb3cgYm9yZGVyIGJvcmRlci1ib3JkZXIgcm91bmRlZC0yeGxcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKTtcbkNhcmQuZGlzcGxheU5hbWUgPSBcIkNhcmRcIjtcblxuY29uc3QgQ2FyZEhlYWRlciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxEaXZFbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPGRpdlxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJmbGV4IGZsZXgtY29sIHNwYWNlLXktMS41IHAtNlwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpO1xuQ2FyZEhlYWRlci5kaXNwbGF5TmFtZSA9IFwiQ2FyZEhlYWRlclwiO1xuXG5jb25zdCBDYXJkVGl0bGUgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBIVE1MUGFyYWdyYXBoRWxlbWVudCxcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50PlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8aDNcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgXCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodFwiLFxuICAgICAgY2xhc3NOYW1lXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKTtcbkNhcmRUaXRsZS5kaXNwbGF5TmFtZSA9IFwiQ2FyZFRpdGxlXCI7XG5cbmNvbnN0IENhcmREZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxQYXJhZ3JhcGhFbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MUGFyYWdyYXBoRWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPHBcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKFwidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIiwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKTtcbkNhcmREZXNjcmlwdGlvbi5kaXNwbGF5TmFtZSA9IFwiQ2FyZERlc2NyaXB0aW9uXCI7XG5cbmNvbnN0IENhcmRDb250ZW50ID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgSFRNTERpdkVsZW1lbnQsXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxuPigoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4gKFxuICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKFwicC02IHB0LTBcIiwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxuKSk7XG5DYXJkQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiQ2FyZENvbnRlbnRcIjtcblxuY29uc3QgQ2FyZEZvb3RlciA9IFJlYWN0LmZvcndhcmRSZWY8XG4gIEhUTUxEaXZFbGVtZW50LFxuICBSZWFjdC5IVE1MQXR0cmlidXRlczxIVE1MRGl2RWxlbWVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPGRpdlxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlciBwLTYgcHQtMFwiLCBjbGFzc05hbWUpfVxuICAgIHsuLi5wcm9wc31cbiAgLz5cbikpO1xuQ2FyZEZvb3Rlci5kaXNwbGF5TmFtZSA9IFwiQ2FyZEZvb3RlclwiO1xuXG5leHBvcnQge1xuICBDYXJkLFxuICBDYXJkSGVhZGVyLFxuICBDYXJkRm9vdGVyLFxuICBDYXJkVGl0bGUsXG4gIENhcmREZXNjcmlwdGlvbixcbiAgQ2FyZENvbnRlbnQsXG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY24iLCJDYXJkIiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwiZGl2IiwiZGlzcGxheU5hbWUiLCJDYXJkSGVhZGVyIiwiQ2FyZFRpdGxlIiwiaDMiLCJDYXJkRGVzY3JpcHRpb24iLCJwIiwiQ2FyZENvbnRlbnQiLCJDYXJkRm9vdGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ui/card.tsx\n"));

/***/ }),

/***/ "./src/components/ui/input.tsx":
/*!*************************************!*\
  !*** ./src/components/ui/input.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Input: () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"./src/lib/utils.ts\");\n\n\n\nconst Input = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, type, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n        type: type,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/input.tsx\",\n        lineNumber: 11,\n        columnNumber: 7\n    }, undefined);\n});\n_c1 = Input;\nInput.displayName = \"Input\";\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c1, \"Input\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy91aS9pbnB1dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThCO0FBRUU7QUFLaEMsTUFBTUUsc0JBQVFGLDZDQUFnQixNQUM1QixRQUFnQ0k7UUFBL0IsRUFBRUMsU0FBUyxFQUFFQyxJQUFJLEVBQUUsR0FBR0MsT0FBTztJQUM1QixxQkFDRSw4REFBQ0M7UUFDQ0YsTUFBTUE7UUFDTkQsV0FBV0osOENBQUVBLENBQ1gsZ1dBQ0FJO1FBRUZELEtBQUtBO1FBQ0osR0FBR0csS0FBSzs7Ozs7O0FBR2Y7O0FBRUZMLE1BQU1PLFdBQVcsR0FBRztBQUVKIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvc3JjL2NvbXBvbmVudHMvdWkvaW5wdXQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuZXhwb3J0IGludGVyZmFjZSBJbnB1dFByb3BzXG4gIGV4dGVuZHMgUmVhY3QuSW5wdXRIVE1MQXR0cmlidXRlczxIVE1MSW5wdXRFbGVtZW50PiB7fVxuXG5jb25zdCBJbnB1dCA9IFJlYWN0LmZvcndhcmRSZWY8SFRNTElucHV0RWxlbWVudCwgSW5wdXRQcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgdHlwZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxpbnB1dFxuICAgICAgICB0eXBlPXt0eXBlfVxuICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgIFwiZmxleCBoLTEwIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBweC0zIHB5LTIgdGV4dC1zbSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGZpbGU6Ym9yZGVyLTAgZmlsZTpiZy10cmFuc3BhcmVudCBmaWxlOnRleHQtc20gZmlsZTpmb250LW1lZGl1bSBwbGFjZWhvbGRlcjp0ZXh0LW11dGVkLWZvcmVncm91bmQgZm9jdXMtdmlzaWJsZTpvdXRsaW5lLW5vbmUgZm9jdXMtdmlzaWJsZTpyaW5nLTIgZm9jdXMtdmlzaWJsZTpyaW5nLXJpbmcgZm9jdXMtdmlzaWJsZTpyaW5nLW9mZnNldC0yIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCBkaXNhYmxlZDpvcGFjaXR5LTUwXCIsXG4gICAgICAgICAgY2xhc3NOYW1lXG4gICAgICAgICl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAvPlxuICAgIClcbiAgfVxuKVxuSW5wdXQuZGlzcGxheU5hbWUgPSBcIklucHV0XCJcblxuZXhwb3J0IHsgSW5wdXQgfVxuIl0sIm5hbWVzIjpbIlJlYWN0IiwiY24iLCJJbnB1dCIsImZvcndhcmRSZWYiLCJyZWYiLCJjbGFzc05hbWUiLCJ0eXBlIiwicHJvcHMiLCJpbnB1dCIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/ui/input.tsx\n"));

/***/ }),

/***/ "./src/components/ui/label.tsx":
/*!*************************************!*\
  !*** ./src/components/ui/label.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-label */ \"./node_modules/@radix-ui/react-label/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"./src/lib/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ Label auto */ \n\n\n\n\nconst labelVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\");\nconst Label = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__.Root, {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(labelVariants(), className),\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/label.tsx\",\n        lineNumber: 18,\n        columnNumber: 3\n    }, undefined);\n});\n_c1 = Label;\nLabel.displayName = _radix_ui_react_label__WEBPACK_IMPORTED_MODULE_4__.Root.displayName;\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Label$React.forwardRef\");\n$RefreshReg$(_c1, \"Label\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy91aS9sYWJlbC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFFOEI7QUFDeUI7QUFDVTtBQUVqQztBQUVoQyxNQUFNSSxnQkFBZ0JGLDZEQUFHQSxDQUN2QjtBQUdGLE1BQU1HLHNCQUFRTCw2Q0FBZ0IsTUFJNUIsUUFBMEJPO1FBQXpCLEVBQUVDLFNBQVMsRUFBRSxHQUFHQyxPQUFPO3lCQUN4Qiw4REFBQ1IsdURBQW1CO1FBQ2xCTSxLQUFLQTtRQUNMQyxXQUFXTCw4Q0FBRUEsQ0FBQ0MsaUJBQWlCSTtRQUM5QixHQUFHQyxLQUFLOzs7Ozs7OztBQUdiSixNQUFNTSxXQUFXLEdBQUdWLHVEQUFtQixDQUFDVSxXQUFXO0FBRW5DIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvc3JjL2NvbXBvbmVudHMvdWkvbGFiZWwudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgKiBhcyBMYWJlbFByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWxhYmVsXCJcbmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tIFwiY2xhc3MtdmFyaWFuY2UtYXV0aG9yaXR5XCJcblxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxuXG5jb25zdCBsYWJlbFZhcmlhbnRzID0gY3ZhKFxuICBcInRleHQtc20gZm9udC1tZWRpdW0gbGVhZGluZy1ub25lIHBlZXItZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIHBlZXItZGlzYWJsZWQ6b3BhY2l0eS03MFwiXG4pXG5cbmNvbnN0IExhYmVsID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgTGFiZWxQcmltaXRpdmUuUm9vdD4sXG4gIFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aG91dFJlZjx0eXBlb2YgTGFiZWxQcmltaXRpdmUuUm9vdD4gJlxuICAgIFZhcmlhbnRQcm9wczx0eXBlb2YgbGFiZWxWYXJpYW50cz5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPExhYmVsUHJpbWl0aXZlLlJvb3RcbiAgICByZWY9e3JlZn1cbiAgICBjbGFzc05hbWU9e2NuKGxhYmVsVmFyaWFudHMoKSwgY2xhc3NOYW1lKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuTGFiZWwuZGlzcGxheU5hbWUgPSBMYWJlbFByaW1pdGl2ZS5Sb290LmRpc3BsYXlOYW1lXG5cbmV4cG9ydCB7IExhYmVsIH1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkxhYmVsUHJpbWl0aXZlIiwiY3ZhIiwiY24iLCJsYWJlbFZhcmlhbnRzIiwiTGFiZWwiLCJmb3J3YXJkUmVmIiwicmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJSb290IiwiZGlzcGxheU5hbWUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/ui/label.tsx\n"));

/***/ }),

/***/ "./src/components/ui/textarea.tsx":
/*!****************************************!*\
  !*** ./src/components/ui/textarea.tsx ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Textarea: () => (/* binding */ Textarea)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"./src/lib/utils.ts\");\n\n\n\nconst Textarea = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(_c = (param, ref)=>{\n    let { className, ...props } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"textarea\", {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\", className),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/components/ui/textarea.tsx\",\n        lineNumber: 11,\n        columnNumber: 7\n    }, undefined);\n});\n_c1 = Textarea;\nTextarea.displayName = \"Textarea\";\n\nvar _c, _c1;\n$RefreshReg$(_c, \"Textarea$React.forwardRef\");\n$RefreshReg$(_c1, \"Textarea\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy91aS90ZXh0YXJlYS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThCO0FBRUU7QUFLaEMsTUFBTUUseUJBQVdGLDZDQUFnQixNQUMvQixRQUEwQkk7UUFBekIsRUFBRUMsU0FBUyxFQUFFLEdBQUdDLE9BQU87SUFDdEIscUJBQ0UsOERBQUNDO1FBQ0NGLFdBQVdKLDhDQUFFQSxDQUNYLHdTQUNBSTtRQUVGRCxLQUFLQTtRQUNKLEdBQUdFLEtBQUs7Ozs7OztBQUdmOztBQUVGSixTQUFTTSxXQUFXLEdBQUc7QUFFSiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL3NyYy9jb21wb25lbnRzL3VpL3RleHRhcmVhLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuXG5pbXBvcnQgeyBjbiB9IGZyb20gXCJAL2xpYi91dGlsc1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgVGV4dGFyZWFQcm9wc1xuICBleHRlbmRzIFJlYWN0LlRleHRhcmVhSFRNTEF0dHJpYnV0ZXM8SFRNTFRleHRBcmVhRWxlbWVudD4ge31cblxuY29uc3QgVGV4dGFyZWEgPSBSZWFjdC5mb3J3YXJkUmVmPEhUTUxUZXh0QXJlYUVsZW1lbnQsIFRleHRhcmVhUHJvcHM+KFxuICAoeyBjbGFzc05hbWUsIC4uLnByb3BzIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8dGV4dGFyZWFcbiAgICAgICAgY2xhc3NOYW1lPXtjbihcbiAgICAgICAgICBcImZsZXggbWluLWgtWzgwcHhdIHctZnVsbCByb3VuZGVkLW1kIGJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBweC0zIHB5LTIgdGV4dC1zbSByaW5nLW9mZnNldC1iYWNrZ3JvdW5kIHBsYWNlaG9sZGVyOnRleHQtbXV0ZWQtZm9yZWdyb3VuZCBmb2N1cy12aXNpYmxlOm91dGxpbmUtbm9uZSBmb2N1cy12aXNpYmxlOnJpbmctMiBmb2N1cy12aXNpYmxlOnJpbmctcmluZyBmb2N1cy12aXNpYmxlOnJpbmctb2Zmc2V0LTIgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIGRpc2FibGVkOm9wYWNpdHktNTBcIixcbiAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgKX1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKVxuICB9XG4pXG5UZXh0YXJlYS5kaXNwbGF5TmFtZSA9IFwiVGV4dGFyZWFcIlxuXG5leHBvcnQgeyBUZXh0YXJlYSB9XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJjbiIsIlRleHRhcmVhIiwiZm9yd2FyZFJlZiIsInJlZiIsImNsYXNzTmFtZSIsInByb3BzIiwidGV4dGFyZWEiLCJkaXNwbGF5TmFtZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/ui/textarea.tsx\n"));

/***/ }),

/***/ "./src/lib/plutus-minting-contract.ts":
/*!********************************************!*\
  !*** ./src/lib/plutus-minting-contract.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blueprint: () => (/* binding */ blueprint)\n/* harmony export */ });\n/* harmony import */ var _plutus_minting_contract_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../plutus-minting-contract.json */ \"./plutus-minting-contract.json\");\n\nconst blueprint = _plutus_minting_contract_json__WEBPACK_IMPORTED_MODULE_0__;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL3BsdXR1cy1taW50aW5nLWNvbnRyYWN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBQzFELE1BQU1DLFlBQVlELDBEQUFlQSxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvc3JjL2xpYi9wbHV0dXMtbWludGluZy1jb250cmFjdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWludGluZ0NvbnRyYWN0IGZyb20gJy4uLy4uL3BsdXR1cy1taW50aW5nLWNvbnRyYWN0Lmpzb24nO1xuZXhwb3J0IGNvbnN0IGJsdWVwcmludCA9IG1pbnRpbmdDb250cmFjdDsgIl0sIm5hbWVzIjpbIm1pbnRpbmdDb250cmFjdCIsImJsdWVwcmludCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/lib/plutus-minting-contract.ts\n"));

/***/ }),

/***/ "./src/pages/register-agent.tsx":
/*!**************************************!*\
  !*** ./src/pages/register-agent.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RegisterAgent)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_dashboard_register_register_section__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/dashboard/register/register-section */ \"./src/components/dashboard/register/register-section.tsx\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_components_dashboard_register_register_section__WEBPACK_IMPORTED_MODULE_2__]);\n_components_dashboard_register_register_section__WEBPACK_IMPORTED_MODULE_2__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction RegisterAgent() {\n    _s();\n    const [debugInfo, setDebugInfo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const addDebugInfo = (info)=>{\n        console.log(info);\n        setDebugInfo((prev)=>[\n                ...prev,\n                \"\".concat(new Date().toISOString(), \": \").concat(info)\n            ]);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto py-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-2xl font-semibold\",\n                        children: \"Register New Agent\"\n                    }, void 0, false, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-muted-foreground\",\n                        children: \"Add your AI agent to the Masumi registry\"\n                    }, void 0, false, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                        lineNumber: 19,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                lineNumber: 17,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-cols-12 gap-6\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-span-12 lg:col-span-8\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_dashboard_register_register_section__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            addDebugInfo: addDebugInfo\n                        }, void 0, false, {\n                            fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                            lineNumber: 24,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                        lineNumber: 23,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"col-span-12 lg:col-span-4 space-y-4\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-muted rounded-lg p-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-sm font-medium mb-2\",\n                                        children: \"Debug Information\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                        lineNumber: 30,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"text-xs font-mono text-muted-foreground max-h-[400px] overflow-y-auto whitespace-pre-wrap\",\n                                        children: debugInfo.map((info, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"mb-1\",\n                                                children: info\n                                            }, index, false, {\n                                                fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                                lineNumber: 33,\n                                                columnNumber: 17\n                                            }, this))\n                                    }, void 0, false, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                        lineNumber: 31,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                lineNumber: 29,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"bg-muted rounded-lg p-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                                        className: \"text-sm font-medium mb-2\",\n                                        children: \"Metadata Template\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                        lineNumber: 40,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                                        className: \"text-xs font-mono text-muted-foreground overflow-x-auto\",\n                                        children: 'Metadata Template:\\n{\\n  \"<policy id>\": {\\n    \"<asset_name>\": {\\n      \"name\": \"<name>\",\\n      \"description\": \"<description>\",\\n      \"api_url\": \"<api_url>\",\\n      \"example_output\": \"<ipfs_hash>\",\\n      \"version\": \"<version>\",\\n      \"author\": {\\n        \"name\": \"<author_name>\",\\n        \"contact\": \"<author_contact_details>\",\\n        \"organization\": \"<author_orga>\"\\n      },\\n      \"payment_address\": \"<cardano_address>\",\\n      \"requests_per_hour\": \"request_amount\",\\n      \"tags\": [\\n        \"<tag>\"\\n      ],\\n      \"legal\": {\\n        \"privacy policy\": \"<url>\",\\n        \"terms\": \"<url>\",\\n        \"other\": \"<url>\"\\n      },\\n      \"image\": \"http://example.com/path/to/image.png\"\\n    }\\n  },\\n  \"version\": \"1.0\"\\n}'\n                                    }, void 0, false, {\n                                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                        lineNumber: 41,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                                lineNumber: 39,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n                lineNumber: 22,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/patricktobler/masumi-explorer/src/pages/register-agent.tsx\",\n        lineNumber: 16,\n        columnNumber: 5\n    }, this);\n}\n_s(RegisterAgent, \"5sSdzqfi49UEIbX5r51gHXYO7b0=\");\n_c = RegisterAgent;\nvar _c;\n$RefreshReg$(_c, \"RegisterAgent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvcmVnaXN0ZXItYWdlbnQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFFaUM7QUFDOEM7QUFHaEUsU0FBU0U7O0lBQ3RCLE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHSiwrQ0FBUUEsQ0FBVyxFQUFFO0lBRXZELE1BQU1LLGVBQWUsQ0FBQ0M7UUFDcEJDLFFBQVFDLEdBQUcsQ0FBQ0Y7UUFDWkYsYUFBYUssQ0FBQUEsT0FBUTttQkFBSUE7Z0JBQU8sR0FBK0JILE9BQTdCLElBQUlJLE9BQU9DLFdBQVcsSUFBRyxNQUFTLE9BQUxMO2FBQU87SUFDeEU7SUFFQSxxQkFDRSw4REFBQ007UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0M7d0JBQUdELFdBQVU7a0NBQXlCOzs7Ozs7a0NBQ3ZDLDhEQUFDRTt3QkFBRUYsV0FBVTtrQ0FBd0I7Ozs7Ozs7Ozs7OzswQkFHdkMsOERBQUNEO2dCQUFJQyxXQUFVOztrQ0FDYiw4REFBQ0Q7d0JBQUlDLFdBQVU7a0NBQ2IsNEVBQUNaLHVGQUFlQTs0QkFBQ0ksY0FBY0E7Ozs7Ozs7Ozs7O2tDQUdqQyw4REFBQ087d0JBQUlDLFdBQVU7OzBDQUViLDhEQUFDRDtnQ0FBSUMsV0FBVTs7a0RBQ2IsOERBQUNHO3dDQUFHSCxXQUFVO2tEQUEyQjs7Ozs7O2tEQUN6Qyw4REFBQ0Q7d0NBQUlDLFdBQVU7a0RBQ1pWLFVBQVVjLEdBQUcsQ0FBQyxDQUFDWCxNQUFNWSxzQkFDcEIsOERBQUNOO2dEQUFnQkMsV0FBVTswREFBUVA7K0NBQXpCWTs7Ozs7Ozs7Ozs7Ozs7OzswQ0FNaEIsOERBQUNOO2dDQUFJQyxXQUFVOztrREFDYiw4REFBQ0c7d0NBQUdILFdBQVU7a0RBQTJCOzs7Ozs7a0RBQ3pDLDhEQUFDTTt3Q0FBSU4sV0FBVTtrREFDWDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUNoQjtHQXRFd0JYO0tBQUFBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvc3JjL3BhZ2VzL3JlZ2lzdGVyLWFnZW50LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBSZWdpc3RlclNlY3Rpb24gZnJvbSBcIkAvY29tcG9uZW50cy9kYXNoYm9hcmQvcmVnaXN0ZXIvcmVnaXN0ZXItc2VjdGlvblwiO1xuaW1wb3J0IHsgYmx1ZXByaW50IH0gZnJvbSBcIkAvbGliL3BsdXR1cy1taW50aW5nLWNvbnRyYWN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFJlZ2lzdGVyQWdlbnQoKSB7XG4gIGNvbnN0IFtkZWJ1Z0luZm8sIHNldERlYnVnSW5mb10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xuXG4gIGNvbnN0IGFkZERlYnVnSW5mbyA9IChpbmZvOiBzdHJpbmcpID0+IHtcbiAgICBjb25zb2xlLmxvZyhpbmZvKTtcbiAgICBzZXREZWJ1Z0luZm8ocHJldiA9PiBbLi4ucHJldiwgYCR7bmV3IERhdGUoKS50b0lTT1N0cmluZygpfTogJHtpbmZvfWBdKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyIG14LWF1dG8gcHktOFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi02XCI+XG4gICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkXCI+UmVnaXN0ZXIgTmV3IEFnZW50PC9oMT5cbiAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+QWRkIHlvdXIgQUkgYWdlbnQgdG8gdGhlIE1hc3VtaSByZWdpc3RyeTwvcD5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTEyIGdhcC02XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNwYW4tMTIgbGc6Y29sLXNwYW4tOFwiPlxuICAgICAgICAgIDxSZWdpc3RlclNlY3Rpb24gYWRkRGVidWdJbmZvPXthZGREZWJ1Z0luZm99IC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLXNwYW4tMTIgbGc6Y29sLXNwYW4tNCBzcGFjZS15LTRcIj5cbiAgICAgICAgICB7LyogRGVidWcgSW5mb3JtYXRpb24gKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1tdXRlZCByb3VuZGVkLWxnIHAtNFwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gbWItMlwiPkRlYnVnIEluZm9ybWF0aW9uPC9oMz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyBmb250LW1vbm8gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG1heC1oLVs0MDBweF0gb3ZlcmZsb3cteS1hdXRvIHdoaXRlc3BhY2UtcHJlLXdyYXBcIj5cbiAgICAgICAgICAgICAge2RlYnVnSW5mby5tYXAoKGluZm8sIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2luZGV4fSBjbGFzc05hbWU9XCJtYi0xXCI+e2luZm99PC9kaXY+XG4gICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICB7LyogTWV0YWRhdGEgVGVtcGxhdGUgKi99XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy1tdXRlZCByb3VuZGVkLWxnIHAtNFwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gbWItMlwiPk1ldGFkYXRhIFRlbXBsYXRlPC9oMz5cbiAgICAgICAgICAgIDxwcmUgY2xhc3NOYW1lPVwidGV4dC14cyBmb250LW1vbm8gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kIG92ZXJmbG93LXgtYXV0b1wiPlxuICAgICAgICAgICAgICB7YE1ldGFkYXRhIFRlbXBsYXRlOlxue1xuICBcIjxwb2xpY3kgaWQ+XCI6IHtcbiAgICBcIjxhc3NldF9uYW1lPlwiOiB7XG4gICAgICBcIm5hbWVcIjogXCI8bmFtZT5cIixcbiAgICAgIFwiZGVzY3JpcHRpb25cIjogXCI8ZGVzY3JpcHRpb24+XCIsXG4gICAgICBcImFwaV91cmxcIjogXCI8YXBpX3VybD5cIixcbiAgICAgIFwiZXhhbXBsZV9vdXRwdXRcIjogXCI8aXBmc19oYXNoPlwiLFxuICAgICAgXCJ2ZXJzaW9uXCI6IFwiPHZlcnNpb24+XCIsXG4gICAgICBcImF1dGhvclwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcIjxhdXRob3JfbmFtZT5cIixcbiAgICAgICAgXCJjb250YWN0XCI6IFwiPGF1dGhvcl9jb250YWN0X2RldGFpbHM+XCIsXG4gICAgICAgIFwib3JnYW5pemF0aW9uXCI6IFwiPGF1dGhvcl9vcmdhPlwiXG4gICAgICB9LFxuICAgICAgXCJwYXltZW50X2FkZHJlc3NcIjogXCI8Y2FyZGFub19hZGRyZXNzPlwiLFxuICAgICAgXCJyZXF1ZXN0c19wZXJfaG91clwiOiBcInJlcXVlc3RfYW1vdW50XCIsXG4gICAgICBcInRhZ3NcIjogW1xuICAgICAgICBcIjx0YWc+XCJcbiAgICAgIF0sXG4gICAgICBcImxlZ2FsXCI6IHtcbiAgICAgICAgXCJwcml2YWN5IHBvbGljeVwiOiBcIjx1cmw+XCIsXG4gICAgICAgIFwidGVybXNcIjogXCI8dXJsPlwiLFxuICAgICAgICBcIm90aGVyXCI6IFwiPHVybD5cIlxuICAgICAgfSxcbiAgICAgIFwiaW1hZ2VcIjogXCJodHRwOi8vZXhhbXBsZS5jb20vcGF0aC90by9pbWFnZS5wbmdcIlxuICAgIH1cbiAgfSxcbiAgXCJ2ZXJzaW9uXCI6IFwiMS4wXCJcbn1gfVxuICAgICAgICAgICAgPC9wcmU+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwiUmVnaXN0ZXJTZWN0aW9uIiwiUmVnaXN0ZXJBZ2VudCIsImRlYnVnSW5mbyIsInNldERlYnVnSW5mbyIsImFkZERlYnVnSW5mbyIsImluZm8iLCJjb25zb2xlIiwibG9nIiwicHJldiIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImRpdiIsImNsYXNzTmFtZSIsImgxIiwicCIsImgzIiwibWFwIiwiaW5kZXgiLCJwcmUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/register-agent.tsx\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryReader: () => (/* binding */ BinaryReader),\n/* harmony export */   BinaryWriter: () => (/* binding */ BinaryWriter),\n/* harmony export */   WireType: () => (/* binding */ WireType)\n/* harmony export */ });\n/* harmony import */ var _google_varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/varint.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\");\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nclass BinaryWriter {\n    constructor(textEncoder) {\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.textEncoder.encode(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertFloat32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertUInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assertInt32)(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uEnc(value);\n        (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nclass BinaryReader {\n    constructor(buf, textDecoder) {\n        this.varint64 = _google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = _google_varint_js__WEBPACK_IMPORTED_MODULE_1__.varint32read; // dirty cast for `this` and access to protected `buf`\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n        this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line\n            // @ts-ignore TS7029: Fallthrough case in switch\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return _proto_int64_js__WEBPACK_IMPORTED_MODULE_2__.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.textDecoder.decode(this.bytes());\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearExtension: () => (/* binding */ clearExtension),\n/* harmony export */   getExtension: () => (/* binding */ getExtension),\n/* harmony export */   hasExtension: () => (/* binding */ hasExtension),\n/* harmony export */   setExtension: () => (/* binding */ setExtension)\n/* harmony export */ });\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _private_extensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Retrieve an extension value from a message.\n *\n * The function never returns undefined. Use hasExtension() to check whether an\n * extension is set. If the extension is not set, this function returns the\n * default value (if one was specified in the protobuf source), or the zero value\n * (for example `0` for numeric types, `[]` for repeated extension fields, and\n * an empty message instance for message fields).\n *\n * Extensions are stored as unknown fields on a message. To mutate an extension\n * value, make sure to store the new value with setExtension() after mutating.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction getExtension(message, extension, options) {\n    assertExtendee(extension, message);\n    const opt = extension.runtime.bin.makeReadOptions(options);\n    const ufs = (0,_private_extensions_js__WEBPACK_IMPORTED_MODULE_0__.filterUnknownFields)(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n    const [container, get] = (0,_private_extensions_js__WEBPACK_IMPORTED_MODULE_0__.createExtensionContainer)(extension);\n    for (const uf of ufs) {\n        extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n    }\n    return get();\n}\n/**\n * Set an extension value on a message. If the message already has a value for\n * this extension, the value is replaced.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction setExtension(message, extension, value, options) {\n    assertExtendee(extension, message);\n    const readOpt = extension.runtime.bin.makeReadOptions(options);\n    const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n    if (hasExtension(message, extension)) {\n        const ufs = message\n            .getType()\n            .runtime.bin.listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        message.getType().runtime.bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            message\n                .getType()\n                .runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n    const writer = writeOpt.writerFactory();\n    let f = extension.field;\n    // Implicit presence does not apply to extensions, see https://github.com/protocolbuffers/protobuf/issues/8234\n    // We patch the field info to use explicit presence:\n    if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n        f = Object.assign(Object.assign({}, extension.field), { opt: true });\n    }\n    extension.runtime.bin.writeField(f, value, writer, writeOpt);\n    const reader = readOpt.readerFactory(writer.finish());\n    while (reader.pos < reader.len) {\n        const [no, wireType] = reader.tag();\n        const data = reader.skip(wireType, no);\n        message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n    }\n}\n/**\n * Remove an extension value from a message.\n *\n * If the extension does not extend the given message, an error is raised.\n */\nfunction clearExtension(message, extension) {\n    assertExtendee(extension, message);\n    if (hasExtension(message, extension)) {\n        const bin = message.getType().runtime.bin;\n        const ufs = bin\n            .listUnknownFields(message)\n            .filter((uf) => uf.no != extension.field.no);\n        bin.discardUnknownFields(message);\n        for (const uf of ufs) {\n            bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n        }\n    }\n}\n/**\n * Check whether an extension is set on a message.\n */\nfunction hasExtension(message, extension) {\n    const messageType = message.getType();\n    return (extension.extendee.typeName === messageType.typeName &&\n        !!messageType.runtime.bin\n            .listUnknownFields(message)\n            .find((uf) => uf.no == extension.field.no));\n}\nfunction assertExtendee(extension, message) {\n    (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_1__.assert)(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2V4dGVuc2lvbi1hY2Nlc3Nvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUM0QztBQUN6RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLDJFQUFtQjtBQUNuQyw2QkFBNkIsZ0ZBQXdCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsc0JBQXNCLFdBQVc7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksMERBQU0seUVBQXlFLG9CQUFvQixpQ0FBaUMsNEJBQTRCO0FBQ3BLIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9leHRlbnNpb24tYWNjZXNzb3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGFzc2VydCB9IGZyb20gXCIuL3ByaXZhdGUvYXNzZXJ0LmpzXCI7XG5pbXBvcnQgeyBjcmVhdGVFeHRlbnNpb25Db250YWluZXIsIGZpbHRlclVua25vd25GaWVsZHMsIH0gZnJvbSBcIi4vcHJpdmF0ZS9leHRlbnNpb25zLmpzXCI7XG4vKipcbiAqIFJldHJpZXZlIGFuIGV4dGVuc2lvbiB2YWx1ZSBmcm9tIGEgbWVzc2FnZS5cbiAqXG4gKiBUaGUgZnVuY3Rpb24gbmV2ZXIgcmV0dXJucyB1bmRlZmluZWQuIFVzZSBoYXNFeHRlbnNpb24oKSB0byBjaGVjayB3aGV0aGVyIGFuXG4gKiBleHRlbnNpb24gaXMgc2V0LiBJZiB0aGUgZXh0ZW5zaW9uIGlzIG5vdCBzZXQsIHRoaXMgZnVuY3Rpb24gcmV0dXJucyB0aGVcbiAqIGRlZmF1bHQgdmFsdWUgKGlmIG9uZSB3YXMgc3BlY2lmaWVkIGluIHRoZSBwcm90b2J1ZiBzb3VyY2UpLCBvciB0aGUgemVybyB2YWx1ZVxuICogKGZvciBleGFtcGxlIGAwYCBmb3IgbnVtZXJpYyB0eXBlcywgYFtdYCBmb3IgcmVwZWF0ZWQgZXh0ZW5zaW9uIGZpZWxkcywgYW5kXG4gKiBhbiBlbXB0eSBtZXNzYWdlIGluc3RhbmNlIGZvciBtZXNzYWdlIGZpZWxkcykuXG4gKlxuICogRXh0ZW5zaW9ucyBhcmUgc3RvcmVkIGFzIHVua25vd24gZmllbGRzIG9uIGEgbWVzc2FnZS4gVG8gbXV0YXRlIGFuIGV4dGVuc2lvblxuICogdmFsdWUsIG1ha2Ugc3VyZSB0byBzdG9yZSB0aGUgbmV3IHZhbHVlIHdpdGggc2V0RXh0ZW5zaW9uKCkgYWZ0ZXIgbXV0YXRpbmcuXG4gKlxuICogSWYgdGhlIGV4dGVuc2lvbiBkb2VzIG5vdCBleHRlbmQgdGhlIGdpdmVuIG1lc3NhZ2UsIGFuIGVycm9yIGlzIHJhaXNlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEV4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24sIG9wdGlvbnMpIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGNvbnN0IG9wdCA9IGV4dGVuc2lvbi5ydW50aW1lLmJpbi5tYWtlUmVhZE9wdGlvbnMob3B0aW9ucyk7XG4gICAgY29uc3QgdWZzID0gZmlsdGVyVW5rbm93bkZpZWxkcyhtZXNzYWdlLmdldFR5cGUoKS5ydW50aW1lLmJpbi5saXN0VW5rbm93bkZpZWxkcyhtZXNzYWdlKSwgZXh0ZW5zaW9uLmZpZWxkKTtcbiAgICBjb25zdCBbY29udGFpbmVyLCBnZXRdID0gY3JlYXRlRXh0ZW5zaW9uQ29udGFpbmVyKGV4dGVuc2lvbik7XG4gICAgZm9yIChjb25zdCB1ZiBvZiB1ZnMpIHtcbiAgICAgICAgZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLnJlYWRGaWVsZChjb250YWluZXIsIG9wdC5yZWFkZXJGYWN0b3J5KHVmLmRhdGEpLCBleHRlbnNpb24uZmllbGQsIHVmLndpcmVUeXBlLCBvcHQpO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0KCk7XG59XG4vKipcbiAqIFNldCBhbiBleHRlbnNpb24gdmFsdWUgb24gYSBtZXNzYWdlLiBJZiB0aGUgbWVzc2FnZSBhbHJlYWR5IGhhcyBhIHZhbHVlIGZvclxuICogdGhpcyBleHRlbnNpb24sIHRoZSB2YWx1ZSBpcyByZXBsYWNlZC5cbiAqXG4gKiBJZiB0aGUgZXh0ZW5zaW9uIGRvZXMgbm90IGV4dGVuZCB0aGUgZ2l2ZW4gbWVzc2FnZSwgYW4gZXJyb3IgaXMgcmFpc2VkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0RXh0ZW5zaW9uKG1lc3NhZ2UsIGV4dGVuc2lvbiwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGNvbnN0IHJlYWRPcHQgPSBleHRlbnNpb24ucnVudGltZS5iaW4ubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgIGNvbnN0IHdyaXRlT3B0ID0gZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLm1ha2VXcml0ZU9wdGlvbnMob3B0aW9ucyk7XG4gICAgaWYgKGhhc0V4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pKSB7XG4gICAgICAgIGNvbnN0IHVmcyA9IG1lc3NhZ2VcbiAgICAgICAgICAgIC5nZXRUeXBlKClcbiAgICAgICAgICAgIC5ydW50aW1lLmJpbi5saXN0VW5rbm93bkZpZWxkcyhtZXNzYWdlKVxuICAgICAgICAgICAgLmZpbHRlcigodWYpID0+IHVmLm5vICE9IGV4dGVuc2lvbi5maWVsZC5ubyk7XG4gICAgICAgIG1lc3NhZ2UuZ2V0VHlwZSgpLnJ1bnRpbWUuYmluLmRpc2NhcmRVbmtub3duRmllbGRzKG1lc3NhZ2UpO1xuICAgICAgICBmb3IgKGNvbnN0IHVmIG9mIHVmcykge1xuICAgICAgICAgICAgbWVzc2FnZVxuICAgICAgICAgICAgICAgIC5nZXRUeXBlKClcbiAgICAgICAgICAgICAgICAucnVudGltZS5iaW4ub25Vbmtub3duRmllbGQobWVzc2FnZSwgdWYubm8sIHVmLndpcmVUeXBlLCB1Zi5kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB3cml0ZXIgPSB3cml0ZU9wdC53cml0ZXJGYWN0b3J5KCk7XG4gICAgbGV0IGYgPSBleHRlbnNpb24uZmllbGQ7XG4gICAgLy8gSW1wbGljaXQgcHJlc2VuY2UgZG9lcyBub3QgYXBwbHkgdG8gZXh0ZW5zaW9ucywgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wcm90b2NvbGJ1ZmZlcnMvcHJvdG9idWYvaXNzdWVzLzgyMzRcbiAgICAvLyBXZSBwYXRjaCB0aGUgZmllbGQgaW5mbyB0byB1c2UgZXhwbGljaXQgcHJlc2VuY2U6XG4gICAgaWYgKCFmLm9wdCAmJiAhZi5yZXBlYXRlZCAmJiAoZi5raW5kID09IFwiZW51bVwiIHx8IGYua2luZCA9PSBcInNjYWxhclwiKSkge1xuICAgICAgICBmID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBleHRlbnNpb24uZmllbGQpLCB7IG9wdDogdHJ1ZSB9KTtcbiAgICB9XG4gICAgZXh0ZW5zaW9uLnJ1bnRpbWUuYmluLndyaXRlRmllbGQoZiwgdmFsdWUsIHdyaXRlciwgd3JpdGVPcHQpO1xuICAgIGNvbnN0IHJlYWRlciA9IHJlYWRPcHQucmVhZGVyRmFjdG9yeSh3cml0ZXIuZmluaXNoKCkpO1xuICAgIHdoaWxlIChyZWFkZXIucG9zIDwgcmVhZGVyLmxlbikge1xuICAgICAgICBjb25zdCBbbm8sIHdpcmVUeXBlXSA9IHJlYWRlci50YWcoKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHJlYWRlci5za2lwKHdpcmVUeXBlLCBubyk7XG4gICAgICAgIG1lc3NhZ2UuZ2V0VHlwZSgpLnJ1bnRpbWUuYmluLm9uVW5rbm93bkZpZWxkKG1lc3NhZ2UsIG5vLCB3aXJlVHlwZSwgZGF0YSk7XG4gICAgfVxufVxuLyoqXG4gKiBSZW1vdmUgYW4gZXh0ZW5zaW9uIHZhbHVlIGZyb20gYSBtZXNzYWdlLlxuICpcbiAqIElmIHRoZSBleHRlbnNpb24gZG9lcyBub3QgZXh0ZW5kIHRoZSBnaXZlbiBtZXNzYWdlLCBhbiBlcnJvciBpcyByYWlzZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjbGVhckV4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pIHtcbiAgICBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpO1xuICAgIGlmIChoYXNFeHRlbnNpb24obWVzc2FnZSwgZXh0ZW5zaW9uKSkge1xuICAgICAgICBjb25zdCBiaW4gPSBtZXNzYWdlLmdldFR5cGUoKS5ydW50aW1lLmJpbjtcbiAgICAgICAgY29uc3QgdWZzID0gYmluXG4gICAgICAgICAgICAubGlzdFVua25vd25GaWVsZHMobWVzc2FnZSlcbiAgICAgICAgICAgIC5maWx0ZXIoKHVmKSA9PiB1Zi5ubyAhPSBleHRlbnNpb24uZmllbGQubm8pO1xuICAgICAgICBiaW4uZGlzY2FyZFVua25vd25GaWVsZHMobWVzc2FnZSk7XG4gICAgICAgIGZvciAoY29uc3QgdWYgb2YgdWZzKSB7XG4gICAgICAgICAgICBiaW4ub25Vbmtub3duRmllbGQobWVzc2FnZSwgdWYubm8sIHVmLndpcmVUeXBlLCB1Zi5kYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbi8qKlxuICogQ2hlY2sgd2hldGhlciBhbiBleHRlbnNpb24gaXMgc2V0IG9uIGEgbWVzc2FnZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc0V4dGVuc2lvbihtZXNzYWdlLCBleHRlbnNpb24pIHtcbiAgICBjb25zdCBtZXNzYWdlVHlwZSA9IG1lc3NhZ2UuZ2V0VHlwZSgpO1xuICAgIHJldHVybiAoZXh0ZW5zaW9uLmV4dGVuZGVlLnR5cGVOYW1lID09PSBtZXNzYWdlVHlwZS50eXBlTmFtZSAmJlxuICAgICAgICAhIW1lc3NhZ2VUeXBlLnJ1bnRpbWUuYmluXG4gICAgICAgICAgICAubGlzdFVua25vd25GaWVsZHMobWVzc2FnZSlcbiAgICAgICAgICAgIC5maW5kKCh1ZikgPT4gdWYubm8gPT0gZXh0ZW5zaW9uLmZpZWxkLm5vKSk7XG59XG5mdW5jdGlvbiBhc3NlcnRFeHRlbmRlZShleHRlbnNpb24sIG1lc3NhZ2UpIHtcbiAgICBhc3NlcnQoZXh0ZW5zaW9uLmV4dGVuZGVlLnR5cGVOYW1lID09IG1lc3NhZ2UuZ2V0VHlwZSgpLnR5cGVOYW1lLCBgZXh0ZW5zaW9uICR7ZXh0ZW5zaW9uLnR5cGVOYW1lfSBjYW4gb25seSBiZSBhcHBsaWVkIHRvIG1lc3NhZ2UgJHtleHRlbnNpb24uZXh0ZW5kZWUudHlwZU5hbWV9YCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FieldMask: () => (/* binding */ FieldMask)\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _proto3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../proto3.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * `FieldMask` represents a set of symbolic field paths, for example:\n *\n *     paths: \"f.a\"\n *     paths: \"f.b.d\"\n *\n * Here `f` represents a field in some root message, `a` and `b`\n * fields in the message found in `f`, and `d` a field found in the\n * message in `f.b`.\n *\n * Field masks are used to specify a subset of fields that should be\n * returned by a get operation or modified by an update operation.\n * Field masks also have a custom JSON encoding (see below).\n *\n * # Field Masks in Projections\n *\n * When used in the context of a projection, a response message or\n * sub-message is filtered by the API to only contain those fields as\n * specified in the mask. For example, if the mask in the previous\n * example is applied to a response message as follows:\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *         x : 2\n *       }\n *       y : 13\n *     }\n *     z: 8\n *\n * The result will not contain specific values for fields x,y and z\n * (their value will be set to the default, and omitted in proto text\n * output):\n *\n *\n *     f {\n *       a : 22\n *       b {\n *         d : 1\n *       }\n *     }\n *\n * A repeated field is not allowed except at the last position of a\n * paths string.\n *\n * If a FieldMask object is not present in a get operation, the\n * operation applies to all fields (as if a FieldMask of all fields\n * had been specified).\n *\n * Note that a field mask does not necessarily apply to the\n * top-level response message. In case of a REST get operation, the\n * field mask applies directly to the response, but in case of a REST\n * list operation, the mask instead applies to each individual message\n * in the returned resource list. In case of a REST custom method,\n * other definitions may be used. Where the mask applies will be\n * clearly documented together with its declaration in the API.  In\n * any case, the effect on the returned resource/resources is required\n * behavior for APIs.\n *\n * # Field Masks in Update Operations\n *\n * A field mask in update operations specifies which fields of the\n * targeted resource are going to be updated. The API is required\n * to only change the values of the fields as specified in the mask\n * and leave the others untouched. If a resource is passed in to\n * describe the updated values, the API ignores the values of all\n * fields not covered by the mask.\n *\n * If a repeated field is specified for an update operation, new values will\n * be appended to the existing repeated field in the target resource. Note that\n * a repeated field is only allowed in the last position of a `paths` string.\n *\n * If a sub-message is specified in the last position of the field mask for an\n * update operation, then new value will be merged into the existing sub-message\n * in the target resource.\n *\n * For example, given the target message:\n *\n *     f {\n *       b {\n *         d: 1\n *         x: 2\n *       }\n *       c: [1]\n *     }\n *\n * And an update message:\n *\n *     f {\n *       b {\n *         d: 10\n *       }\n *       c: [2]\n *     }\n *\n * then if the field mask is:\n *\n *  paths: [\"f.b\", \"f.c\"]\n *\n * then the result will be:\n *\n *     f {\n *       b {\n *         d: 10\n *         x: 2\n *       }\n *       c: [1, 2]\n *     }\n *\n * An implementation may provide options to override this default behavior for\n * repeated and message fields.\n *\n * In order to reset a field's value to the default, the field must\n * be in the mask and set to the default value in the provided resource.\n * Hence, in order to reset all fields of a resource, provide a default\n * instance of the resource and set all fields in the mask, or do\n * not provide a mask as described below.\n *\n * If a field mask is not present on update, the operation applies to\n * all fields (as if a field mask of all fields has been specified).\n * Note that in the presence of schema evolution, this may mean that\n * fields the client does not know and has therefore not filled into\n * the request will be reset to their default. If this is unwanted\n * behavior, a specific service may require a client to always specify\n * a field mask, producing an error if not.\n *\n * As with get operations, the location of the resource which\n * describes the updated values in the request message depends on the\n * operation kind. In any case, the effect of the field mask is\n * required to be honored by the API.\n *\n * ## Considerations for HTTP REST\n *\n * The HTTP kind of an update operation which uses a field mask must\n * be set to PATCH instead of PUT in order to satisfy HTTP semantics\n * (PUT must only be used for full updates).\n *\n * # JSON Encoding of Field Masks\n *\n * In JSON, a field mask is encoded as a single string where paths are\n * separated by a comma. Fields name in each path are converted\n * to/from lower-camel naming conventions.\n *\n * As an example, consider the following message declarations:\n *\n *     message Profile {\n *       User user = 1;\n *       Photo photo = 2;\n *     }\n *     message User {\n *       string display_name = 1;\n *       string address = 2;\n *     }\n *\n * In proto a field mask for `Profile` may look as such:\n *\n *     mask {\n *       paths: \"user.display_name\"\n *       paths: \"photo\"\n *     }\n *\n * In JSON, the same mask is represented as below:\n *\n *     {\n *       mask: \"user.displayName,photo\"\n *     }\n *\n * # Field Masks and Oneof Fields\n *\n * Field masks treat fields in oneofs just as regular fields. Consider the\n * following message:\n *\n *     message SampleMessage {\n *       oneof test_oneof {\n *         string name = 4;\n *         SubMessage sub_message = 9;\n *       }\n *     }\n *\n * The field mask can be:\n *\n *     mask {\n *       paths: \"name\"\n *     }\n *\n * Or:\n *\n *     mask {\n *       paths: \"sub_message\"\n *     }\n *\n * Note that oneof type names (\"test_oneof\" in this case) cannot be used in\n * paths.\n *\n * ## Field Mask Verification\n *\n * The implementation of any API method which has a FieldMask type field in the\n * request should verify the included field paths, and return an\n * `INVALID_ARGUMENT` error if any path is unmappable.\n *\n * @generated from message google.protobuf.FieldMask\n */\nclass FieldMask extends _message_js__WEBPACK_IMPORTED_MODULE_0__.Message {\n    constructor(data) {\n        super();\n        /**\n         * The set of field mask paths.\n         *\n         * @generated from field: repeated string paths = 1;\n         */\n        this.paths = [];\n        _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.initPartial(data, this);\n    }\n    toJson(options) {\n        // Converts snake_case to protoCamelCase according to the convention\n        // used by protoc to convert a field name to a JSON name.\n        function protoCamelCase(snakeCase) {\n            let capNext = false;\n            const b = [];\n            for (let i = 0; i < snakeCase.length; i++) {\n                let c = snakeCase.charAt(i);\n                switch (c) {\n                    case '_':\n                        capNext = true;\n                        break;\n                    case '0':\n                    case '1':\n                    case '2':\n                    case '3':\n                    case '4':\n                    case '5':\n                    case '6':\n                    case '7':\n                    case '8':\n                    case '9':\n                        b.push(c);\n                        capNext = false;\n                        break;\n                    default:\n                        if (capNext) {\n                            capNext = false;\n                            c = c.toUpperCase();\n                        }\n                        b.push(c);\n                        break;\n                }\n            }\n            return b.join('');\n        }\n        return this.paths.map(p => {\n            if (p.match(/_[0-9]?_/g) || p.match(/[A-Z]/g)) {\n                throw new Error(\"cannot encode google.protobuf.FieldMask to JSON: lowerCamelCase of path name \\\"\" + p + \"\\\" is irreversible\");\n            }\n            return protoCamelCase(p);\n        }).join(\",\");\n    }\n    fromJson(json, options) {\n        if (typeof json !== \"string\") {\n            throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: \" + _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.json.debug(json));\n        }\n        if (json === \"\") {\n            return this;\n        }\n        function camelToSnake(str) {\n            if (str.includes(\"_\")) {\n                throw new Error(\"cannot decode google.protobuf.FieldMask from JSON: path names must be lowerCamelCase\");\n            }\n            const sc = str.replace(/[A-Z]/g, letter => \"_\" + letter.toLowerCase());\n            return (sc[0] === \"_\") ? sc.substring(1) : sc;\n        }\n        this.paths = json.split(\",\").map(camelToSnake);\n        return this;\n    }\n    static fromBinary(bytes, options) {\n        return new FieldMask().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new FieldMask().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new FieldMask().fromJsonString(jsonString, options);\n    }\n    static equals(a, b) {\n        return _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.equals(FieldMask, a, b);\n    }\n}\nFieldMask.runtime = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3;\nFieldMask.typeName = \"google.protobuf.FieldMask\";\nFieldMask.fields = _proto3_js__WEBPACK_IMPORTED_MODULE_1__.proto3.util.newFieldList(() => [\n    { no: 1, name: \"paths\", kind: \"scalar\", T: 9 /* ScalarType.STRING */, repeated: true },\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   int64FromString: () => (/* binding */ int64FromString),\n/* harmony export */   int64ToString: () => (/* binding */ int64ToString),\n/* harmony export */   uInt64ToString: () => (/* binding */ uInt64ToString),\n/* harmony export */   varint32read: () => (/* binding */ varint32read),\n/* harmony export */   varint32write: () => (/* binding */ varint32write),\n/* harmony export */   varint64read: () => (/* binding */ varint64read),\n/* harmony export */   varint64write: () => (/* binding */ varint64write)\n/* harmony export */ });\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = (bits.hi & 0x80000000);\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1FFFFF) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xFFFFFF;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xFFFFFF;\n    const high = (hi >> 16) & 0xFFFF;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + (mid * 6777216) + (high * 6710656);\n    let digitB = mid + (high * 8147497);\n    let digitC = (high * 2);\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/is-message.js":
/*!****************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/is-message.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isMessage: () => (/* binding */ isMessage)\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Check whether the given object is any subtype of Message or is a specific\n * Message by passing the type.\n *\n * Just like `instanceof`, `isMessage` narrows the type. The advantage of\n * `isMessage` is that it compares identity by the message type name, not by\n * class identity. This makes it robust against the dual package hazard and\n * similar situations, where the same message is duplicated.\n *\n * This function is _mostly_ equivalent to the `instanceof` operator. For\n * example, `isMessage(foo, MyMessage)` is the same as `foo instanceof MyMessage`,\n * and `isMessage(foo)` is the same as `foo instanceof Message`. In most cases,\n * `isMessage` should be preferred over `instanceof`.\n *\n * However, due to the fact that `isMessage` does not use class identity, there\n * are subtle differences between this function and `instanceof`. Notably,\n * calling `isMessage` on an explicit type of Message will return false.\n */\nfunction isMessage(arg, type) {\n    if (arg === null || typeof arg != \"object\") {\n        return false;\n    }\n    if (!Object.getOwnPropertyNames(_message_js__WEBPACK_IMPORTED_MODULE_0__.Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n        return false;\n    }\n    const actualType = arg.getType();\n    if (actualType === null ||\n        typeof actualType != \"function\" ||\n        !(\"typeName\" in actualType) ||\n        typeof actualType.typeName != \"string\") {\n        return false;\n    }\n    return type === undefined ? true : actualType.typeName == type.typeName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL2lzLW1lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUN1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxnREFBTztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9pcy1tZXNzYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4vbWVzc2FnZS5qc1wiO1xuLyoqXG4gKiBDaGVjayB3aGV0aGVyIHRoZSBnaXZlbiBvYmplY3QgaXMgYW55IHN1YnR5cGUgb2YgTWVzc2FnZSBvciBpcyBhIHNwZWNpZmljXG4gKiBNZXNzYWdlIGJ5IHBhc3NpbmcgdGhlIHR5cGUuXG4gKlxuICogSnVzdCBsaWtlIGBpbnN0YW5jZW9mYCwgYGlzTWVzc2FnZWAgbmFycm93cyB0aGUgdHlwZS4gVGhlIGFkdmFudGFnZSBvZlxuICogYGlzTWVzc2FnZWAgaXMgdGhhdCBpdCBjb21wYXJlcyBpZGVudGl0eSBieSB0aGUgbWVzc2FnZSB0eXBlIG5hbWUsIG5vdCBieVxuICogY2xhc3MgaWRlbnRpdHkuIFRoaXMgbWFrZXMgaXQgcm9idXN0IGFnYWluc3QgdGhlIGR1YWwgcGFja2FnZSBoYXphcmQgYW5kXG4gKiBzaW1pbGFyIHNpdHVhdGlvbnMsIHdoZXJlIHRoZSBzYW1lIG1lc3NhZ2UgaXMgZHVwbGljYXRlZC5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIF9tb3N0bHlfIGVxdWl2YWxlbnQgdG8gdGhlIGBpbnN0YW5jZW9mYCBvcGVyYXRvci4gRm9yXG4gKiBleGFtcGxlLCBgaXNNZXNzYWdlKGZvbywgTXlNZXNzYWdlKWAgaXMgdGhlIHNhbWUgYXMgYGZvbyBpbnN0YW5jZW9mIE15TWVzc2FnZWAsXG4gKiBhbmQgYGlzTWVzc2FnZShmb28pYCBpcyB0aGUgc2FtZSBhcyBgZm9vIGluc3RhbmNlb2YgTWVzc2FnZWAuIEluIG1vc3QgY2FzZXMsXG4gKiBgaXNNZXNzYWdlYCBzaG91bGQgYmUgcHJlZmVycmVkIG92ZXIgYGluc3RhbmNlb2ZgLlxuICpcbiAqIEhvd2V2ZXIsIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGBpc01lc3NhZ2VgIGRvZXMgbm90IHVzZSBjbGFzcyBpZGVudGl0eSwgdGhlcmVcbiAqIGFyZSBzdWJ0bGUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGlzIGZ1bmN0aW9uIGFuZCBgaW5zdGFuY2VvZmAuIE5vdGFibHksXG4gKiBjYWxsaW5nIGBpc01lc3NhZ2VgIG9uIGFuIGV4cGxpY2l0IHR5cGUgb2YgTWVzc2FnZSB3aWxsIHJldHVybiBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzTWVzc2FnZShhcmcsIHR5cGUpIHtcbiAgICBpZiAoYXJnID09PSBudWxsIHx8IHR5cGVvZiBhcmcgIT0gXCJvYmplY3RcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmICghT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTWVzc2FnZS5wcm90b3R5cGUpLmV2ZXJ5KChtKSA9PiBtIGluIGFyZyAmJiB0eXBlb2YgYXJnW21dID09IFwiZnVuY3Rpb25cIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBhY3R1YWxUeXBlID0gYXJnLmdldFR5cGUoKTtcbiAgICBpZiAoYWN0dWFsVHlwZSA9PT0gbnVsbCB8fFxuICAgICAgICB0eXBlb2YgYWN0dWFsVHlwZSAhPSBcImZ1bmN0aW9uXCIgfHxcbiAgICAgICAgIShcInR5cGVOYW1lXCIgaW4gYWN0dWFsVHlwZSkgfHxcbiAgICAgICAgdHlwZW9mIGFjdHVhbFR5cGUudHlwZU5hbWUgIT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0eXBlID09PSB1bmRlZmluZWQgPyB0cnVlIDogYWN0dWFsVHlwZS50eXBlTmFtZSA9PSB0eXBlLnR5cGVOYW1lO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/message.js":
/*!*************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/message.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Message: () => (/* binding */ Message)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Message is the base class of every message, generated, or created at\n * runtime.\n *\n * It is _not_ safe to extend this class. If you want to create a message at\n * run time, use proto3.makeMessageType().\n */\nclass Message {\n    /**\n     * Compare with a message of the same type.\n     * Note that this function disregards extensions and unknown fields.\n     */\n    equals(other) {\n        return this.getType().runtime.util.equals(this.getType(), this, other);\n    }\n    /**\n     * Create a deep copy.\n     */\n    clone() {\n        return this.getType().runtime.util.clone(this);\n    }\n    /**\n     * Parse from binary data, merging fields.\n     *\n     * Repeated fields are appended. Map entries are added, overwriting\n     * existing keys.\n     *\n     * If a message field is already present, it will be merged with the\n     * new data.\n     */\n    fromBinary(bytes, options) {\n        const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n        format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON value.\n     */\n    fromJson(jsonValue, options) {\n        const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n        format.readMessage(type, jsonValue, opt, this);\n        return this;\n    }\n    /**\n     * Parse a message from a JSON string.\n     */\n    fromJsonString(jsonString, options) {\n        let json;\n        try {\n            json = JSON.parse(jsonString);\n        }\n        catch (e) {\n            throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n        }\n        return this.fromJson(json, options);\n    }\n    /**\n     * Serialize the message to binary data.\n     */\n    toBinary(options) {\n        const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n        bin.writeMessage(this, writer, opt);\n        return writer.finish();\n    }\n    /**\n     * Serialize the message to a JSON value, a JavaScript value that can be\n     * passed to JSON.stringify().\n     */\n    toJson(options) {\n        const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n        return json.writeMessage(this, opt);\n    }\n    /**\n     * Serialize the message to a JSON string.\n     */\n    toJsonString(options) {\n        var _a;\n        const value = this.toJson(options);\n        return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n    }\n    /**\n     * Override for serialization behavior. This will be invoked when calling\n     * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n     *\n     * Note that this will not serialize google.protobuf.Any with a packed\n     * message because the protobuf JSON format specifies that it needs to be\n     * unpacked, and this is only possible with a type registry to look up the\n     * message type.  As a result, attempting to serialize a message with this\n     * type will throw an Error.\n     *\n     * This method is protected because you should not need to invoke it\n     * directly -- instead use JSON.stringify or toJsonString for\n     * stringified JSON.  Alternatively, if actual JSON is desired, you should\n     * use toJson.\n     */\n    toJSON() {\n        return this.toJson({\n            emitDefaultValues: true,\n        });\n    }\n    /**\n     * Retrieve the MessageType of this message - a singleton that represents\n     * the protobuf message declaration and provides metadata for reflection-\n     * based operations.\n     */\n    getType() {\n        // Any class that extends Message _must_ provide a complete static\n        // implementation of MessageType.\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return\n        return Object.getPrototypeOf(this).constructor;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMseUJBQXlCLGFBQWEsMkNBQTJDO0FBQzlIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vbWVzc2FnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuLyoqXG4gKiBNZXNzYWdlIGlzIHRoZSBiYXNlIGNsYXNzIG9mIGV2ZXJ5IG1lc3NhZ2UsIGdlbmVyYXRlZCwgb3IgY3JlYXRlZCBhdFxuICogcnVudGltZS5cbiAqXG4gKiBJdCBpcyBfbm90XyBzYWZlIHRvIGV4dGVuZCB0aGlzIGNsYXNzLiBJZiB5b3Ugd2FudCB0byBjcmVhdGUgYSBtZXNzYWdlIGF0XG4gKiBydW4gdGltZSwgdXNlIHByb3RvMy5tYWtlTWVzc2FnZVR5cGUoKS5cbiAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2Uge1xuICAgIC8qKlxuICAgICAqIENvbXBhcmUgd2l0aCBhIG1lc3NhZ2Ugb2YgdGhlIHNhbWUgdHlwZS5cbiAgICAgKiBOb3RlIHRoYXQgdGhpcyBmdW5jdGlvbiBkaXNyZWdhcmRzIGV4dGVuc2lvbnMgYW5kIHVua25vd24gZmllbGRzLlxuICAgICAqL1xuICAgIGVxdWFscyhvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRUeXBlKCkucnVudGltZS51dGlsLmVxdWFscyh0aGlzLmdldFR5cGUoKSwgdGhpcywgb3RoZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBkZWVwIGNvcHkuXG4gICAgICovXG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFR5cGUoKS5ydW50aW1lLnV0aWwuY2xvbmUodGhpcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBhcnNlIGZyb20gYmluYXJ5IGRhdGEsIG1lcmdpbmcgZmllbGRzLlxuICAgICAqXG4gICAgICogUmVwZWF0ZWQgZmllbGRzIGFyZSBhcHBlbmRlZC4gTWFwIGVudHJpZXMgYXJlIGFkZGVkLCBvdmVyd3JpdGluZ1xuICAgICAqIGV4aXN0aW5nIGtleXMuXG4gICAgICpcbiAgICAgKiBJZiBhIG1lc3NhZ2UgZmllbGQgaXMgYWxyZWFkeSBwcmVzZW50LCBpdCB3aWxsIGJlIG1lcmdlZCB3aXRoIHRoZVxuICAgICAqIG5ldyBkYXRhLlxuICAgICAqL1xuICAgIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0VHlwZSgpLCBmb3JtYXQgPSB0eXBlLnJ1bnRpbWUuYmluLCBvcHQgPSBmb3JtYXQubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICBmb3JtYXQucmVhZE1lc3NhZ2UodGhpcywgb3B0LnJlYWRlckZhY3RvcnkoYnl0ZXMpLCBieXRlcy5ieXRlTGVuZ3RoLCBvcHQpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgYSBtZXNzYWdlIGZyb20gYSBKU09OIHZhbHVlLlxuICAgICAqL1xuICAgIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCksIGZvcm1hdCA9IHR5cGUucnVudGltZS5qc29uLCBvcHQgPSBmb3JtYXQubWFrZVJlYWRPcHRpb25zKG9wdGlvbnMpO1xuICAgICAgICBmb3JtYXQucmVhZE1lc3NhZ2UodHlwZSwganNvblZhbHVlLCBvcHQsIHRoaXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGFyc2UgYSBtZXNzYWdlIGZyb20gYSBKU09OIHN0cmluZy5cbiAgICAgKi9cbiAgICBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIGxldCBqc29uO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAganNvbiA9IEpTT04ucGFyc2UoanNvblN0cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgY2Fubm90IGRlY29kZSAke3RoaXMuZ2V0VHlwZSgpLnR5cGVOYW1lfSBmcm9tIEpTT046ICR7ZSBpbnN0YW5jZW9mIEVycm9yID8gZS5tZXNzYWdlIDogU3RyaW5nKGUpfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21Kc29uKGpzb24sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXJpYWxpemUgdGhlIG1lc3NhZ2UgdG8gYmluYXJ5IGRhdGEuXG4gICAgICovXG4gICAgdG9CaW5hcnkob3B0aW9ucykge1xuICAgICAgICBjb25zdCB0eXBlID0gdGhpcy5nZXRUeXBlKCksIGJpbiA9IHR5cGUucnVudGltZS5iaW4sIG9wdCA9IGJpbi5tYWtlV3JpdGVPcHRpb25zKG9wdGlvbnMpLCB3cml0ZXIgPSBvcHQud3JpdGVyRmFjdG9yeSgpO1xuICAgICAgICBiaW4ud3JpdGVNZXNzYWdlKHRoaXMsIHdyaXRlciwgb3B0KTtcbiAgICAgICAgcmV0dXJuIHdyaXRlci5maW5pc2goKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VyaWFsaXplIHRoZSBtZXNzYWdlIHRvIGEgSlNPTiB2YWx1ZSwgYSBKYXZhU2NyaXB0IHZhbHVlIHRoYXQgY2FuIGJlXG4gICAgICogcGFzc2VkIHRvIEpTT04uc3RyaW5naWZ5KCkuXG4gICAgICovXG4gICAgdG9Kc29uKG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0VHlwZSgpLCBqc29uID0gdHlwZS5ydW50aW1lLmpzb24sIG9wdCA9IGpzb24ubWFrZVdyaXRlT3B0aW9ucyhvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGpzb24ud3JpdGVNZXNzYWdlKHRoaXMsIG9wdCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlcmlhbGl6ZSB0aGUgbWVzc2FnZSB0byBhIEpTT04gc3RyaW5nLlxuICAgICAqL1xuICAgIHRvSnNvblN0cmluZyhvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnRvSnNvbihvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlLCBudWxsLCAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucHJldHR5U3BhY2VzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAwKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcnJpZGUgZm9yIHNlcmlhbGl6YXRpb24gYmVoYXZpb3IuIFRoaXMgd2lsbCBiZSBpbnZva2VkIHdoZW4gY2FsbGluZ1xuICAgICAqIEpTT04uc3RyaW5naWZ5IG9uIHRoaXMgbWVzc2FnZSAoaS5lLiBKU09OLnN0cmluZ2lmeShtc2cpKS5cbiAgICAgKlxuICAgICAqIE5vdGUgdGhhdCB0aGlzIHdpbGwgbm90IHNlcmlhbGl6ZSBnb29nbGUucHJvdG9idWYuQW55IHdpdGggYSBwYWNrZWRcbiAgICAgKiBtZXNzYWdlIGJlY2F1c2UgdGhlIHByb3RvYnVmIEpTT04gZm9ybWF0IHNwZWNpZmllcyB0aGF0IGl0IG5lZWRzIHRvIGJlXG4gICAgICogdW5wYWNrZWQsIGFuZCB0aGlzIGlzIG9ubHkgcG9zc2libGUgd2l0aCBhIHR5cGUgcmVnaXN0cnkgdG8gbG9vayB1cCB0aGVcbiAgICAgKiBtZXNzYWdlIHR5cGUuICBBcyBhIHJlc3VsdCwgYXR0ZW1wdGluZyB0byBzZXJpYWxpemUgYSBtZXNzYWdlIHdpdGggdGhpc1xuICAgICAqIHR5cGUgd2lsbCB0aHJvdyBhbiBFcnJvci5cbiAgICAgKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIHByb3RlY3RlZCBiZWNhdXNlIHlvdSBzaG91bGQgbm90IG5lZWQgdG8gaW52b2tlIGl0XG4gICAgICogZGlyZWN0bHkgLS0gaW5zdGVhZCB1c2UgSlNPTi5zdHJpbmdpZnkgb3IgdG9Kc29uU3RyaW5nIGZvclxuICAgICAqIHN0cmluZ2lmaWVkIEpTT04uICBBbHRlcm5hdGl2ZWx5LCBpZiBhY3R1YWwgSlNPTiBpcyBkZXNpcmVkLCB5b3Ugc2hvdWxkXG4gICAgICogdXNlIHRvSnNvbi5cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvSnNvbih7XG4gICAgICAgICAgICBlbWl0RGVmYXVsdFZhbHVlczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIHRoZSBNZXNzYWdlVHlwZSBvZiB0aGlzIG1lc3NhZ2UgLSBhIHNpbmdsZXRvbiB0aGF0IHJlcHJlc2VudHNcbiAgICAgKiB0aGUgcHJvdG9idWYgbWVzc2FnZSBkZWNsYXJhdGlvbiBhbmQgcHJvdmlkZXMgbWV0YWRhdGEgZm9yIHJlZmxlY3Rpb24tXG4gICAgICogYmFzZWQgb3BlcmF0aW9ucy5cbiAgICAgKi9cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICAvLyBBbnkgY2xhc3MgdGhhdCBleHRlbmRzIE1lc3NhZ2UgX211c3RfIHByb3ZpZGUgYSBjb21wbGV0ZSBzdGF0aWNcbiAgICAgICAgLy8gaW1wbGVtZW50YXRpb24gb2YgTWVzc2FnZVR5cGUuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1yZXR1cm5cbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/message.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assert: () => (/* binding */ assert),\n/* harmony export */   assertFloat32: () => (/* binding */ assertFloat32),\n/* harmony export */   assertInt32: () => (/* binding */ assertInt32),\n/* harmony export */   assertUInt32: () => (/* binding */ assertUInt32)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Assert that condition is truthy or throw error (with message)\n */\nfunction assert(condition, msg) {\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions -- we want the implicit conversion to boolean\n    if (!condition) {\n        throw new Error(msg);\n    }\n}\nconst FLOAT32_MAX = 3.4028234663852886e38, FLOAT32_MIN = -3.4028234663852886e38, UINT32_MAX = 0xffffffff, INT32_MAX = 0x7fffffff, INT32_MIN = -0x80000000;\n/**\n * Assert a valid signed protobuf 32-bit integer.\n */\nfunction assertInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid int 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n        throw new Error(\"invalid int 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid uint 32: \" + typeof arg);\n    if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n        throw new Error(\"invalid uint 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n/**\n * Assert a valid protobuf float value.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg !== \"number\")\n        throw new Error(\"invalid float 32: \" + typeof arg);\n    if (!Number.isFinite(arg))\n        return;\n    if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n        throw new Error(\"invalid float 32: \" + arg); // eslint-disable-line @typescript-eslint/restrict-plus-operands -- we want the implicit conversion to string\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRDtBQUNyRCIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9hc3NlcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogQXNzZXJ0IHRoYXQgY29uZGl0aW9uIGlzIHRydXRoeSBvciB0aHJvdyBlcnJvciAod2l0aCBtZXNzYWdlKVxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0KGNvbmRpdGlvbiwgbXNnKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9zdHJpY3QtYm9vbGVhbi1leHByZXNzaW9ucyAtLSB3ZSB3YW50IHRoZSBpbXBsaWNpdCBjb252ZXJzaW9uIHRvIGJvb2xlYW5cbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICB9XG59XG5jb25zdCBGTE9BVDMyX01BWCA9IDMuNDAyODIzNDY2Mzg1Mjg4NmUzOCwgRkxPQVQzMl9NSU4gPSAtMy40MDI4MjM0NjYzODUyODg2ZTM4LCBVSU5UMzJfTUFYID0gMHhmZmZmZmZmZiwgSU5UMzJfTUFYID0gMHg3ZmZmZmZmZiwgSU5UMzJfTUlOID0gLTB4ODAwMDAwMDA7XG4vKipcbiAqIEFzc2VydCBhIHZhbGlkIHNpZ25lZCBwcm90b2J1ZiAzMi1iaXQgaW50ZWdlci5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGludCAzMjogXCIgKyB0eXBlb2YgYXJnKTtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoYXJnKSB8fCBhcmcgPiBJTlQzMl9NQVggfHwgYXJnIDwgSU5UMzJfTUlOKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIGludCAzMjogXCIgKyBhcmcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC1wbHVzLW9wZXJhbmRzIC0tIHdlIHdhbnQgdGhlIGltcGxpY2l0IGNvbnZlcnNpb24gdG8gc3RyaW5nXG59XG4vKipcbiAqIEFzc2VydCBhIHZhbGlkIHVuc2lnbmVkIHByb3RvYnVmIDMyLWJpdCBpbnRlZ2VyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0VUludDMyKGFyZykge1xuICAgIGlmICh0eXBlb2YgYXJnICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHVpbnQgMzI6IFwiICsgdHlwZW9mIGFyZyk7XG4gICAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKGFyZykgfHwgYXJnID4gVUlOVDMyX01BWCB8fCBhcmcgPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHVpbnQgMzI6IFwiICsgYXJnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvcmVzdHJpY3QtcGx1cy1vcGVyYW5kcyAtLSB3ZSB3YW50IHRoZSBpbXBsaWNpdCBjb252ZXJzaW9uIHRvIHN0cmluZ1xufVxuLyoqXG4gKiBBc3NlcnQgYSB2YWxpZCBwcm90b2J1ZiBmbG9hdCB2YWx1ZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydEZsb2F0MzIoYXJnKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcgIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcImludmFsaWQgZmxvYXQgMzI6IFwiICsgdHlwZW9mIGFyZyk7XG4gICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoYXJnKSlcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChhcmcgPiBGTE9BVDMyX01BWCB8fCBhcmcgPCBGTE9BVDMyX01JTilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBmbG9hdCAzMjogXCIgKyBhcmcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9yZXN0cmljdC1wbHVzLW9wZXJhbmRzIC0tIHdlIHdhbnQgdGhlIGltcGxpY2l0IGNvbnZlcnNpb24gdG8gc3RyaW5nXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeBinaryFormat: () => (/* binding */ makeBinaryFormat),\n/* harmony export */   writeMapEntry: () => (/* binding */ writeMapEntry)\n/* harmony export */ });\n/* harmony import */ var _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../binary-encoding.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\");\n/* harmony import */ var _field_wrapper_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./field-wrapper.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _reflect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-return */\nconst unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n    readerFactory: (bytes) => new _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryReader(bytes),\n};\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n    writerFactory: () => new _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.BinaryWriter(),\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction makeBinaryFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        listUnknownFields(message) {\n            var _a;\n            return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n        },\n        discardUnknownFields(message) {\n            delete message[unknownFieldsSymbol];\n        },\n        writeUnknownFields(message, writer) {\n            const m = message;\n            const c = m[unknownFieldsSymbol];\n            if (c) {\n                for (const f of c) {\n                    writer.tag(f.no, f.wireType).raw(f.data);\n                }\n            }\n        },\n        onUnknownField(message, no, wireType, data) {\n            const m = message;\n            if (!Array.isArray(m[unknownFieldsSymbol])) {\n                m[unknownFieldsSymbol] = [];\n            }\n            m[unknownFieldsSymbol].push({ no, wireType, data });\n        },\n        readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n            const type = message.getType();\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            const end = delimitedMessageEncoding\n                ? reader.len\n                : reader.pos + lengthOrEndTagFieldNo;\n            let fieldNo, wireType;\n            while (reader.pos < end) {\n                [fieldNo, wireType] = reader.tag();\n                if (delimitedMessageEncoding === true &&\n                    wireType == _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup) {\n                    break;\n                }\n                const field = type.fields.find(fieldNo);\n                if (!field) {\n                    const data = reader.skip(wireType, fieldNo);\n                    if (options.readUnknownFields) {\n                        this.onUnknownField(message, fieldNo, wireType, data);\n                    }\n                    continue;\n                }\n                readField(message, reader, field, wireType, options);\n            }\n            if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n                (wireType != _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n                throw new Error(`invalid end group tag`);\n            }\n        },\n        readField,\n        writeMessage(message, writer, options) {\n            const type = message.getType();\n            for (const field of type.fields.byNumber()) {\n                if (!(0,_reflect_js__WEBPACK_IMPORTED_MODULE_1__.isFieldSet)(field, message)) {\n                    if (field.req) {\n                        throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n                    }\n                    continue;\n                }\n                const value = field.oneof\n                    ? message[field.oneof.localName].value\n                    : message[field.localName];\n                writeField(field, value, writer, options);\n            }\n            if (options.writeUnknownFields) {\n                this.writeUnknownFields(message, writer);\n            }\n            return writer;\n        },\n        writeField(field, value, writer, options) {\n            // The behavior of our internal function has changed, it does no longer\n            // accept `undefined` values for singular scalar and map.\n            // For backwards-compatibility, we support the old form that is part of\n            // the public API through the interface BinaryFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            writeField(field, value, writer, options);\n        },\n    };\n}\nfunction readField(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nreader, field, wireType, options) {\n    let { repeated, localName } = field;\n    if (field.oneof) {\n        target = target[field.oneof.localName];\n        if (target.case != localName) {\n            delete target.value;\n        }\n        target.case = localName;\n        localName = \"value\";\n    }\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            const scalarType = field.kind == \"enum\" ? _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32 : field.T;\n            let read = readScalar;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            if (field.kind == \"scalar\" && field.L > 0) {\n                read = readScalarLTString;\n            }\n            if (repeated) {\n                let arr = target[localName]; // safe to assume presence of array, oneof cannot contain repeated values\n                const isPacked = wireType == _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited &&\n                    scalarType != _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING &&\n                    scalarType != _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES;\n                if (isPacked) {\n                    let e = reader.uint32() + reader.pos;\n                    while (reader.pos < e) {\n                        arr.push(read(reader, scalarType));\n                    }\n                }\n                else {\n                    arr.push(read(reader, scalarType));\n                }\n            }\n            else {\n                target[localName] = read(reader, scalarType);\n            }\n            break;\n        case \"message\":\n            const messageType = field.T;\n            if (repeated) {\n                // safe to assume presence of array, oneof cannot contain repeated values\n                target[localName].push(readMessageField(reader, new messageType(), options, field));\n            }\n            else {\n                if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_3__.isMessage)(target[localName])) {\n                    readMessageField(reader, target[localName], options, field);\n                }\n                else {\n                    target[localName] = readMessageField(reader, new messageType(), options, field);\n                    if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n                        target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n                    }\n                }\n            }\n            break;\n        case \"map\":\n            let [mapKey, mapVal] = readMapEntry(field, reader, options);\n            // safe to assume presence of map object, oneof cannot contain repeated values\n            target[localName][mapKey] = mapVal;\n            break;\n    }\n}\n// Read a message, avoiding MessageType.fromBinary() to re-use the\n// BinaryReadOptions and the IBinaryReader.\nfunction readMessageField(reader, message, options, field) {\n    const format = message.getType().runtime.bin;\n    const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n    format.readMessage(message, reader, delimited ? field.no : reader.uint32(), // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options, delimited);\n    return message;\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(field, reader, options) {\n    const length = reader.uint32(), end = reader.pos + length;\n    let key, val;\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.K);\n                break;\n            case 2:\n                switch (field.V.kind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.V.T);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, new field.V.T(), options, undefined);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.K, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.LongType.BIGINT);\n    }\n    if (typeof key != \"string\" && typeof key != \"number\") {\n        key = key.toString();\n    }\n    if (val === undefined) {\n        switch (field.V.kind) {\n            case \"scalar\":\n                val = (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(field.V.T, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.LongType.BIGINT);\n                break;\n            case \"enum\":\n                val = field.V.T.values[0].no;\n                break;\n            case \"message\":\n                val = new field.V.T();\n                break;\n        }\n    }\n    return [key, val];\n}\n// Read a scalar value, but return 64 bit integral types (int64, uint64,\n// sint64, fixed64, sfixed64) as string instead of bigint.\nfunction readScalarLTString(reader, type) {\n    const v = readScalar(reader, type);\n    return typeof v == \"bigint\" ? v.toString() : v;\n}\n// Does not use scalarTypeInfo() for better performance.\nfunction readScalar(reader, type) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            return reader.string();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            return reader.bool();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n            return reader.double();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            return reader.float();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n            return reader.int32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT64:\n            return reader.int64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT64:\n            return reader.uint64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n            return reader.fixed64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n            return reader.bytes();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n            return reader.fixed32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT64:\n            return reader.sint64();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n            return reader.uint32();\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\nfunction writeField(field, value, writer, options) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n    const repeated = field.repeated;\n    switch (field.kind) {\n        case \"scalar\":\n        case \"enum\":\n            let scalarType = field.kind == \"enum\" ? _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32 : field.T;\n            if (repeated) {\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n                if (field.packed) {\n                    writePacked(writer, scalarType, field.no, value);\n                }\n                else {\n                    for (const item of value) {\n                        writeScalar(writer, scalarType, field.no, item);\n                    }\n                }\n            }\n            else {\n                writeScalar(writer, scalarType, field.no, value);\n            }\n            break;\n        case \"message\":\n            if (repeated) {\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n                for (const item of value) {\n                    writeMessageField(writer, options, field, item);\n                }\n            }\n            else {\n                writeMessageField(writer, options, field, value);\n            }\n            break;\n        case \"map\":\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"object\" && value != null);\n            for (const [key, val] of Object.entries(value)) {\n                writeMapEntry(writer, options, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeMapEntry(writer, options, field, key, value) {\n    writer.tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited);\n    writer.fork();\n    // javascript only allows number or string for object properties\n    // we convert from our representation to the protobuf type\n    let keyValue = key;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- we deliberately handle just the special cases for map keys\n    switch (field.K) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.UINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SINT32:\n            keyValue = Number.parseInt(key);\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BOOL:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(key == \"true\" || key == \"false\");\n            keyValue = key == \"true\";\n            break;\n    }\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.K, 1, keyValue);\n    // write value, expecting value field number = 2\n    switch (field.V.kind) {\n        case \"scalar\":\n            writeScalar(writer, field.V.T, 2, value);\n            break;\n        case \"enum\":\n            writeScalar(writer, _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n            writer.tag(2, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).bytes(value.toBinary(options));\n            break;\n    }\n    writer.join();\n}\n// Value must not be undefined\nfunction writeMessageField(writer, options, field, value) {\n    const message = (0,_field_wrapper_js__WEBPACK_IMPORTED_MODULE_6__.wrapField)(field.T, value);\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.delimited)\n        writer\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.StartGroup)\n            .raw(message.toBinary(options))\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.EndGroup);\n    else\n        writer\n            .tag(field.no, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited)\n            .bytes(message.toBinary(options));\n}\nfunction writeScalar(writer, type, fieldNo, value) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value !== undefined);\n    let [wireType, method] = scalarTypeInfo(type);\n    writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n    if (!value.length) {\n        return;\n    }\n    writer.tag(fieldNo, _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited).fork();\n    let [, method] = scalarTypeInfo(type);\n    for (let i = 0; i < value.length; i++) {\n        writer[method](value[i]);\n    }\n    writer.join();\n}\n/**\n * Get information for writing a scalar value.\n *\n * Returns tuple:\n * [0]: appropriate WireType\n * [1]: name of the appropriate method of IBinaryWriter\n * [2]: whether the given value is a default value for proto3 semantics\n *\n * If argument `value` is omitted, [2] is always false.\n */\n// TODO replace call-sites writeScalar() and writePacked(), then remove\nfunction scalarTypeInfo(type) {\n    let wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Varint;\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- INT32, UINT32, SINT32 are covered by the defaults\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.STRING:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.LengthDelimited;\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED64:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit64;\n            break;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.FLOAT:\n            wireType = _binary_encoding_js__WEBPACK_IMPORTED_MODULE_0__.WireType.Bit32;\n            break;\n    }\n    const method = _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType[type].toLowerCase();\n    return [wireType, method];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnumType: () => (/* binding */ getEnumType),\n/* harmony export */   makeEnum: () => (/* binding */ makeEnum),\n/* harmony export */   makeEnumType: () => (/* binding */ makeEnumType),\n/* harmony export */   setEnumType: () => (/* binding */ setEnumType)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nconst enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\n/**\n * Get reflection information from a generated enum.\n * If this function is called on something other than a generated\n * enum, it raises an error.\n */\nfunction getEnumType(enumObject) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-explicit-any\n    const t = enumObject[enumTypeSymbol];\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(t, \"missing enum type on enum object\");\n    return t; // eslint-disable-line @typescript-eslint/no-unsafe-return\n}\n/**\n * Sets reflection information on a generated enum.\n */\nfunction setEnumType(enumObject, typeName, values, opt) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n        no: v.no,\n        name: v.name,\n        localName: enumObject[v.no],\n    })), opt);\n}\n/**\n * Create a new EnumType with the given values.\n */\nfunction makeEnumType(typeName, values, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_opt) {\n    const names = Object.create(null);\n    const numbers = Object.create(null);\n    const normalValues = [];\n    for (const value of values) {\n        // We do not surface options at this time\n        // const value: EnumValueInfo = {...v, options: v.options ?? emptyReadonlyObject};\n        const n = normalizeEnumValue(value);\n        normalValues.push(n);\n        names[value.name] = n;\n        numbers[value.no] = n;\n    }\n    return {\n        typeName,\n        values: normalValues,\n        // We do not surface options at this time\n        // options: opt?.options ?? Object.create(null),\n        findName(name) {\n            return names[name];\n        },\n        findNumber(no) {\n            return numbers[no];\n        },\n    };\n}\n/**\n * Create a new enum object with the given values.\n * Sets reflection information.\n */\nfunction makeEnum(typeName, values, opt) {\n    const enumObject = {};\n    for (const value of values) {\n        const n = normalizeEnumValue(value);\n        enumObject[n.localName] = n.no;\n        enumObject[n.no] = n.localName;\n    }\n    setEnumType(enumObject, typeName, values, opt);\n    return enumObject;\n}\nfunction normalizeEnumValue(value) {\n    if (\"localName\" in value) {\n        return value;\n    }\n    return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZW51bS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUksa0RBQU07QUFDVixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsWUFBWSx1QkFBdUI7QUFDNUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZW51bS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4vYXNzZXJ0LmpzXCI7XG5jb25zdCBlbnVtVHlwZVN5bWJvbCA9IFN5bWJvbChcIkBidWZidWlsZC9wcm90b2J1Zi9lbnVtLXR5cGVcIik7XG4vKipcbiAqIEdldCByZWZsZWN0aW9uIGluZm9ybWF0aW9uIGZyb20gYSBnZW5lcmF0ZWQgZW51bS5cbiAqIElmIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIHNvbWV0aGluZyBvdGhlciB0aGFuIGEgZ2VuZXJhdGVkXG4gKiBlbnVtLCBpdCByYWlzZXMgYW4gZXJyb3IuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRFbnVtVHlwZShlbnVtT2JqZWN0KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyxAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFzc2lnbm1lbnQsQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IHQgPSBlbnVtT2JqZWN0W2VudW1UeXBlU3ltYm9sXTtcbiAgICBhc3NlcnQodCwgXCJtaXNzaW5nIGVudW0gdHlwZSBvbiBlbnVtIG9iamVjdFwiKTtcbiAgICByZXR1cm4gdDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLXJldHVyblxufVxuLyoqXG4gKiBTZXRzIHJlZmxlY3Rpb24gaW5mb3JtYXRpb24gb24gYSBnZW5lcmF0ZWQgZW51bS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldEVudW1UeXBlKGVudW1PYmplY3QsIHR5cGVOYW1lLCB2YWx1ZXMsIG9wdCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBlbnVtT2JqZWN0W2VudW1UeXBlU3ltYm9sXSA9IG1ha2VFbnVtVHlwZSh0eXBlTmFtZSwgdmFsdWVzLm1hcCgodikgPT4gKHtcbiAgICAgICAgbm86IHYubm8sXG4gICAgICAgIG5hbWU6IHYubmFtZSxcbiAgICAgICAgbG9jYWxOYW1lOiBlbnVtT2JqZWN0W3Yubm9dLFxuICAgIH0pKSwgb3B0KTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgbmV3IEVudW1UeXBlIHdpdGggdGhlIGdpdmVuIHZhbHVlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VFbnVtVHlwZSh0eXBlTmFtZSwgdmFsdWVzLCBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbl9vcHQpIHtcbiAgICBjb25zdCBuYW1lcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3QgbnVtYmVycyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3Qgbm9ybWFsVmFsdWVzID0gW107XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgLy8gV2UgZG8gbm90IHN1cmZhY2Ugb3B0aW9ucyBhdCB0aGlzIHRpbWVcbiAgICAgICAgLy8gY29uc3QgdmFsdWU6IEVudW1WYWx1ZUluZm8gPSB7Li4udiwgb3B0aW9uczogdi5vcHRpb25zID8/IGVtcHR5UmVhZG9ubHlPYmplY3R9O1xuICAgICAgICBjb25zdCBuID0gbm9ybWFsaXplRW51bVZhbHVlKHZhbHVlKTtcbiAgICAgICAgbm9ybWFsVmFsdWVzLnB1c2gobik7XG4gICAgICAgIG5hbWVzW3ZhbHVlLm5hbWVdID0gbjtcbiAgICAgICAgbnVtYmVyc1t2YWx1ZS5ub10gPSBuO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlTmFtZSxcbiAgICAgICAgdmFsdWVzOiBub3JtYWxWYWx1ZXMsXG4gICAgICAgIC8vIFdlIGRvIG5vdCBzdXJmYWNlIG9wdGlvbnMgYXQgdGhpcyB0aW1lXG4gICAgICAgIC8vIG9wdGlvbnM6IG9wdD8ub3B0aW9ucyA/PyBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgICBmaW5kTmFtZShuYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gbmFtZXNbbmFtZV07XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmROdW1iZXIobm8pIHtcbiAgICAgICAgICAgIHJldHVybiBudW1iZXJzW25vXTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgZW51bSBvYmplY3Qgd2l0aCB0aGUgZ2l2ZW4gdmFsdWVzLlxuICogU2V0cyByZWZsZWN0aW9uIGluZm9ybWF0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUVudW0odHlwZU5hbWUsIHZhbHVlcywgb3B0KSB7XG4gICAgY29uc3QgZW51bU9iamVjdCA9IHt9O1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgIGNvbnN0IG4gPSBub3JtYWxpemVFbnVtVmFsdWUodmFsdWUpO1xuICAgICAgICBlbnVtT2JqZWN0W24ubG9jYWxOYW1lXSA9IG4ubm87XG4gICAgICAgIGVudW1PYmplY3Rbbi5ub10gPSBuLmxvY2FsTmFtZTtcbiAgICB9XG4gICAgc2V0RW51bVR5cGUoZW51bU9iamVjdCwgdHlwZU5hbWUsIHZhbHVlcywgb3B0KTtcbiAgICByZXR1cm4gZW51bU9iamVjdDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUVudW1WYWx1ZSh2YWx1ZSkge1xuICAgIGlmIChcImxvY2FsTmFtZVwiIGluIHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdmFsdWUpLCB7IGxvY2FsTmFtZTogdmFsdWUubmFtZSB9KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createExtensionContainer: () => (/* binding */ createExtensionContainer),\n/* harmony export */   filterUnknownFields: () => (/* binding */ filterUnknownFields),\n/* harmony export */   makeExtension: () => (/* binding */ makeExtension)\n/* harmony export */ });\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Create a new extension using the given runtime.\n */\nfunction makeExtension(runtime, typeName, extendee, field) {\n    let fi;\n    return {\n        typeName,\n        extendee,\n        get field() {\n            if (!fi) {\n                const i = (typeof field == \"function\" ? field() : field);\n                i.name = typeName.split(\".\").pop();\n                i.jsonName = `[${typeName}]`;\n                fi = runtime.util.newFieldList([i]).list()[0];\n            }\n            return fi;\n        },\n        runtime,\n    };\n}\n/**\n * Create a container that allows us to read extension fields into it with the\n * same logic as regular fields.\n */\nfunction createExtensionContainer(extension) {\n    const localName = extension.field.localName;\n    const container = Object.create(null);\n    container[localName] = initExtensionField(extension);\n    return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n    const field = ext.field;\n    if (field.repeated) {\n        return [];\n    }\n    if (field.default !== undefined) {\n        return field.default;\n    }\n    switch (field.kind) {\n        case \"enum\":\n            return field.T.values[0].no;\n        case \"scalar\":\n            return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.scalarZeroValue)(field.T, field.L);\n        case \"message\":\n            // eslint-disable-next-line no-case-declarations\n            const T = field.T, value = new T();\n            return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n        case \"map\":\n            throw \"map fields are not allowed to be extensions\";\n    }\n}\n/**\n * Helper to filter unknown fields, optimized based on field type.\n */\nfunction filterUnknownFields(unknownFields, field) {\n    if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n        // singular scalar fields do not merge, we pick the last\n        for (let i = unknownFields.length - 1; i >= 0; --i) {\n            if (unknownFields[i].no == field.no) {\n                return [unknownFields[i]];\n            }\n        }\n        return [];\n    }\n    return unknownFields.filter((uf) => uf.no === field.no);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDK0M7QUFDRTtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsU0FBUztBQUMxQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLCtDQUErQyxRQUFRO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZXh0ZW5zaW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vc2NhbGFycy5qc1wiO1xuaW1wb3J0IHsgV2lyZVR5cGUgfSBmcm9tIFwiLi4vYmluYXJ5LWVuY29kaW5nLmpzXCI7XG4vKipcbiAqIENyZWF0ZSBhIG5ldyBleHRlbnNpb24gdXNpbmcgdGhlIGdpdmVuIHJ1bnRpbWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRXh0ZW5zaW9uKHJ1bnRpbWUsIHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpIHtcbiAgICBsZXQgZmk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZU5hbWUsXG4gICAgICAgIGV4dGVuZGVlLFxuICAgICAgICBnZXQgZmllbGQoKSB7XG4gICAgICAgICAgICBpZiAoIWZpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaSA9ICh0eXBlb2YgZmllbGQgPT0gXCJmdW5jdGlvblwiID8gZmllbGQoKSA6IGZpZWxkKTtcbiAgICAgICAgICAgICAgICBpLm5hbWUgPSB0eXBlTmFtZS5zcGxpdChcIi5cIikucG9wKCk7XG4gICAgICAgICAgICAgICAgaS5qc29uTmFtZSA9IGBbJHt0eXBlTmFtZX1dYDtcbiAgICAgICAgICAgICAgICBmaSA9IHJ1bnRpbWUudXRpbC5uZXdGaWVsZExpc3QoW2ldKS5saXN0KClbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmk7XG4gICAgICAgIH0sXG4gICAgICAgIHJ1bnRpbWUsXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlIGEgY29udGFpbmVyIHRoYXQgYWxsb3dzIHVzIHRvIHJlYWQgZXh0ZW5zaW9uIGZpZWxkcyBpbnRvIGl0IHdpdGggdGhlXG4gKiBzYW1lIGxvZ2ljIGFzIHJlZ3VsYXIgZmllbGRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZW5zaW9uQ29udGFpbmVyKGV4dGVuc2lvbikge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGV4dGVuc2lvbi5maWVsZC5sb2NhbE5hbWU7XG4gICAgY29uc3QgY29udGFpbmVyID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBjb250YWluZXJbbG9jYWxOYW1lXSA9IGluaXRFeHRlbnNpb25GaWVsZChleHRlbnNpb24pO1xuICAgIHJldHVybiBbY29udGFpbmVyLCAoKSA9PiBjb250YWluZXJbbG9jYWxOYW1lXV07XG59XG5mdW5jdGlvbiBpbml0RXh0ZW5zaW9uRmllbGQoZXh0KSB7XG4gICAgY29uc3QgZmllbGQgPSBleHQuZmllbGQ7XG4gICAgaWYgKGZpZWxkLnJlcGVhdGVkKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgaWYgKGZpZWxkLmRlZmF1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gZmllbGQuZGVmYXVsdDtcbiAgICB9XG4gICAgc3dpdGNoIChmaWVsZC5raW5kKSB7XG4gICAgICAgIGNhc2UgXCJlbnVtXCI6XG4gICAgICAgICAgICByZXR1cm4gZmllbGQuVC52YWx1ZXNbMF0ubm87XG4gICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgIHJldHVybiBzY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgZmllbGQuTCk7XG4gICAgICAgIGNhc2UgXCJtZXNzYWdlXCI6XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY2FzZS1kZWNsYXJhdGlvbnNcbiAgICAgICAgICAgIGNvbnN0IFQgPSBmaWVsZC5ULCB2YWx1ZSA9IG5ldyBUKCk7XG4gICAgICAgICAgICByZXR1cm4gVC5maWVsZFdyYXBwZXIgPyBULmZpZWxkV3JhcHBlci51bndyYXBGaWVsZCh2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgdGhyb3cgXCJtYXAgZmllbGRzIGFyZSBub3QgYWxsb3dlZCB0byBiZSBleHRlbnNpb25zXCI7XG4gICAgfVxufVxuLyoqXG4gKiBIZWxwZXIgdG8gZmlsdGVyIHVua25vd24gZmllbGRzLCBvcHRpbWl6ZWQgYmFzZWQgb24gZmllbGQgdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclVua25vd25GaWVsZHModW5rbm93bkZpZWxkcywgZmllbGQpIHtcbiAgICBpZiAoIWZpZWxkLnJlcGVhdGVkICYmIChmaWVsZC5raW5kID09IFwiZW51bVwiIHx8IGZpZWxkLmtpbmQgPT0gXCJzY2FsYXJcIikpIHtcbiAgICAgICAgLy8gc2luZ3VsYXIgc2NhbGFyIGZpZWxkcyBkbyBub3QgbWVyZ2UsIHdlIHBpY2sgdGhlIGxhc3RcbiAgICAgICAgZm9yIChsZXQgaSA9IHVua25vd25GaWVsZHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgICAgIGlmICh1bmtub3duRmllbGRzW2ldLm5vID09IGZpZWxkLm5vKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFt1bmtub3duRmllbGRzW2ldXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiB1bmtub3duRmllbGRzLmZpbHRlcigodWYpID0+IHVmLm5vID09PSBmaWVsZC5ubyk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js":
/*!************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalFieldList: () => (/* binding */ InternalFieldList)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nclass InternalFieldList {\n    constructor(fields, normalizer) {\n        this._fields = fields;\n        this._normalizer = normalizer;\n    }\n    findJsonName(jsonName) {\n        if (!this.jsonNames) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.jsonName] = t[f.name] = f;\n            }\n            this.jsonNames = t;\n        }\n        return this.jsonNames[jsonName];\n    }\n    find(fieldNo) {\n        if (!this.numbers) {\n            const t = {};\n            for (const f of this.list()) {\n                t[f.no] = f;\n            }\n            this.numbers = t;\n        }\n        return this.numbers[fieldNo];\n    }\n    list() {\n        if (!this.all) {\n            this.all = this._normalizer(this._fields);\n        }\n        return this.all;\n    }\n    byNumber() {\n        if (!this.numbersAsc) {\n            this.numbersAsc = this.list()\n                .concat()\n                .sort((a, b) => a.no - b.no);\n        }\n        return this.numbersAsc;\n    }\n    byMember() {\n        if (!this.members) {\n            this.members = [];\n            const a = this.members;\n            let o;\n            for (const f of this.list()) {\n                if (f.oneof) {\n                    if (f.oneof !== o) {\n                        o = f.oneof;\n                        a.push(o);\n                    }\n                }\n                else {\n                    a.push(f);\n                }\n            }\n        }\n        return this.members;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtbGlzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2ZpZWxkLWxpc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmV4cG9ydCBjbGFzcyBJbnRlcm5hbEZpZWxkTGlzdCB7XG4gICAgY29uc3RydWN0b3IoZmllbGRzLCBub3JtYWxpemVyKSB7XG4gICAgICAgIHRoaXMuX2ZpZWxkcyA9IGZpZWxkcztcbiAgICAgICAgdGhpcy5fbm9ybWFsaXplciA9IG5vcm1hbGl6ZXI7XG4gICAgfVxuICAgIGZpbmRKc29uTmFtZShqc29uTmFtZSkge1xuICAgICAgICBpZiAoIXRoaXMuanNvbk5hbWVzKSB7XG4gICAgICAgICAgICBjb25zdCB0ID0ge307XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGYgb2YgdGhpcy5saXN0KCkpIHtcbiAgICAgICAgICAgICAgICB0W2YuanNvbk5hbWVdID0gdFtmLm5hbWVdID0gZjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuanNvbk5hbWVzID0gdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5qc29uTmFtZXNbanNvbk5hbWVdO1xuICAgIH1cbiAgICBmaW5kKGZpZWxkTm8pIHtcbiAgICAgICAgaWYgKCF0aGlzLm51bWJlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHQgPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZiBvZiB0aGlzLmxpc3QoKSkge1xuICAgICAgICAgICAgICAgIHRbZi5ub10gPSBmO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5udW1iZXJzID0gdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5udW1iZXJzW2ZpZWxkTm9dO1xuICAgIH1cbiAgICBsaXN0KCkge1xuICAgICAgICBpZiAoIXRoaXMuYWxsKSB7XG4gICAgICAgICAgICB0aGlzLmFsbCA9IHRoaXMuX25vcm1hbGl6ZXIodGhpcy5fZmllbGRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5hbGw7XG4gICAgfVxuICAgIGJ5TnVtYmVyKCkge1xuICAgICAgICBpZiAoIXRoaXMubnVtYmVyc0FzYykge1xuICAgICAgICAgICAgdGhpcy5udW1iZXJzQXNjID0gdGhpcy5saXN0KClcbiAgICAgICAgICAgICAgICAuY29uY2F0KClcbiAgICAgICAgICAgICAgICAuc29ydCgoYSwgYikgPT4gYS5ubyAtIGIubm8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLm51bWJlcnNBc2M7XG4gICAgfVxuICAgIGJ5TWVtYmVyKCkge1xuICAgICAgICBpZiAoIXRoaXMubWVtYmVycykge1xuICAgICAgICAgICAgdGhpcy5tZW1iZXJzID0gW107XG4gICAgICAgICAgICBjb25zdCBhID0gdGhpcy5tZW1iZXJzO1xuICAgICAgICAgICAgbGV0IG87XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGYgb2YgdGhpcy5saXN0KCkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZi5vbmVvZikge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZi5vbmVvZiAhPT0gbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbyA9IGYub25lb2Y7XG4gICAgICAgICAgICAgICAgICAgICAgICBhLnB1c2gobyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGEucHVzaChmKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubWVtYmVycztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeFieldInfos: () => (/* binding */ normalizeFieldInfos)\n/* harmony export */ });\n/* harmony import */ var _field_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./field.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field.js\");\n/* harmony import */ var _names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Convert a collection of field info to an array of normalized FieldInfo.\n *\n * The argument `packedByDefault` specifies whether fields that do not specify\n * `packed` should be packed (proto3) or unpacked (proto2).\n */\nfunction normalizeFieldInfos(fieldInfos, packedByDefault) {\n    var _a, _b, _c, _d, _e, _f;\n    const r = [];\n    let o;\n    for (const field of typeof fieldInfos == \"function\"\n        ? fieldInfos()\n        : fieldInfos) {\n        const f = field;\n        f.localName = (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.localFieldName)(field.name, field.oneof !== undefined);\n        f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.fieldJsonName)(field.name);\n        f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n        if (field.kind == \"scalar\") {\n            f.L = (_c = field.L) !== null && _c !== void 0 ? _c : _scalar_js__WEBPACK_IMPORTED_MODULE_1__.LongType.BIGINT;\n        }\n        f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n        f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n        f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n        if (field.packed === undefined) {\n            if (packedByDefault) {\n                f.packed =\n                    field.kind == \"enum\" ||\n                        (field.kind == \"scalar\" &&\n                            field.T != _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES &&\n                            field.T != _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING);\n            }\n            else {\n                f.packed = false;\n            }\n        }\n        // We do not surface options at this time\n        // f.options = field.options ?? emptyReadonlyObject;\n        if (field.oneof !== undefined) {\n            const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n            if (!o || o.name != ooname) {\n                o = new _field_js__WEBPACK_IMPORTED_MODULE_2__.InternalOneofInfo(ooname);\n            }\n            f.oneof = o;\n            o.addField(f);\n        }\n        r.push(f);\n    }\n    return r;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtbm9ybWFsaXplLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUMrQztBQUNZO0FBQ1A7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBYztBQUNwQyw0RUFBNEUsd0RBQWE7QUFDekY7QUFDQTtBQUNBLGtFQUFrRSxnREFBUTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsa0RBQVU7QUFDakQsdUNBQXVDLGtEQUFVO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHdEQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2ZpZWxkLW5vcm1hbGl6ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgSW50ZXJuYWxPbmVvZkluZm8gfSBmcm9tIFwiLi9maWVsZC5qc1wiO1xuaW1wb3J0IHsgZmllbGRKc29uTmFtZSwgbG9jYWxGaWVsZE5hbWUgfSBmcm9tIFwiLi9uYW1lcy5qc1wiO1xuaW1wb3J0IHsgTG9uZ1R5cGUsIFNjYWxhclR5cGUgfSBmcm9tIFwiLi4vc2NhbGFyLmpzXCI7XG4vKipcbiAqIENvbnZlcnQgYSBjb2xsZWN0aW9uIG9mIGZpZWxkIGluZm8gdG8gYW4gYXJyYXkgb2Ygbm9ybWFsaXplZCBGaWVsZEluZm8uXG4gKlxuICogVGhlIGFyZ3VtZW50IGBwYWNrZWRCeURlZmF1bHRgIHNwZWNpZmllcyB3aGV0aGVyIGZpZWxkcyB0aGF0IGRvIG5vdCBzcGVjaWZ5XG4gKiBgcGFja2VkYCBzaG91bGQgYmUgcGFja2VkIChwcm90bzMpIG9yIHVucGFja2VkIChwcm90bzIpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplRmllbGRJbmZvcyhmaWVsZEluZm9zLCBwYWNrZWRCeURlZmF1bHQpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lLCBfZjtcbiAgICBjb25zdCByID0gW107XG4gICAgbGV0IG87XG4gICAgZm9yIChjb25zdCBmaWVsZCBvZiB0eXBlb2YgZmllbGRJbmZvcyA9PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgPyBmaWVsZEluZm9zKClcbiAgICAgICAgOiBmaWVsZEluZm9zKSB7XG4gICAgICAgIGNvbnN0IGYgPSBmaWVsZDtcbiAgICAgICAgZi5sb2NhbE5hbWUgPSBsb2NhbEZpZWxkTmFtZShmaWVsZC5uYW1lLCBmaWVsZC5vbmVvZiAhPT0gdW5kZWZpbmVkKTtcbiAgICAgICAgZi5qc29uTmFtZSA9IChfYSA9IGZpZWxkLmpzb25OYW1lKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBmaWVsZEpzb25OYW1lKGZpZWxkLm5hbWUpO1xuICAgICAgICBmLnJlcGVhdGVkID0gKF9iID0gZmllbGQucmVwZWF0ZWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGZhbHNlO1xuICAgICAgICBpZiAoZmllbGQua2luZCA9PSBcInNjYWxhclwiKSB7XG4gICAgICAgICAgICBmLkwgPSAoX2MgPSBmaWVsZC5MKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBMb25nVHlwZS5CSUdJTlQ7XG4gICAgICAgIH1cbiAgICAgICAgZi5kZWxpbWl0ZWQgPSAoX2QgPSBmaWVsZC5kZWxpbWl0ZWQpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IGZhbHNlO1xuICAgICAgICBmLnJlcSA9IChfZSA9IGZpZWxkLnJlcSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogZmFsc2U7XG4gICAgICAgIGYub3B0ID0gKF9mID0gZmllbGQub3B0KSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBmYWxzZTtcbiAgICAgICAgaWYgKGZpZWxkLnBhY2tlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAocGFja2VkQnlEZWZhdWx0KSB7XG4gICAgICAgICAgICAgICAgZi5wYWNrZWQgPVxuICAgICAgICAgICAgICAgICAgICBmaWVsZC5raW5kID09IFwiZW51bVwiIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICAoZmllbGQua2luZCA9PSBcInNjYWxhclwiICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuVCAhPSBTY2FsYXJUeXBlLkJZVEVTICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGQuVCAhPSBTY2FsYXJUeXBlLlNUUklORyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBmLnBhY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFdlIGRvIG5vdCBzdXJmYWNlIG9wdGlvbnMgYXQgdGhpcyB0aW1lXG4gICAgICAgIC8vIGYub3B0aW9ucyA9IGZpZWxkLm9wdGlvbnMgPz8gZW1wdHlSZWFkb25seU9iamVjdDtcbiAgICAgICAgaWYgKGZpZWxkLm9uZW9mICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IG9vbmFtZSA9IHR5cGVvZiBmaWVsZC5vbmVvZiA9PSBcInN0cmluZ1wiID8gZmllbGQub25lb2YgOiBmaWVsZC5vbmVvZi5uYW1lO1xuICAgICAgICAgICAgaWYgKCFvIHx8IG8ubmFtZSAhPSBvb25hbWUpIHtcbiAgICAgICAgICAgICAgICBvID0gbmV3IEludGVybmFsT25lb2ZJbmZvKG9vbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmLm9uZW9mID0gbztcbiAgICAgICAgICAgIG8uYWRkRmllbGQoZik7XG4gICAgICAgIH1cbiAgICAgICAgci5wdXNoKGYpO1xuICAgIH1cbiAgICByZXR1cm4gcjtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getUnwrappedFieldType: () => (/* binding */ getUnwrappedFieldType),\n/* harmony export */   wrapField: () => (/* binding */ wrapField)\n/* harmony export */ });\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n/**\n * Wrap a primitive message field value in its corresponding wrapper\n * message. This function is idempotent.\n */\nfunction wrapField(type, value) {\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_0__.isMessage)(value) || !type.fieldWrapper) {\n        return value;\n    }\n    return type.fieldWrapper.wrapField(value);\n}\n/**\n * If the given field uses one of the well-known wrapper types, return\n * the primitive type it wraps.\n */\nfunction getUnwrappedFieldType(field) {\n    if (field.fieldKind !== \"message\") {\n        return undefined;\n    }\n    if (field.repeated) {\n        return undefined;\n    }\n    if (field.oneof != undefined) {\n        return undefined;\n    }\n    return wktWrapperToScalarType[field.message.typeName];\n}\nconst wktWrapperToScalarType = {\n    \"google.protobuf.DoubleValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.DOUBLE,\n    \"google.protobuf.FloatValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.FLOAT,\n    \"google.protobuf.Int64Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT64,\n    \"google.protobuf.UInt64Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT64,\n    \"google.protobuf.Int32Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.INT32,\n    \"google.protobuf.UInt32Value\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.UINT32,\n    \"google.protobuf.BoolValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BOOL,\n    \"google.protobuf.StringValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.STRING,\n    \"google.protobuf.BytesValue\": _scalar_js__WEBPACK_IMPORTED_MODULE_1__.ScalarType.BYTES,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQtd3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDRTtBQUNHO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLHlEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxrREFBVTtBQUM3QyxrQ0FBa0Msa0RBQVU7QUFDNUMsa0NBQWtDLGtEQUFVO0FBQzVDLG1DQUFtQyxrREFBVTtBQUM3QyxrQ0FBa0Msa0RBQVU7QUFDNUMsbUNBQW1DLGtEQUFVO0FBQzdDLGlDQUFpQyxrREFBVTtBQUMzQyxtQ0FBbUMsa0RBQVU7QUFDN0Msa0NBQWtDLGtEQUFVO0FBQzVDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2ZpZWxkLXdyYXBwZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IE1lc3NhZ2UgfSBmcm9tIFwiLi4vbWVzc2FnZS5qc1wiO1xuaW1wb3J0IHsgU2NhbGFyVHlwZSB9IGZyb20gXCIuLi9zY2FsYXIuanNcIjtcbmltcG9ydCB7IGlzTWVzc2FnZSB9IGZyb20gXCIuLi9pcy1tZXNzYWdlLmpzXCI7XG4vKipcbiAqIFdyYXAgYSBwcmltaXRpdmUgbWVzc2FnZSBmaWVsZCB2YWx1ZSBpbiBpdHMgY29ycmVzcG9uZGluZyB3cmFwcGVyXG4gKiBtZXNzYWdlLiBUaGlzIGZ1bmN0aW9uIGlzIGlkZW1wb3RlbnQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3cmFwRmllbGQodHlwZSwgdmFsdWUpIHtcbiAgICBpZiAoaXNNZXNzYWdlKHZhbHVlKSB8fCAhdHlwZS5maWVsZFdyYXBwZXIpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZS5maWVsZFdyYXBwZXIud3JhcEZpZWxkKHZhbHVlKTtcbn1cbi8qKlxuICogSWYgdGhlIGdpdmVuIGZpZWxkIHVzZXMgb25lIG9mIHRoZSB3ZWxsLWtub3duIHdyYXBwZXIgdHlwZXMsIHJldHVyblxuICogdGhlIHByaW1pdGl2ZSB0eXBlIGl0IHdyYXBzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VW53cmFwcGVkRmllbGRUeXBlKGZpZWxkKSB7XG4gICAgaWYgKGZpZWxkLmZpZWxkS2luZCAhPT0gXCJtZXNzYWdlXCIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKGZpZWxkLnJlcGVhdGVkKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChmaWVsZC5vbmVvZiAhPSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHdrdFdyYXBwZXJUb1NjYWxhclR5cGVbZmllbGQubWVzc2FnZS50eXBlTmFtZV07XG59XG5jb25zdCB3a3RXcmFwcGVyVG9TY2FsYXJUeXBlID0ge1xuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlXCI6IFNjYWxhclR5cGUuRE9VQkxFLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkZsb2F0VmFsdWVcIjogU2NhbGFyVHlwZS5GTE9BVCxcbiAgICBcImdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlXCI6IFNjYWxhclR5cGUuSU5UNjQsXG4gICAgXCJnb29nbGUucHJvdG9idWYuVUludDY0VmFsdWVcIjogU2NhbGFyVHlwZS5VSU5UNjQsXG4gICAgXCJnb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZVwiOiBTY2FsYXJUeXBlLklOVDMyLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLlVJbnQzMlZhbHVlXCI6IFNjYWxhclR5cGUuVUlOVDMyLFxuICAgIFwiZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZVwiOiBTY2FsYXJUeXBlLkJPT0wsXG4gICAgXCJnb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVcIjogU2NhbGFyVHlwZS5TVFJJTkcsXG4gICAgXCJnb29nbGUucHJvdG9idWYuQnl0ZXNWYWx1ZVwiOiBTY2FsYXJUeXBlLkJZVEVTLFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/field.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/field.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InternalOneofInfo: () => (/* binding */ InternalOneofInfo)\n/* harmony export */ });\n/* harmony import */ var _names_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./names.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nclass InternalOneofInfo {\n    constructor(name) {\n        this.kind = \"oneof\";\n        this.repeated = false;\n        this.packed = false;\n        this.opt = false;\n        this.req = false;\n        this.default = undefined;\n        this.fields = [];\n        this.name = name;\n        this.localName = (0,_names_js__WEBPACK_IMPORTED_MODULE_0__.localOneofName)(name);\n    }\n    addField(field) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.assert)(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n        this.fields.push(field);\n    }\n    findField(localName) {\n        if (!this._lookup) {\n            this._lookup = Object.create(null);\n            for (let i = 0; i < this.fields.length; i++) {\n                this._lookup[this.fields[i].localName] = this.fields[i];\n            }\n        }\n        return this._lookup[localName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvZmllbGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNEM7QUFDUDtBQUM5QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix5REFBYztBQUN2QztBQUNBO0FBQ0EsUUFBUSxrREFBTSxnQ0FBZ0MsWUFBWSxhQUFhLFVBQVU7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3QkFBd0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL2ZpZWxkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBsb2NhbE9uZW9mTmFtZSB9IGZyb20gXCIuL25hbWVzLmpzXCI7XG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tIFwiLi9hc3NlcnQuanNcIjtcbmV4cG9ydCBjbGFzcyBJbnRlcm5hbE9uZW9mSW5mbyB7XG4gICAgY29uc3RydWN0b3IobmFtZSkge1xuICAgICAgICB0aGlzLmtpbmQgPSBcIm9uZW9mXCI7XG4gICAgICAgIHRoaXMucmVwZWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wYWNrZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5vcHQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZXEgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5kZWZhdWx0ID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLmZpZWxkcyA9IFtdO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmxvY2FsTmFtZSA9IGxvY2FsT25lb2ZOYW1lKG5hbWUpO1xuICAgIH1cbiAgICBhZGRGaWVsZChmaWVsZCkge1xuICAgICAgICBhc3NlcnQoZmllbGQub25lb2YgPT09IHRoaXMsIGBmaWVsZCAke2ZpZWxkLm5hbWV9IG5vdCBvbmUgb2YgJHt0aGlzLm5hbWV9YCk7XG4gICAgICAgIHRoaXMuZmllbGRzLnB1c2goZmllbGQpO1xuICAgIH1cbiAgICBmaW5kRmllbGQobG9jYWxOYW1lKSB7XG4gICAgICAgIGlmICghdGhpcy5fbG9va3VwKSB7XG4gICAgICAgICAgICB0aGlzLl9sb29rdXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmZpZWxkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvb2t1cFt0aGlzLmZpZWxkc1tpXS5sb2NhbE5hbWVdID0gdGhpcy5maWVsZHNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2xvb2t1cFtsb2NhbE5hbWVdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/field.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeJsonFormat: () => (/* binding */ makeJsonFormat)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../proto-base64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n/* harmony import */ var _extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../extension-accessor.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\");\n/* harmony import */ var _reflect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reflect.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\");\n/* harmony import */ var _field_wrapper_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./field-wrapper.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n/* eslint-disable no-case-declarations,@typescript-eslint/no-unsafe-argument,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call */\n// Default options for parsing JSON.\nconst jsonReadDefaults = {\n    ignoreUnknownFields: false,\n};\n// Default options for serializing to JSON.\nconst jsonWriteDefaults = {\n    emitDefaultValues: false,\n    enumAsInteger: false,\n    useProtoFieldName: false,\n    prettySpaces: 0,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nconst tokenNull = Symbol();\nconst tokenIgnoredUnknownEnum = Symbol();\nfunction makeJsonFormat() {\n    return {\n        makeReadOptions,\n        makeWriteOptions,\n        readMessage(type, json, options, message) {\n            if (json == null || Array.isArray(json) || typeof json != \"object\") {\n                throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n            }\n            message = message !== null && message !== void 0 ? message : new type();\n            const oneofSeen = new Map();\n            const registry = options.typeRegistry;\n            for (const [jsonKey, jsonValue] of Object.entries(json)) {\n                const field = type.fields.findJsonName(jsonKey);\n                if (field) {\n                    if (field.oneof) {\n                        if (jsonValue === null && field.kind == \"scalar\") {\n                            // see conformance test Required.Proto3.JsonInput.OneofFieldNull{First,Second}\n                            continue;\n                        }\n                        const seen = oneofSeen.get(field.oneof);\n                        if (seen !== undefined) {\n                            throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n                        }\n                        oneofSeen.set(field.oneof, jsonKey);\n                    }\n                    readField(message, jsonValue, field, options, type);\n                }\n                else {\n                    let found = false;\n                    if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) &&\n                        jsonKey.startsWith(\"[\") &&\n                        jsonKey.endsWith(\"]\")) {\n                        const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n                        if (ext && ext.extendee.typeName == type.typeName) {\n                            found = true;\n                            const [container, get] = (0,_extensions_js__WEBPACK_IMPORTED_MODULE_0__.createExtensionContainer)(ext);\n                            readField(container, jsonValue, ext.field, options, ext);\n                            // We pass on the options as BinaryReadOptions/BinaryWriteOptions,\n                            // so that users can bring their own binary reader and writer factories\n                            // if necessary.\n                            (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.setExtension)(message, ext, get(), options);\n                        }\n                    }\n                    if (!found && !options.ignoreUnknownFields) {\n                        throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n                    }\n                }\n            }\n            return message;\n        },\n        writeMessage(message, options) {\n            const type = message.getType();\n            const json = {};\n            let field;\n            try {\n                for (field of type.fields.byNumber()) {\n                    if (!(0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.isFieldSet)(field, message)) {\n                        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n                        if (field.req) {\n                            throw `required field not set`;\n                        }\n                        if (!options.emitDefaultValues) {\n                            continue;\n                        }\n                        if (!canEmitFieldDefaultValue(field)) {\n                            continue;\n                        }\n                    }\n                    const value = field.oneof\n                        ? message[field.oneof.localName].value\n                        : message[field.localName];\n                    const jsonValue = writeField(field, value, options);\n                    if (jsonValue !== undefined) {\n                        json[options.useProtoFieldName ? field.name : field.jsonName] =\n                            jsonValue;\n                    }\n                }\n                const registry = options.typeRegistry;\n                if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n                    for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                        const ext = registry.findExtensionFor(type.typeName, uf.no);\n                        if (ext && (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.hasExtension)(message, ext)) {\n                            // We pass on the options as BinaryReadOptions, so that users can bring their own\n                            // binary reader factory if necessary.\n                            const value = (0,_extension_accessor_js__WEBPACK_IMPORTED_MODULE_1__.getExtension)(message, ext, options);\n                            const jsonValue = writeField(ext.field, value, options);\n                            if (jsonValue !== undefined) {\n                                json[ext.field.jsonName] = jsonValue;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                const m = field\n                    ? `cannot encode field ${type.typeName}.${field.name} to JSON`\n                    : `cannot encode message ${type.typeName} to JSON`;\n                const r = e instanceof Error ? e.message : String(e);\n                throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n            }\n            return json;\n        },\n        readScalar(type, json, longType) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            return readScalar(type, json, longType !== null && longType !== void 0 ? longType : _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true);\n        },\n        writeScalar(type, value, emitDefaultValues) {\n            // The signature of our internal function has changed. For backwards-\n            // compatibility, we support the old form that is part of the public API\n            // through the interface JsonFormat.\n            if (value === undefined) {\n                return undefined;\n            }\n            if (emitDefaultValues || (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.isScalarZeroValue)(type, value)) {\n                return writeScalar(type, value);\n            }\n            return undefined;\n        },\n        debug: debugJsonValue,\n    };\n}\nfunction debugJsonValue(json) {\n    if (json === null) {\n        return \"null\";\n    }\n    switch (typeof json) {\n        case \"object\":\n            return Array.isArray(json) ? \"array\" : \"object\";\n        case \"string\":\n            return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n        default:\n            return String(json);\n    }\n}\n// Read a JSON value for a field.\n// The \"parentType\" argument is only used to provide context in errors.\nfunction readField(target, jsonValue, field, options, parentType) {\n    let localName = field.localName;\n    if (field.repeated) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(field.kind != \"map\");\n        if (jsonValue === null) {\n            return;\n        }\n        if (!Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetArray = target[localName];\n        for (const jsonItem of jsonValue) {\n            if (jsonItem === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n            }\n            switch (field.kind) {\n                case \"message\":\n                    targetArray.push(field.T.fromJson(jsonItem, options));\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetArray.push(enumValue);\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n                    }\n                    catch (e) {\n                        let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else if (field.kind == \"map\") {\n        if (jsonValue === null) {\n            return;\n        }\n        if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n            throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n        }\n        const targetMap = target[localName];\n        for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n            if (jsonMapValue === null) {\n                throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n            }\n            let key;\n            try {\n                key = readMapKey(field.K, jsonMapKey);\n            }\n            catch (e) {\n                let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                if (e instanceof Error && e.message.length > 0) {\n                    m += `: ${e.message}`;\n                }\n                throw new Error(m);\n            }\n            switch (field.V.kind) {\n                case \"message\":\n                    targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n                    break;\n                case \"enum\":\n                    const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n                    if (enumValue !== tokenIgnoredUnknownEnum) {\n                        targetMap[key] = enumValue;\n                    }\n                    break;\n                case \"scalar\":\n                    try {\n                        targetMap[key] = readScalar(field.V.T, jsonMapValue, _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true);\n                    }\n                    catch (e) {\n                        let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                        if (e instanceof Error && e.message.length > 0) {\n                            m += `: ${e.message}`;\n                        }\n                        throw new Error(m);\n                    }\n                    break;\n            }\n        }\n    }\n    else {\n        if (field.oneof) {\n            target = target[field.oneof.localName] = { case: localName };\n            localName = \"value\";\n        }\n        switch (field.kind) {\n            case \"message\":\n                const messageType = field.T;\n                if (jsonValue === null &&\n                    messageType.typeName != \"google.protobuf.Value\") {\n                    return;\n                }\n                let currentValue = target[localName];\n                if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_6__.isMessage)(currentValue)) {\n                    currentValue.fromJson(jsonValue, options);\n                }\n                else {\n                    target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n                    if (messageType.fieldWrapper && !field.oneof) {\n                        target[localName] =\n                            messageType.fieldWrapper.unwrapField(currentValue);\n                    }\n                }\n                break;\n            case \"enum\":\n                const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n                switch (enumValue) {\n                    case tokenNull:\n                        (0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.clearField)(field, target);\n                        break;\n                    case tokenIgnoredUnknownEnum:\n                        break;\n                    default:\n                        target[localName] = enumValue;\n                        break;\n                }\n                break;\n            case \"scalar\":\n                try {\n                    const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n                    switch (scalarValue) {\n                        case tokenNull:\n                            (0,_reflect_js__WEBPACK_IMPORTED_MODULE_2__.clearField)(field, target);\n                            break;\n                        default:\n                            target[localName] = scalarValue;\n                            break;\n                    }\n                }\n                catch (e) {\n                    let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n                    if (e instanceof Error && e.message.length > 0) {\n                        m += `: ${e.message}`;\n                    }\n                    throw new Error(m);\n                }\n                break;\n        }\n    }\n}\nfunction readMapKey(type, json) {\n    if (type === _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL) {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (json) {\n            case \"true\":\n                json = true;\n                break;\n            case \"false\":\n                json = false;\n                break;\n        }\n    }\n    return readScalar(type, json, _scalar_js__WEBPACK_IMPORTED_MODULE_3__.LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n    if (json === null) {\n        if (nullAsZeroValue) {\n            return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_4__.scalarZeroValue)(type, longType);\n        }\n        return tokenNull;\n    }\n    // every valid case in the switch below returns, and every fall\n    // through is regarded as a failure.\n    switch (type) {\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT:\n            if (json === \"NaN\")\n                return Number.NaN;\n            if (json === \"Infinity\")\n                return Number.POSITIVE_INFINITY;\n            if (json === \"-Infinity\")\n                return Number.NEGATIVE_INFINITY;\n            if (json === \"\") {\n                // empty string is not a number\n                break;\n            }\n            if (typeof json == \"string\" && json.trim().length !== json.length) {\n                // extra whitespace\n                break;\n            }\n            if (typeof json != \"string\" && typeof json != \"number\") {\n                break;\n            }\n            const float = Number(json);\n            if (Number.isNaN(float)) {\n                // not a number\n                break;\n            }\n            if (!Number.isFinite(float)) {\n                // infinity and -infinity are handled by string representation above, so this is an error\n                break;\n            }\n            if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT)\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertFloat32)(float);\n            return float;\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32:\n            let int32;\n            if (typeof json == \"number\")\n                int32 = json;\n            else if (typeof json == \"string\" && json.length > 0) {\n                if (json.trim().length === json.length)\n                    int32 = Number(json);\n            }\n            if (int32 === undefined)\n                break;\n            if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32 || type == _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32)\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertUInt32)(int32);\n            else\n                (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assertInt32)(int32);\n            return int32;\n        // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const long = _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__.protoInt64.parse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? long.toString() : long;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT64:\n            if (typeof json != \"number\" && typeof json != \"string\")\n                break;\n            const uLong = _proto_int64_js__WEBPACK_IMPORTED_MODULE_7__.protoInt64.uParse(json);\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            return longType ? uLong.toString() : uLong;\n        // bool:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL:\n            if (typeof json !== \"boolean\")\n                break;\n            return json;\n        // string:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.STRING:\n            if (typeof json !== \"string\") {\n                break;\n            }\n            // A string must always contain UTF-8 encoded or 7-bit ASCII.\n            // We validate with encodeURIComponent, which appears to be the fastest widely available option.\n            try {\n                encodeURIComponent(json);\n            }\n            catch (e) {\n                throw new Error(\"invalid UTF8\");\n            }\n            return json;\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BYTES:\n            if (json === \"\")\n                return new Uint8Array(0);\n            if (typeof json !== \"string\")\n                break;\n            return _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__.protoBase64.dec(json);\n    }\n    throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n    if (json === null) {\n        if (type.typeName == \"google.protobuf.NullValue\") {\n            return 0; // google.protobuf.NullValue.NULL_VALUE = 0\n        }\n        return nullAsZeroValue ? type.values[0].no : tokenNull;\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (typeof json) {\n        case \"number\":\n            if (Number.isInteger(json)) {\n                return json;\n            }\n            break;\n        case \"string\":\n            const value = type.findName(json);\n            if (value !== undefined) {\n                return value.no;\n            }\n            if (ignoreUnknownFields) {\n                return tokenIgnoredUnknownEnum;\n            }\n            break;\n    }\n    throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\n// Decide whether an unset field should be emitted with JSON write option `emitDefaultValues`\nfunction canEmitFieldDefaultValue(field) {\n    if (field.repeated || field.kind == \"map\") {\n        // maps are {}, repeated fields are []\n        return true;\n    }\n    if (field.oneof) {\n        // oneof fields are never emitted\n        return false;\n    }\n    if (field.kind == \"message\") {\n        // singular message field are allowed to emit JSON null, but we do not\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    if (field.opt || field.req) {\n        // the field uses explicit presence, so we cannot emit a zero value\n        return false;\n    }\n    return true;\n}\nfunction writeField(field, value, options) {\n    if (field.kind == \"map\") {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"object\" && value != null);\n        const jsonObj = {};\n        const entries = Object.entries(value);\n        switch (field.V.kind) {\n            case \"scalar\":\n                for (const [entryKey, entryValue] of entries) {\n                    jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue); // JSON standard allows only (double quoted) string as property key\n                }\n                break;\n            case \"message\":\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = entryValue.toJson(options);\n                }\n                break;\n            case \"enum\":\n                const enumType = field.V.T;\n                for (const [entryKey, entryValue] of entries) {\n                    // JSON standard allows only (double quoted) string as property key\n                    jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n                }\n                break;\n        }\n        return options.emitDefaultValues || entries.length > 0\n            ? jsonObj\n            : undefined;\n    }\n    if (field.repeated) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(Array.isArray(value));\n        const jsonArr = [];\n        switch (field.kind) {\n            case \"scalar\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeScalar(field.T, value[i]));\n                }\n                break;\n            case \"enum\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n                }\n                break;\n            case \"message\":\n                for (let i = 0; i < value.length; i++) {\n                    jsonArr.push(value[i].toJson(options));\n                }\n                break;\n        }\n        return options.emitDefaultValues || jsonArr.length > 0\n            ? jsonArr\n            : undefined;\n    }\n    switch (field.kind) {\n        case \"scalar\":\n            return writeScalar(field.T, value);\n        case \"enum\":\n            return writeEnum(field.T, value, options.enumAsInteger);\n        case \"message\":\n            return (0,_field_wrapper_js__WEBPACK_IMPORTED_MODULE_9__.wrapField)(field.T, value).toJson(options);\n    }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n    var _a;\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n    if (type.typeName == \"google.protobuf.NullValue\") {\n        return null;\n    }\n    if (enumAsInteger) {\n        return value;\n    }\n    const val = type.findNumber(value);\n    return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value; // if we don't know the enum value, just return the number\n}\nfunction writeScalar(type, value) {\n    switch (type) {\n        // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED32:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT32:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n            return value;\n        // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n        // Either numbers or strings are accepted. Exponent notation is also accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FLOAT:\n        // assertFloat32(value);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.DOUBLE: // eslint-disable-line no-fallthrough\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"number\");\n            if (Number.isNaN(value))\n                return \"NaN\";\n            if (value === Number.POSITIVE_INFINITY)\n                return \"Infinity\";\n            if (value === Number.NEGATIVE_INFINITY)\n                return \"-Infinity\";\n            return value;\n        // string:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.STRING:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"string\");\n            return value;\n        // bool:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BOOL:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"boolean\");\n            return value;\n        // JSON value will be a decimal string. Either numbers or strings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.SINT64:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(typeof value == \"bigint\" ||\n                typeof value == \"string\" ||\n                typeof value == \"number\");\n            return value.toString();\n        // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n        // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_3__.ScalarType.BYTES:\n            (0,_assert_js__WEBPACK_IMPORTED_MODULE_5__.assert)(value instanceof Uint8Array);\n            return _proto_base64_js__WEBPACK_IMPORTED_MODULE_8__.protoBase64.enc(value);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeMessageType: () => (/* binding */ makeMessageType)\n/* harmony export */ });\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Create a new message type using the given runtime.\n */\nfunction makeMessageType(runtime, typeName, fields, opt) {\n    var _a;\n    const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n    const type = {\n        [localName]: function (data) {\n            runtime.util.initFields(this);\n            runtime.util.initPartial(data, this);\n        },\n    }[localName];\n    Object.setPrototypeOf(type.prototype, new _message_js__WEBPACK_IMPORTED_MODULE_0__.Message());\n    Object.assign(type, {\n        runtime,\n        typeName,\n        fields: runtime.util.newFieldList(fields),\n        fromBinary(bytes, options) {\n            return new type().fromBinary(bytes, options);\n        },\n        fromJson(jsonValue, options) {\n            return new type().fromJson(jsonValue, options);\n        },\n        fromJsonString(jsonString, options) {\n            return new type().fromJsonString(jsonString, options);\n        },\n        equals(a, b) {\n            return runtime.util.equals(type, a, b);\n        },\n    });\n    return type;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvbWVzc2FnZS10eXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLDhDQUE4QyxnREFBTztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvbWVzc2FnZS10eXBlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSBcIi4uL21lc3NhZ2UuanNcIjtcbi8qKlxuICogQ3JlYXRlIGEgbmV3IG1lc3NhZ2UgdHlwZSB1c2luZyB0aGUgZ2l2ZW4gcnVudGltZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ha2VNZXNzYWdlVHlwZShydW50aW1lLCB0eXBlTmFtZSwgZmllbGRzLCBvcHQpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgbG9jYWxOYW1lID0gKF9hID0gb3B0ID09PSBudWxsIHx8IG9wdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0LmxvY2FsTmFtZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogdHlwZU5hbWUuc3Vic3RyaW5nKHR5cGVOYW1lLmxhc3RJbmRleE9mKFwiLlwiKSArIDEpO1xuICAgIGNvbnN0IHR5cGUgPSB7XG4gICAgICAgIFtsb2NhbE5hbWVdOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgcnVudGltZS51dGlsLmluaXRGaWVsZHModGhpcyk7XG4gICAgICAgICAgICBydW50aW1lLnV0aWwuaW5pdFBhcnRpYWwoZGF0YSwgdGhpcyk7XG4gICAgICAgIH0sXG4gICAgfVtsb2NhbE5hbWVdO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0eXBlLnByb3RvdHlwZSwgbmV3IE1lc3NhZ2UoKSk7XG4gICAgT2JqZWN0LmFzc2lnbih0eXBlLCB7XG4gICAgICAgIHJ1bnRpbWUsXG4gICAgICAgIHR5cGVOYW1lLFxuICAgICAgICBmaWVsZHM6IHJ1bnRpbWUudXRpbC5uZXdGaWVsZExpc3QoZmllbGRzKSxcbiAgICAgICAgZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUJpbmFyeShieXRlcywgb3B0aW9ucyk7XG4gICAgICAgIH0sXG4gICAgICAgIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUpzb24oanNvblZhbHVlLCBvcHRpb25zKTtcbiAgICAgICAgfSxcbiAgICAgICAgZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyB0eXBlKCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gICAgICAgIH0sXG4gICAgICAgIGVxdWFscyhhLCBiKSB7XG4gICAgICAgICAgICByZXR1cm4gcnVudGltZS51dGlsLmVxdWFscyh0eXBlLCBhLCBiKTtcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gdHlwZTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/names.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/names.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fieldJsonName: () => (/* binding */ fieldJsonName),\n/* harmony export */   findEnumSharedPrefix: () => (/* binding */ findEnumSharedPrefix),\n/* harmony export */   localFieldName: () => (/* binding */ localFieldName),\n/* harmony export */   localName: () => (/* binding */ localName),\n/* harmony export */   localOneofName: () => (/* binding */ localOneofName),\n/* harmony export */   safeIdentifier: () => (/* binding */ safeIdentifier),\n/* harmony export */   safeObjectProperty: () => (/* binding */ safeObjectProperty)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Returns the name of a protobuf element in generated code.\n *\n * Field names - including oneofs - are converted to lowerCamelCase. For\n * messages, enumerations and services, the package name is stripped from\n * the type name. For nested messages and enumerations, the names are joined\n * with an underscore. For methods, the first character is made lowercase.\n */\nfunction localName(desc) {\n    switch (desc.kind) {\n        case \"field\":\n            return localFieldName(desc.name, desc.oneof !== undefined);\n        case \"oneof\":\n            return localOneofName(desc.name);\n        case \"enum\":\n        case \"message\":\n        case \"service\":\n        case \"extension\": {\n            const pkg = desc.file.proto.package;\n            const offset = pkg === undefined ? 0 : pkg.length + 1;\n            const name = desc.typeName.substring(offset).replace(/\\./g, \"_\");\n            // For services, we only care about safe identifiers, not safe object properties,\n            // but we have shipped v1 with a bug that respected object properties, and we\n            // do not want to introduce a breaking change, so we continue to escape for\n            // safe object properties.\n            // See https://github.com/bufbuild/protobuf-es/pull/391\n            return safeObjectProperty(safeIdentifier(name));\n        }\n        case \"enum_value\": {\n            let name = desc.name;\n            const sharedPrefix = desc.parent.sharedPrefix;\n            if (sharedPrefix !== undefined) {\n                name = name.substring(sharedPrefix.length);\n            }\n            return safeObjectProperty(name);\n        }\n        case \"rpc\": {\n            let name = desc.name;\n            if (name.length == 0) {\n                return name;\n            }\n            name = name[0].toLowerCase() + name.substring(1);\n            return safeObjectProperty(name);\n        }\n    }\n}\n/**\n * Returns the name of a field in generated code.\n */\nfunction localFieldName(protoName, inOneof) {\n    const name = protoCamelCase(protoName);\n    if (inOneof) {\n        // oneof member names are not properties, but values of the `case` property.\n        return name;\n    }\n    return safeObjectProperty(safeMessageProperty(name));\n}\n/**\n * Returns the name of a oneof group in generated code.\n */\nfunction localOneofName(protoName) {\n    return localFieldName(protoName, false);\n}\n/**\n * Returns the JSON name for a protobuf field, exactly like protoc does.\n */\nconst fieldJsonName = protoCamelCase;\n/**\n * Finds a prefix shared by enum values, for example `MY_ENUM_` for\n * `enum MyEnum {MY_ENUM_A=0; MY_ENUM_B=1;}`.\n */\nfunction findEnumSharedPrefix(enumName, valueNames) {\n    const prefix = camelToSnakeCase(enumName) + \"_\";\n    for (const name of valueNames) {\n        if (!name.toLowerCase().startsWith(prefix)) {\n            return undefined;\n        }\n        const shortName = name.substring(prefix.length);\n        if (shortName.length == 0) {\n            return undefined;\n        }\n        if (/^\\d/.test(shortName)) {\n            // identifiers must not start with numbers\n            return undefined;\n        }\n    }\n    return prefix;\n}\n/**\n * Converts lowerCamelCase or UpperCamelCase into lower_snake_case.\n * This is used to find shared prefixes in an enum.\n */\nfunction camelToSnakeCase(camel) {\n    return (camel.substring(0, 1) + camel.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c)).toLowerCase();\n}\n/**\n * Converts snake_case to protoCamelCase according to the convention\n * used by protoc to convert a field name to a JSON name.\n */\nfunction protoCamelCase(snakeCase) {\n    let capNext = false;\n    const b = [];\n    for (let i = 0; i < snakeCase.length; i++) {\n        let c = snakeCase.charAt(i);\n        switch (c) {\n            case \"_\":\n                capNext = true;\n                break;\n            case \"0\":\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                b.push(c);\n                capNext = false;\n                break;\n            default:\n                if (capNext) {\n                    capNext = false;\n                    c = c.toUpperCase();\n                }\n                b.push(c);\n                break;\n        }\n    }\n    return b.join(\"\");\n}\n/**\n * Names that cannot be used for identifiers, such as class names,\n * but _can_ be used for object properties.\n */\nconst reservedIdentifiers = new Set([\n    // ECMAScript 2015 keywords\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"const\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"delete\",\n    \"do\",\n    \"else\",\n    \"export\",\n    \"extends\",\n    \"false\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"instanceof\",\n    \"new\",\n    \"null\",\n    \"return\",\n    \"super\",\n    \"switch\",\n    \"this\",\n    \"throw\",\n    \"true\",\n    \"try\",\n    \"typeof\",\n    \"var\",\n    \"void\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    // ECMAScript 2015 future reserved keywords\n    \"enum\",\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    // Class name cannot be 'Object' when targeting ES5 with module CommonJS\n    \"Object\",\n    // TypeScript keywords that cannot be used for types (as opposed to variables)\n    \"bigint\",\n    \"number\",\n    \"boolean\",\n    \"string\",\n    \"object\",\n    // Identifiers reserved for the runtime, so we can generate legible code\n    \"globalThis\",\n    \"Uint8Array\",\n    \"Partial\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst reservedObjectProperties = new Set([\n    // names reserved by JavaScript\n    \"constructor\",\n    \"toString\",\n    \"toJSON\",\n    \"valueOf\",\n]);\n/**\n * Names that cannot be used for object properties because they are reserved\n * by the runtime.\n */\nconst reservedMessageProperties = new Set([\n    // names reserved by the runtime\n    \"getType\",\n    \"clone\",\n    \"equals\",\n    \"fromBinary\",\n    \"fromJson\",\n    \"fromJsonString\",\n    \"toBinary\",\n    \"toJson\",\n    \"toJsonString\",\n    // names reserved by the runtime for the future\n    \"toObject\",\n]);\nconst fallback = (name) => `${name}$`;\n/**\n * Will wrap names that are Object prototype properties or names reserved\n * for `Message`s.\n */\nconst safeMessageProperty = (name) => {\n    if (reservedMessageProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that cannot be used for object properties because they are reserved\n * by built-in JavaScript properties.\n */\nconst safeObjectProperty = (name) => {\n    if (reservedObjectProperties.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n/**\n * Names that can be used for identifiers or class properties\n */\nconst safeIdentifier = (name) => {\n    if (reservedIdentifiers.has(name)) {\n        return fallback(name);\n    }\n    return name;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/names.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeProtoRuntime: () => (/* binding */ makeProtoRuntime)\n/* harmony export */ });\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./enum.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\");\n/* harmony import */ var _message_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message-type.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./extensions.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\");\n/* harmony import */ var _json_format_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json-format.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\");\n/* harmony import */ var _binary_format_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary-format.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js\");\n/* harmony import */ var _util_common_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util-common.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n\nfunction makeProtoRuntime(syntax, newFieldList, initFields) {\n    return {\n        syntax,\n        json: (0,_json_format_js__WEBPACK_IMPORTED_MODULE_0__.makeJsonFormat)(),\n        bin: (0,_binary_format_js__WEBPACK_IMPORTED_MODULE_1__.makeBinaryFormat)(),\n        util: Object.assign(Object.assign({}, (0,_util_common_js__WEBPACK_IMPORTED_MODULE_2__.makeUtilCommon)()), { newFieldList,\n            initFields }),\n        makeMessageType(typeName, fields, opt) {\n            return (0,_message_type_js__WEBPACK_IMPORTED_MODULE_3__.makeMessageType)(this, typeName, fields, opt);\n        },\n        makeEnum: _enum_js__WEBPACK_IMPORTED_MODULE_4__.makeEnum,\n        makeEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_4__.makeEnumType,\n        getEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_4__.getEnumType,\n        makeExtension(typeName, extendee, field) {\n            return (0,_extensions_js__WEBPACK_IMPORTED_MODULE_5__.makeExtension)(this, typeName, extendee, field);\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvcHJvdG8tcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0U7QUFDWjtBQUNKO0FBQ0U7QUFDSTtBQUNKO0FBQzNDO0FBQ1A7QUFDQTtBQUNBLGNBQWMsK0RBQWM7QUFDNUIsYUFBYSxtRUFBZ0I7QUFDN0IsNENBQTRDLEVBQUUsK0RBQWMsT0FBTztBQUNuRSx3QkFBd0I7QUFDeEI7QUFDQSxtQkFBbUIsaUVBQWU7QUFDbEMsU0FBUztBQUNULGdCQUFnQjtBQUNoQixvQkFBb0I7QUFDcEIsbUJBQW1CO0FBQ25CO0FBQ0EsbUJBQW1CLDZEQUFhO0FBQ2hDLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcml2YXRlL3Byb3RvLXJ1bnRpbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbmltcG9ydCB7IGdldEVudW1UeXBlLCBtYWtlRW51bSwgbWFrZUVudW1UeXBlIH0gZnJvbSBcIi4vZW51bS5qc1wiO1xuaW1wb3J0IHsgbWFrZU1lc3NhZ2VUeXBlIH0gZnJvbSBcIi4vbWVzc2FnZS10eXBlLmpzXCI7XG5pbXBvcnQgeyBtYWtlRXh0ZW5zaW9uIH0gZnJvbSBcIi4vZXh0ZW5zaW9ucy5qc1wiO1xuaW1wb3J0IHsgbWFrZUpzb25Gb3JtYXQgfSBmcm9tIFwiLi9qc29uLWZvcm1hdC5qc1wiO1xuaW1wb3J0IHsgbWFrZUJpbmFyeUZvcm1hdCB9IGZyb20gXCIuL2JpbmFyeS1mb3JtYXQuanNcIjtcbmltcG9ydCB7IG1ha2VVdGlsQ29tbW9uIH0gZnJvbSBcIi4vdXRpbC1jb21tb24uanNcIjtcbmV4cG9ydCBmdW5jdGlvbiBtYWtlUHJvdG9SdW50aW1lKHN5bnRheCwgbmV3RmllbGRMaXN0LCBpbml0RmllbGRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3ludGF4LFxuICAgICAgICBqc29uOiBtYWtlSnNvbkZvcm1hdCgpLFxuICAgICAgICBiaW46IG1ha2VCaW5hcnlGb3JtYXQoKSxcbiAgICAgICAgdXRpbDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtYWtlVXRpbENvbW1vbigpKSwgeyBuZXdGaWVsZExpc3QsXG4gICAgICAgICAgICBpbml0RmllbGRzIH0pLFxuICAgICAgICBtYWtlTWVzc2FnZVR5cGUodHlwZU5hbWUsIGZpZWxkcywgb3B0KSB7XG4gICAgICAgICAgICByZXR1cm4gbWFrZU1lc3NhZ2VUeXBlKHRoaXMsIHR5cGVOYW1lLCBmaWVsZHMsIG9wdCk7XG4gICAgICAgIH0sXG4gICAgICAgIG1ha2VFbnVtLFxuICAgICAgICBtYWtlRW51bVR5cGUsXG4gICAgICAgIGdldEVudW1UeXBlLFxuICAgICAgICBtYWtlRXh0ZW5zaW9uKHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpIHtcbiAgICAgICAgICAgIHJldHVybiBtYWtlRXh0ZW5zaW9uKHRoaXMsIHR5cGVOYW1lLCBleHRlbmRlZSwgZmllbGQpO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearField: () => (/* binding */ clearField),\n/* harmony export */   isFieldSet: () => (/* binding */ isFieldSet)\n/* harmony export */ });\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * Returns true if the field is set.\n */\nfunction isFieldSet(field, target) {\n    const localName = field.localName;\n    if (field.repeated) {\n        return target[localName].length > 0;\n    }\n    if (field.oneof) {\n        return target[field.oneof.localName].case === localName; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    switch (field.kind) {\n        case \"enum\":\n        case \"scalar\":\n            if (field.opt || field.req) {\n                // explicit presence\n                return target[localName] !== undefined;\n            }\n            // implicit presence\n            if (field.kind == \"enum\") {\n                return target[localName] !== field.T.values[0].no;\n            }\n            return !(0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.isScalarZeroValue)(field.T, target[localName]);\n        case \"message\":\n            return target[localName] !== undefined;\n        case \"map\":\n            return Object.keys(target[localName]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n    }\n}\n/**\n * Resets the field, so that isFieldSet() will return false.\n */\nfunction clearField(field, target) {\n    const localName = field.localName;\n    const implicitPresence = !field.opt && !field.req;\n    if (field.repeated) {\n        target[localName] = [];\n    }\n    else if (field.oneof) {\n        target[field.oneof.localName] = { case: undefined };\n    }\n    else {\n        switch (field.kind) {\n            case \"map\":\n                target[localName] = {};\n                break;\n            case \"enum\":\n                target[localName] = implicitPresence ? field.T.values[0].no : undefined;\n                break;\n            case \"scalar\":\n                target[localName] = implicitPresence\n                    ? (0,_scalars_js__WEBPACK_IMPORTED_MODULE_0__.scalarZeroValue)(field.T, field.L)\n                    : undefined;\n                break;\n            case \"message\":\n                target[localName] = undefined;\n                break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvcmVmbGVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhEQUFpQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNERBQWU7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9yZWZsZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBpc1NjYWxhclplcm9WYWx1ZSwgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vc2NhbGFycy5qc1wiO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIGZpZWxkIGlzIHNldC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRmllbGRTZXQoZmllbGQsIHRhcmdldCkge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICBpZiAoZmllbGQucmVwZWF0ZWQpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICByZXR1cm4gdGFyZ2V0W2ZpZWxkLm9uZW9mLmxvY2FsTmFtZV0uY2FzZSA9PT0gbG9jYWxOYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgIH1cbiAgICBzd2l0Y2ggKGZpZWxkLmtpbmQpIHtcbiAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgY2FzZSBcInNjYWxhclwiOlxuICAgICAgICAgICAgaWYgKGZpZWxkLm9wdCB8fCBmaWVsZC5yZXEpIHtcbiAgICAgICAgICAgICAgICAvLyBleHBsaWNpdCBwcmVzZW5jZVxuICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXRbbG9jYWxOYW1lXSAhPT0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gaW1wbGljaXQgcHJlc2VuY2VcbiAgICAgICAgICAgIGlmIChmaWVsZC5raW5kID09IFwiZW51bVwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdICE9PSBmaWVsZC5ULnZhbHVlc1swXS5ubztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhaXNTY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgdGFyZ2V0W2xvY2FsTmFtZV0pO1xuICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldFtsb2NhbE5hbWVdICE9PSB1bmRlZmluZWQ7XG4gICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0YXJnZXRbbG9jYWxOYW1lXSkubGVuZ3RoID4gMDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWFyZ3VtZW50XG4gICAgfVxufVxuLyoqXG4gKiBSZXNldHMgdGhlIGZpZWxkLCBzbyB0aGF0IGlzRmllbGRTZXQoKSB3aWxsIHJldHVybiBmYWxzZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyRmllbGQoZmllbGQsIHRhcmdldCkge1xuICAgIGNvbnN0IGxvY2FsTmFtZSA9IGZpZWxkLmxvY2FsTmFtZTtcbiAgICBjb25zdCBpbXBsaWNpdFByZXNlbmNlID0gIWZpZWxkLm9wdCAmJiAhZmllbGQucmVxO1xuICAgIGlmIChmaWVsZC5yZXBlYXRlZCkge1xuICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IFtdO1xuICAgIH1cbiAgICBlbHNlIGlmIChmaWVsZC5vbmVvZikge1xuICAgICAgICB0YXJnZXRbZmllbGQub25lb2YubG9jYWxOYW1lXSA9IHsgY2FzZTogdW5kZWZpbmVkIH07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBzd2l0Y2ggKGZpZWxkLmtpbmQpIHtcbiAgICAgICAgICAgIGNhc2UgXCJtYXBcIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcImVudW1cIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IGltcGxpY2l0UHJlc2VuY2UgPyBmaWVsZC5ULnZhbHVlc1swXS5ubyA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgICAgICB0YXJnZXRbbG9jYWxOYW1lXSA9IGltcGxpY2l0UHJlc2VuY2VcbiAgICAgICAgICAgICAgICAgICAgPyBzY2FsYXJaZXJvVmFsdWUoZmllbGQuVCwgZmllbGQuTClcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgICAgIHRhcmdldFtsb2NhbE5hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isScalarZeroValue: () => (/* binding */ isScalarZeroValue),\n/* harmony export */   scalarEquals: () => (/* binding */ scalarEquals),\n/* harmony export */   scalarZeroValue: () => (/* binding */ scalarZeroValue)\n/* harmony export */ });\n/* harmony import */ var _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../proto-int64.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longType) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return false;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.UINT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.INT64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SFIXED64:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.SINT64:\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison -- acceptable since it's covered by tests\n            return (longType == 0 ? _proto_int64_js__WEBPACK_IMPORTED_MODULE_1__.protoInt64.zero : \"0\");\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.DOUBLE:\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.FLOAT:\n            return 0.0;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return new Uint8Array(0);\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return \"\";\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n    switch (type) {\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BOOL:\n            return value === false;\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.STRING:\n            return value === \"\";\n        case _scalar_js__WEBPACK_IMPORTED_MODULE_0__.ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3ByaXZhdGUvc2NhbGFycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytDO0FBQ0s7QUFDcEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtEQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixjQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0EsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QixhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0Esb0NBQW9DLHVEQUFVO0FBQzlDLGFBQWEsa0RBQVU7QUFDdkIsYUFBYSxrREFBVTtBQUN2QjtBQUNBLGFBQWEsa0RBQVU7QUFDdkI7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSxrREFBVTtBQUN2QjtBQUNBLGFBQWEsa0RBQVU7QUFDdkI7QUFDQSxhQUFhLGtEQUFVO0FBQ3ZCO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJpdmF0ZS9zY2FsYXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBwcm90b0ludDY0IH0gZnJvbSBcIi4uL3Byb3RvLWludDY0LmpzXCI7XG5pbXBvcnQgeyBMb25nVHlwZSwgU2NhbGFyVHlwZSB9IGZyb20gXCIuLi9zY2FsYXIuanNcIjtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIGJvdGggc2NhbGFyIHZhbHVlcyBhcmUgZXF1YWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzY2FsYXJFcXVhbHModHlwZSwgYSwgYikge1xuICAgIGlmIChhID09PSBiKSB7XG4gICAgICAgIC8vIFRoaXMgY29ycmVjdGx5IG1hdGNoZXMgZXF1YWwgdmFsdWVzIGV4Y2VwdCBCWVRFUyBhbmQgKHBvc3NpYmx5KSA2NC1iaXQgaW50ZWdlcnMuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBTcGVjaWFsIGNhc2UgQllURVMgLSB3ZSBuZWVkIHRvIGNvbXBhcmUgZWFjaCBieXRlIGluZGl2aWR1YWxseVxuICAgIGlmICh0eXBlID09IFNjYWxhclR5cGUuQllURVMpIHtcbiAgICAgICAgaWYgKCEoYSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHx8ICEoYiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIC8vIFNwZWNpYWwgY2FzZSA2NC1iaXQgaW50ZWdlcnMgLSB3ZSBzdXBwb3J0IG51bWJlciwgc3RyaW5nIGFuZCBiaWdpbnQgcmVwcmVzZW50YXRpb24uXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9zd2l0Y2gtZXhoYXVzdGl2ZW5lc3MtY2hlY2tcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlVJTlQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5JTlQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLlNGSVhFRDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0lOVDY0OlxuICAgICAgICAgICAgLy8gTG9vc2UgY29tcGFyaXNvbiB3aWxsIG1hdGNoIGJldHdlZW4gMG4sIDAgYW5kIFwiMFwiLlxuICAgICAgICAgICAgcmV0dXJuIGEgPT0gYjtcbiAgICB9XG4gICAgLy8gQW55dGhpbmcgdGhhdCBoYXNuJ3QgYmVlbiBjYXVnaHQgYnkgc3RyaWN0IGNvbXBhcmlzb24gb3Igc3BlY2lhbCBjYXNlZFxuICAgIC8vIEJZVEVTIGFuZCA2NC1iaXQgaW50ZWdlcnMgaXMgbm90IGVxdWFsLlxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgemVybyB2YWx1ZSBmb3IgdGhlIGdpdmVuIHNjYWxhciB0eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2NhbGFyWmVyb1ZhbHVlKHR5cGUsIGxvbmdUeXBlKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5CT09MOlxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuVUlOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuRklYRUQ2NDpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLklOVDY0OlxuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU0ZJWEVENjQ6XG4gICAgICAgIGNhc2UgU2NhbGFyVHlwZS5TSU5UNjQ6XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1lbnVtLWNvbXBhcmlzb24gLS0gYWNjZXB0YWJsZSBzaW5jZSBpdCdzIGNvdmVyZWQgYnkgdGVzdHNcbiAgICAgICAgICAgIHJldHVybiAobG9uZ1R5cGUgPT0gMCA/IHByb3RvSW50NjQuemVybyA6IFwiMFwiKTtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkRPVUJMRTpcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkZMT0FUOlxuICAgICAgICAgICAgcmV0dXJuIDAuMDtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkJZVEVTOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KDApO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAvLyBIYW5kbGVzIElOVDMyLCBVSU5UMzIsIFNJTlQzMiwgRklYRUQzMiwgU0ZJWEVEMzIuXG4gICAgICAgICAgICAvLyBXZSBkbyBub3QgdXNlIGluZGl2aWR1YWwgY2FzZXMgdG8gc2F2ZSBhIGZldyBieXRlcyBjb2RlIHNpemUuXG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICB9XG59XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBmb3IgYSB6ZXJvLXZhbHVlLiBGb3IgZXhhbXBsZSwgYW4gaW50ZWdlciBoYXMgdGhlIHplcm8tdmFsdWUgYDBgLFxuICogYSBib29sZWFuIGlzIGBmYWxzZWAsIGEgc3RyaW5nIGlzIGBcIlwiYCwgYW5kIGJ5dGVzIGlzIGFuIGVtcHR5IFVpbnQ4QXJyYXkuXG4gKlxuICogSW4gcHJvdG8zLCB6ZXJvLXZhbHVlcyBhcmUgbm90IHdyaXR0ZW4gdG8gdGhlIHdpcmUsIHVubGVzcyB0aGUgZmllbGQgaXNcbiAqIG9wdGlvbmFsIG9yIHJlcGVhdGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTY2FsYXJaZXJvVmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBTY2FsYXJUeXBlLkJPT0w6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPT09IGZhbHNlO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBcIlwiO1xuICAgICAgICBjYXNlIFNjYWxhclR5cGUuQllURVM6XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5ICYmICF2YWx1ZS5ieXRlTGVuZ3RoO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09IDA7IC8vIExvb3NlIGNvbXBhcmlzb24gbWF0Y2hlcyAwbiwgMCBhbmQgXCIwXCJcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeUtilCommon: () => (/* binding */ makeUtilCommon)\n/* harmony export */ });\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enum.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\");\n/* harmony import */ var _scalars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../scalar.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\");\n/* harmony import */ var _is_message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../is-message.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/is-message.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any,@typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-argument,no-case-declarations */\nfunction makeUtilCommon() {\n    return {\n        setEnumType: _enum_js__WEBPACK_IMPORTED_MODULE_0__.setEnumType,\n        initPartial(source, target) {\n            if (source === undefined) {\n                return;\n            }\n            const type = target.getType();\n            for (const member of type.fields.byMember()) {\n                const localName = member.localName, t = target, s = source;\n                if (s[localName] == null) {\n                    // TODO if source is a Message instance, we should use isFieldSet() here to support future field presence\n                    continue;\n                }\n                switch (member.kind) {\n                    case \"oneof\":\n                        const sk = s[localName].case;\n                        if (sk === undefined) {\n                            continue;\n                        }\n                        const sourceField = member.findField(sk);\n                        let val = s[localName].value;\n                        if (sourceField &&\n                            sourceField.kind == \"message\" &&\n                            !(0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, sourceField.T)) {\n                            val = new sourceField.T(val);\n                        }\n                        else if (sourceField &&\n                            sourceField.kind === \"scalar\" &&\n                            sourceField.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                            val = toU8Arr(val);\n                        }\n                        t[localName] = { case: sk, value: val };\n                        break;\n                    case \"scalar\":\n                    case \"enum\":\n                        let copy = s[localName];\n                        if (member.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                            copy = member.repeated\n                                ? copy.map(toU8Arr)\n                                : toU8Arr(copy);\n                        }\n                        t[localName] = copy;\n                        break;\n                    case \"map\":\n                        switch (member.V.kind) {\n                            case \"scalar\":\n                            case \"enum\":\n                                if (member.V.T === _scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.BYTES) {\n                                    for (const [k, v] of Object.entries(s[localName])) {\n                                        t[localName][k] = toU8Arr(v);\n                                    }\n                                }\n                                else {\n                                    Object.assign(t[localName], s[localName]);\n                                }\n                                break;\n                            case \"message\":\n                                const messageType = member.V.T;\n                                for (const k of Object.keys(s[localName])) {\n                                    let val = s[localName][k];\n                                    if (!messageType.fieldWrapper) {\n                                        // We only take partial input for messages that are not a wrapper type.\n                                        // For those messages, we recursively normalize the partial input.\n                                        val = new messageType(val);\n                                    }\n                                    t[localName][k] = val;\n                                }\n                                break;\n                        }\n                        break;\n                    case \"message\":\n                        const mt = member.T;\n                        if (member.repeated) {\n                            t[localName] = s[localName].map((val) => (0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, mt) ? val : new mt(val));\n                        }\n                        else {\n                            const val = s[localName];\n                            if (mt.fieldWrapper) {\n                                if (\n                                // We can't use BytesValue.typeName as that will create a circular import\n                                mt.typeName === \"google.protobuf.BytesValue\") {\n                                    t[localName] = toU8Arr(val);\n                                }\n                                else {\n                                    t[localName] = val;\n                                }\n                            }\n                            else {\n                                t[localName] = (0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(val, mt) ? val : new mt(val);\n                            }\n                        }\n                        break;\n                }\n            }\n        },\n        // TODO use isFieldSet() here to support future field presence\n        equals(type, a, b) {\n            if (a === b) {\n                return true;\n            }\n            if (!a || !b) {\n                return false;\n            }\n            return type.fields.byMember().every((m) => {\n                const va = a[m.localName];\n                const vb = b[m.localName];\n                if (m.repeated) {\n                    if (va.length !== vb.length) {\n                        return false;\n                    }\n                    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- repeated fields are never \"map\"\n                    switch (m.kind) {\n                        case \"message\":\n                            return va.every((a, i) => m.T.equals(a, vb[i]));\n                        case \"scalar\":\n                            return va.every((a, i) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(m.T, a, vb[i]));\n                        case \"enum\":\n                            return va.every((a, i) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, a, vb[i]));\n                    }\n                    throw new Error(`repeated cannot contain ${m.kind}`);\n                }\n                switch (m.kind) {\n                    case \"message\":\n                        return m.T.equals(va, vb);\n                    case \"enum\":\n                        return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va, vb);\n                    case \"scalar\":\n                        return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(m.T, va, vb);\n                    case \"oneof\":\n                        if (va.case !== vb.case) {\n                            return false;\n                        }\n                        const s = m.findField(va.case);\n                        if (s === undefined) {\n                            return true;\n                        }\n                        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- oneof fields are never \"map\"\n                        switch (s.kind) {\n                            case \"message\":\n                                return s.T.equals(va.value, vb.value);\n                            case \"enum\":\n                                return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va.value, vb.value);\n                            case \"scalar\":\n                                return (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(s.T, va.value, vb.value);\n                        }\n                        throw new Error(`oneof cannot contain ${s.kind}`);\n                    case \"map\":\n                        const keys = Object.keys(va).concat(Object.keys(vb));\n                        switch (m.V.kind) {\n                            case \"message\":\n                                const messageType = m.V.T;\n                                return keys.every((k) => messageType.equals(va[k], vb[k]));\n                            case \"enum\":\n                                return keys.every((k) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(_scalar_js__WEBPACK_IMPORTED_MODULE_2__.ScalarType.INT32, va[k], vb[k]));\n                            case \"scalar\":\n                                const scalarType = m.V.T;\n                                return keys.every((k) => (0,_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarEquals)(scalarType, va[k], vb[k]));\n                        }\n                        break;\n                }\n            });\n        },\n        // TODO use isFieldSet() here to support future field presence\n        clone(message) {\n            const type = message.getType(), target = new type(), any = target;\n            for (const member of type.fields.byMember()) {\n                const source = message[member.localName];\n                let copy;\n                if (member.repeated) {\n                    copy = source.map(cloneSingularField);\n                }\n                else if (member.kind == \"map\") {\n                    copy = any[member.localName];\n                    for (const [key, v] of Object.entries(source)) {\n                        copy[key] = cloneSingularField(v);\n                    }\n                }\n                else if (member.kind == \"oneof\") {\n                    const f = member.findField(source.case);\n                    copy = f\n                        ? { case: source.case, value: cloneSingularField(source.value) }\n                        : { case: undefined };\n                }\n                else {\n                    copy = cloneSingularField(source);\n                }\n                any[member.localName] = copy;\n            }\n            for (const uf of type.runtime.bin.listUnknownFields(message)) {\n                type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n            }\n            return target;\n        },\n    };\n}\n// clone a single field value - i.e. the element type of repeated fields, the value type of maps\nfunction cloneSingularField(value) {\n    if (value === undefined) {\n        return value;\n    }\n    if ((0,_is_message_js__WEBPACK_IMPORTED_MODULE_1__.isMessage)(value)) {\n        return value.clone();\n    }\n    if (value instanceof Uint8Array) {\n        const c = new Uint8Array(value.byteLength);\n        c.set(value);\n        return c;\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(input) {\n    return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoBase64: () => (/* binding */ protoBase64)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n// lookup table from base64 character to byte\nlet encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n    decTable[encTable[i].charCodeAt(0)] = i;\n// support base64url variants\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nconst protoBase64 = {\n    /**\n     * Decodes a base64 string to a byte array.\n     *\n     * - ignores white-space, including line breaks and tabs\n     * - allows inner padding (can decode concatenated base64 strings)\n     * - does not require padding\n     * - understands base64url encoding:\n     *   \"-\" instead of \"+\",\n     *   \"_\" instead of \"/\",\n     *   no padding\n     */\n    dec(base64Str) {\n        // estimate byte size, not accounting for inner padding and whitespace\n        let es = (base64Str.length * 3) / 4;\n        if (base64Str[base64Str.length - 2] == \"=\")\n            es -= 2;\n        else if (base64Str[base64Str.length - 1] == \"=\")\n            es -= 1;\n        let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n        groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // previous byte\n        for (let i = 0; i < base64Str.length; i++) {\n            b = decTable[base64Str.charCodeAt(i)];\n            if (b === undefined) {\n                switch (base64Str[i]) {\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"=\":\n                        groupPos = 0; // reset state when padding found\n                    // @ts-ignore TS7029: Fallthrough case in switch\n                    case \"\\n\":\n                    case \"\\r\":\n                    case \"\\t\":\n                    case \" \":\n                        continue; // skip white-space, and padding\n                    default:\n                        throw Error(\"invalid base64 string.\");\n                }\n            }\n            switch (groupPos) {\n                case 0:\n                    p = b;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                    p = b;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                    p = b;\n                    groupPos = 3;\n                    break;\n                case 3:\n                    bytes[bytePos++] = ((p & 3) << 6) | b;\n                    groupPos = 0;\n                    break;\n            }\n        }\n        if (groupPos == 1)\n            throw Error(\"invalid base64 string.\");\n        return bytes.subarray(0, bytePos);\n    },\n    /**\n     * Encode a byte array to a base64 string.\n     */\n    enc(bytes) {\n        let base64 = \"\", groupPos = 0, // position in base64 group\n        b, // current byte\n        p = 0; // carry over from previous byte\n        for (let i = 0; i < bytes.length; i++) {\n            b = bytes[i];\n            switch (groupPos) {\n                case 0:\n                    base64 += encTable[b >> 2];\n                    p = (b & 3) << 4;\n                    groupPos = 1;\n                    break;\n                case 1:\n                    base64 += encTable[p | (b >> 4)];\n                    p = (b & 15) << 2;\n                    groupPos = 2;\n                    break;\n                case 2:\n                    base64 += encTable[p | (b >> 6)];\n                    base64 += encTable[b & 63];\n                    groupPos = 0;\n                    break;\n            }\n        }\n        // add output padding\n        if (groupPos) {\n            base64 += encTable[p];\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n        return base64;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWJhc2U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFCQUFxQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLHdCQUF3QixzQkFBc0I7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZix3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJvdG8tYmFzZTY0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvYmFuLXRzLWNvbW1lbnQsIEB0eXBlc2NyaXB0LWVzbGludC9uby11bm5lY2Vzc2FyeS1jb25kaXRpb24sIHByZWZlci1jb25zdCAqL1xuLy8gbG9va3VwIHRhYmxlIGZyb20gYmFzZTY0IGNoYXJhY3RlciB0byBieXRlXG5sZXQgZW5jVGFibGUgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky9cIi5zcGxpdChcIlwiKTtcbi8vIGxvb2t1cCB0YWJsZSBmcm9tIGJhc2U2NCBjaGFyYWN0ZXIgKmNvZGUqIHRvIGJ5dGUgYmVjYXVzZSBsb29rdXAgYnkgbnVtYmVyIGlzIGZhc3RcbmxldCBkZWNUYWJsZSA9IFtdO1xuZm9yIChsZXQgaSA9IDA7IGkgPCBlbmNUYWJsZS5sZW5ndGg7IGkrKylcbiAgICBkZWNUYWJsZVtlbmNUYWJsZVtpXS5jaGFyQ29kZUF0KDApXSA9IGk7XG4vLyBzdXBwb3J0IGJhc2U2NHVybCB2YXJpYW50c1xuZGVjVGFibGVbXCItXCIuY2hhckNvZGVBdCgwKV0gPSBlbmNUYWJsZS5pbmRleE9mKFwiK1wiKTtcbmRlY1RhYmxlW1wiX1wiLmNoYXJDb2RlQXQoMCldID0gZW5jVGFibGUuaW5kZXhPZihcIi9cIik7XG5leHBvcnQgY29uc3QgcHJvdG9CYXNlNjQgPSB7XG4gICAgLyoqXG4gICAgICogRGVjb2RlcyBhIGJhc2U2NCBzdHJpbmcgdG8gYSBieXRlIGFycmF5LlxuICAgICAqXG4gICAgICogLSBpZ25vcmVzIHdoaXRlLXNwYWNlLCBpbmNsdWRpbmcgbGluZSBicmVha3MgYW5kIHRhYnNcbiAgICAgKiAtIGFsbG93cyBpbm5lciBwYWRkaW5nIChjYW4gZGVjb2RlIGNvbmNhdGVuYXRlZCBiYXNlNjQgc3RyaW5ncylcbiAgICAgKiAtIGRvZXMgbm90IHJlcXVpcmUgcGFkZGluZ1xuICAgICAqIC0gdW5kZXJzdGFuZHMgYmFzZTY0dXJsIGVuY29kaW5nOlxuICAgICAqICAgXCItXCIgaW5zdGVhZCBvZiBcIitcIixcbiAgICAgKiAgIFwiX1wiIGluc3RlYWQgb2YgXCIvXCIsXG4gICAgICogICBubyBwYWRkaW5nXG4gICAgICovXG4gICAgZGVjKGJhc2U2NFN0cikge1xuICAgICAgICAvLyBlc3RpbWF0ZSBieXRlIHNpemUsIG5vdCBhY2NvdW50aW5nIGZvciBpbm5lciBwYWRkaW5nIGFuZCB3aGl0ZXNwYWNlXG4gICAgICAgIGxldCBlcyA9IChiYXNlNjRTdHIubGVuZ3RoICogMykgLyA0O1xuICAgICAgICBpZiAoYmFzZTY0U3RyW2Jhc2U2NFN0ci5sZW5ndGggLSAyXSA9PSBcIj1cIilcbiAgICAgICAgICAgIGVzIC09IDI7XG4gICAgICAgIGVsc2UgaWYgKGJhc2U2NFN0cltiYXNlNjRTdHIubGVuZ3RoIC0gMV0gPT0gXCI9XCIpXG4gICAgICAgICAgICBlcyAtPSAxO1xuICAgICAgICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheShlcyksIGJ5dGVQb3MgPSAwLCAvLyBwb3NpdGlvbiBpbiBieXRlIGFycmF5XG4gICAgICAgIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgICAgIGIsIC8vIGN1cnJlbnQgYnl0ZVxuICAgICAgICBwID0gMDsgLy8gcHJldmlvdXMgYnl0ZVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJhc2U2NFN0ci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYiA9IGRlY1RhYmxlW2Jhc2U2NFN0ci5jaGFyQ29kZUF0KGkpXTtcbiAgICAgICAgICAgIGlmIChiID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGJhc2U2NFN0cltpXSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIFRTNzAyOTogRmFsbHRocm91Z2ggY2FzZSBpbiBzd2l0Y2hcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIj1cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMDsgLy8gcmVzZXQgc3RhdGUgd2hlbiBwYWRkaW5nIGZvdW5kXG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgVFM3MDI5OiBGYWxsdGhyb3VnaCBjYXNlIGluIHN3aXRjaFxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiXFxuXCI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJcXHJcIjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIlxcdFwiOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiIFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7IC8vIHNraXAgd2hpdGUtc3BhY2UsIGFuZCBwYWRkaW5nXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcihcImludmFsaWQgYmFzZTY0IHN0cmluZy5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3dpdGNoIChncm91cFBvcykge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgcCA9IGI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBieXRlc1tieXRlUG9zKytdID0gKHAgPDwgMikgfCAoKGIgJiA0OCkgPj4gNCk7XG4gICAgICAgICAgICAgICAgICAgIHAgPSBiO1xuICAgICAgICAgICAgICAgICAgICBncm91cFBvcyA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgYnl0ZXNbYnl0ZVBvcysrXSA9ICgocCAmIDE1KSA8PCA0KSB8ICgoYiAmIDYwKSA+PiAyKTtcbiAgICAgICAgICAgICAgICAgICAgcCA9IGI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICBieXRlc1tieXRlUG9zKytdID0gKChwICYgMykgPDwgNikgfCBiO1xuICAgICAgICAgICAgICAgICAgICBncm91cFBvcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChncm91cFBvcyA9PSAxKVxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIGJhc2U2NCBzdHJpbmcuXCIpO1xuICAgICAgICByZXR1cm4gYnl0ZXMuc3ViYXJyYXkoMCwgYnl0ZVBvcyk7XG4gICAgfSxcbiAgICAvKipcbiAgICAgKiBFbmNvZGUgYSBieXRlIGFycmF5IHRvIGEgYmFzZTY0IHN0cmluZy5cbiAgICAgKi9cbiAgICBlbmMoYnl0ZXMpIHtcbiAgICAgICAgbGV0IGJhc2U2NCA9IFwiXCIsIGdyb3VwUG9zID0gMCwgLy8gcG9zaXRpb24gaW4gYmFzZTY0IGdyb3VwXG4gICAgICAgIGIsIC8vIGN1cnJlbnQgYnl0ZVxuICAgICAgICBwID0gMDsgLy8gY2Fycnkgb3ZlciBmcm9tIHByZXZpb3VzIGJ5dGVcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYiA9IGJ5dGVzW2ldO1xuICAgICAgICAgICAgc3dpdGNoIChncm91cFBvcykge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW2IgPj4gMl07XG4gICAgICAgICAgICAgICAgICAgIHAgPSAoYiAmIDMpIDw8IDQ7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbcCB8IChiID4+IDQpXTtcbiAgICAgICAgICAgICAgICAgICAgcCA9IChiICYgMTUpIDw8IDI7XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMjtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICBiYXNlNjQgKz0gZW5jVGFibGVbcCB8IChiID4+IDYpXTtcbiAgICAgICAgICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW2IgJiA2M107XG4gICAgICAgICAgICAgICAgICAgIGdyb3VwUG9zID0gMDtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gYWRkIG91dHB1dCBwYWRkaW5nXG4gICAgICAgIGlmIChncm91cFBvcykge1xuICAgICAgICAgICAgYmFzZTY0ICs9IGVuY1RhYmxlW3BdO1xuICAgICAgICAgICAgYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICAgICAgaWYgKGdyb3VwUG9zID09IDEpXG4gICAgICAgICAgICAgICAgYmFzZTY0ICs9IFwiPVwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiYXNlNjQ7XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   protoInt64: () => (/* binding */ protoInt64)\n/* harmony export */ });\n/* harmony import */ var _private_assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/assert.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\");\n/* harmony import */ var _google_varint_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./google/varint.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`int64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`uint64 invalid: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    const assertInt64String = (value) => (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n    const assertUInt64String = (value) => (0,_private_assert_js__WEBPACK_IMPORTED_MODULE_0__.assert)(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0,_google_varint_js__WEBPACK_IMPORTED_MODULE_1__.uInt64ToString)(lo, hi);\n        },\n    };\n}\nconst protoInt64 = makeInt64Support();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvLWludDY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUN3QztBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU87QUFDdkIsbUJBQW1CLE9BQU87QUFDMUIsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsTUFBTTtBQUM1RDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxNQUFNO0FBQzdEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EseUNBQXlDLDBEQUFNLDZDQUE2QyxNQUFNO0FBQ2xHLDBDQUEwQywwREFBTSw0Q0FBNEMsTUFBTTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0VBQWU7QUFDbEMsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLGdFQUFhO0FBQ2hDLFNBQVM7QUFDVDtBQUNBLG1CQUFtQixpRUFBYztBQUNqQyxTQUFTO0FBQ1Q7QUFDQTtBQUNPIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9wcm90by1pbnQ2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAyMS0yMDI0IEJ1ZiBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuaW1wb3J0IHsgYXNzZXJ0IH0gZnJvbSBcIi4vcHJpdmF0ZS9hc3NlcnQuanNcIjtcbmltcG9ydCB7IGludDY0RnJvbVN0cmluZywgaW50NjRUb1N0cmluZywgdUludDY0VG9TdHJpbmcsIH0gZnJvbSBcIi4vZ29vZ2xlL3ZhcmludC5qc1wiO1xuZnVuY3Rpb24gbWFrZUludDY0U3VwcG9ydCgpIHtcbiAgICBjb25zdCBkdiA9IG5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoOCkpO1xuICAgIC8vIG5vdGUgdGhhdCBTYWZhcmkgMTQgaW1wbGVtZW50cyBCaWdJbnQsIGJ1dCBub3QgdGhlIERhdGFWaWV3IG1ldGhvZHNcbiAgICBjb25zdCBvayA9IHR5cGVvZiBCaWdJbnQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuZ2V0QmlnSW50NjQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgZHYuZ2V0QmlnVWludDY0ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgdHlwZW9mIGR2LnNldEJpZ0ludDY0ID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgdHlwZW9mIGR2LnNldEJpZ1VpbnQ2NCA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICh0eXBlb2YgcHJvY2VzcyAhPSBcIm9iamVjdFwiIHx8XG4gICAgICAgICAgICB0eXBlb2YgcHJvY2Vzcy5lbnYgIT0gXCJvYmplY3RcIiB8fFxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuQlVGX0JJR0lOVF9ESVNBQkxFICE9PSBcIjFcIik7XG4gICAgaWYgKG9rKSB7XG4gICAgICAgIGNvbnN0IE1JTiA9IEJpZ0ludChcIi05MjIzMzcyMDM2ODU0Nzc1ODA4XCIpLCBNQVggPSBCaWdJbnQoXCI5MjIzMzcyMDM2ODU0Nzc1ODA3XCIpLCBVTUlOID0gQmlnSW50KFwiMFwiKSwgVU1BWCA9IEJpZ0ludChcIjE4NDQ2NzQ0MDczNzA5NTUxNjE1XCIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgemVybzogQmlnSW50KDApLFxuICAgICAgICAgICAgc3VwcG9ydGVkOiB0cnVlLFxuICAgICAgICAgICAgcGFyc2UodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiaSA9IHR5cGVvZiB2YWx1ZSA9PSBcImJpZ2ludFwiID8gdmFsdWUgOiBCaWdJbnQodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChiaSA+IE1BWCB8fCBiaSA8IE1JTikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBiaTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1UGFyc2UodmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBiaSA9IHR5cGVvZiB2YWx1ZSA9PSBcImJpZ2ludFwiID8gdmFsdWUgOiBCaWdJbnQodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChiaSA+IFVNQVggfHwgYmkgPCBVTUlOKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgdWludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBiaTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlbmModmFsdWUpIHtcbiAgICAgICAgICAgICAgICBkdi5zZXRCaWdJbnQ2NCgwLCB0aGlzLnBhcnNlKHZhbHVlKSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgbG86IGR2LmdldEludDMyKDAsIHRydWUpLFxuICAgICAgICAgICAgICAgICAgICBoaTogZHYuZ2V0SW50MzIoNCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1RW5jKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgZHYuc2V0QmlnSW50NjQoMCwgdGhpcy51UGFyc2UodmFsdWUpLCB0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBsbzogZHYuZ2V0SW50MzIoMCwgdHJ1ZSksXG4gICAgICAgICAgICAgICAgICAgIGhpOiBkdi5nZXRJbnQzMig0LCB0cnVlKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlYyhsbywgaGkpIHtcbiAgICAgICAgICAgICAgICBkdi5zZXRJbnQzMigwLCBsbywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgZHYuc2V0SW50MzIoNCwgaGksIHRydWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkdi5nZXRCaWdJbnQ2NCgwLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1RGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgICAgIGR2LnNldEludDMyKDAsIGxvLCB0cnVlKTtcbiAgICAgICAgICAgICAgICBkdi5zZXRJbnQzMig0LCBoaSwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGR2LmdldEJpZ1VpbnQ2NCgwLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IGFzc2VydEludDY0U3RyaW5nID0gKHZhbHVlKSA9PiBhc3NlcnQoL14tP1swLTldKyQvLnRlc3QodmFsdWUpLCBgaW50NjQgaW52YWxpZDogJHt2YWx1ZX1gKTtcbiAgICBjb25zdCBhc3NlcnRVSW50NjRTdHJpbmcgPSAodmFsdWUpID0+IGFzc2VydCgvXlswLTldKyQvLnRlc3QodmFsdWUpLCBgdWludDY0IGludmFsaWQ6ICR7dmFsdWV9YCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgemVybzogXCIwXCIsXG4gICAgICAgIHN1cHBvcnRlZDogZmFsc2UsXG4gICAgICAgIHBhcnNlKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH0sXG4gICAgICAgIHVQYXJzZSh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgZW5jKHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NlcnRJbnQ2NFN0cmluZyh2YWx1ZSk7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRGcm9tU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgdUVuYyh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXNzZXJ0VUludDY0U3RyaW5nKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiBpbnQ2NEZyb21TdHJpbmcodmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBkZWMobG8sIGhpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW50NjRUb1N0cmluZyhsbywgaGkpO1xuICAgICAgICB9LFxuICAgICAgICB1RGVjKGxvLCBoaSkge1xuICAgICAgICAgICAgcmV0dXJuIHVJbnQ2NFRvU3RyaW5nKGxvLCBoaSk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydCBjb25zdCBwcm90b0ludDY0ID0gbWFrZUludDY0U3VwcG9ydCgpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/proto3.js":
/*!************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/proto3.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   proto3: () => (/* binding */ proto3)\n/* harmony export */ });\n/* harmony import */ var _private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./private/proto-runtime.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\");\n/* harmony import */ var _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./private/field-list.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\");\n/* harmony import */ var _private_scalars_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./private/scalars.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\");\n/* harmony import */ var _private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./private/field-normalize.js */ \"./node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\");\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n\n\n\n/**\n * Provides functionality for messages defined with the proto3 syntax.\n */\nconst proto3 = (0,_private_proto_runtime_js__WEBPACK_IMPORTED_MODULE_0__.makeProtoRuntime)(\"proto3\", (fields) => {\n    return new _private_field_list_js__WEBPACK_IMPORTED_MODULE_1__.InternalFieldList(fields, (source) => (0,_private_field_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalizeFieldInfos)(source, true));\n}, \n// TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n(target) => {\n    for (const member of target.getType().fields.byMember()) {\n        if (member.opt) {\n            continue;\n        }\n        const name = member.localName, t = target;\n        if (member.repeated) {\n            t[name] = [];\n            continue;\n        }\n        switch (member.kind) {\n            case \"oneof\":\n                t[name] = { case: undefined };\n                break;\n            case \"enum\":\n                t[name] = 0;\n                break;\n            case \"map\":\n                t[name] = {};\n                break;\n            case \"scalar\":\n                t[name] = (0,_private_scalars_js__WEBPACK_IMPORTED_MODULE_3__.scalarZeroValue)(member.T, member.L);\n                break;\n            case \"message\":\n                // message fields are always optional in proto3\n                break;\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3Byb3RvMy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQzhEO0FBQ0Y7QUFDTDtBQUNZO0FBQ25FO0FBQ0E7QUFDQTtBQUNPLGVBQWUsMkVBQWdCO0FBQ3RDLGVBQWUscUVBQWlCLHFCQUFxQixnRkFBbUI7QUFDeEUsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0VBQWU7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vcHJvdG8zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5pbXBvcnQgeyBtYWtlUHJvdG9SdW50aW1lIH0gZnJvbSBcIi4vcHJpdmF0ZS9wcm90by1ydW50aW1lLmpzXCI7XG5pbXBvcnQgeyBJbnRlcm5hbEZpZWxkTGlzdCB9IGZyb20gXCIuL3ByaXZhdGUvZmllbGQtbGlzdC5qc1wiO1xuaW1wb3J0IHsgc2NhbGFyWmVyb1ZhbHVlIH0gZnJvbSBcIi4vcHJpdmF0ZS9zY2FsYXJzLmpzXCI7XG5pbXBvcnQgeyBub3JtYWxpemVGaWVsZEluZm9zIH0gZnJvbSBcIi4vcHJpdmF0ZS9maWVsZC1ub3JtYWxpemUuanNcIjtcbi8qKlxuICogUHJvdmlkZXMgZnVuY3Rpb25hbGl0eSBmb3IgbWVzc2FnZXMgZGVmaW5lZCB3aXRoIHRoZSBwcm90bzMgc3ludGF4LlxuICovXG5leHBvcnQgY29uc3QgcHJvdG8zID0gbWFrZVByb3RvUnVudGltZShcInByb3RvM1wiLCAoZmllbGRzKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBJbnRlcm5hbEZpZWxkTGlzdChmaWVsZHMsIChzb3VyY2UpID0+IG5vcm1hbGl6ZUZpZWxkSW5mb3Moc291cmNlLCB0cnVlKSk7XG59LCBcbi8vIFRPRE8gbWVyZ2Ugd2l0aCBwcm90bzIgYW5kIGluaXRFeHRlbnNpb25GaWVsZCwgYWxzbyBzZWUgaW5pdFBhcnRpYWwsIGVxdWFscywgY2xvbmVcbih0YXJnZXQpID0+IHtcbiAgICBmb3IgKGNvbnN0IG1lbWJlciBvZiB0YXJnZXQuZ2V0VHlwZSgpLmZpZWxkcy5ieU1lbWJlcigpKSB7XG4gICAgICAgIGlmIChtZW1iZXIub3B0KSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuYW1lID0gbWVtYmVyLmxvY2FsTmFtZSwgdCA9IHRhcmdldDtcbiAgICAgICAgaWYgKG1lbWJlci5yZXBlYXRlZCkge1xuICAgICAgICAgICAgdFtuYW1lXSA9IFtdO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoIChtZW1iZXIua2luZCkge1xuICAgICAgICAgICAgY2FzZSBcIm9uZW9mXCI6XG4gICAgICAgICAgICAgICAgdFtuYW1lXSA9IHsgY2FzZTogdW5kZWZpbmVkIH07XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiZW51bVwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSAwO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIm1hcFwiOlxuICAgICAgICAgICAgICAgIHRbbmFtZV0gPSB7fTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJzY2FsYXJcIjpcbiAgICAgICAgICAgICAgICB0W25hbWVdID0gc2NhbGFyWmVyb1ZhbHVlKG1lbWJlci5ULCBtZW1iZXIuTCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwibWVzc2FnZVwiOlxuICAgICAgICAgICAgICAgIC8vIG1lc3NhZ2UgZmllbGRzIGFyZSBhbHdheXMgb3B0aW9uYWwgaW4gcHJvdG8zXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59KTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/scalar.js":
/*!************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/scalar.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LongType: () => (/* binding */ LongType),\n/* harmony export */   ScalarType: () => (/* binding */ ScalarType)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\n/**\n * JavaScript representation of fields with 64 bit integral types (int64, uint64,\n * sint64, fixed64, sfixed64).\n *\n * This is a subset of google.protobuf.FieldOptions.JSType, which defines JS_NORMAL,\n * JS_STRING, and JS_NUMBER. Protobuf-ES uses BigInt by default, but will use\n * String if `[jstype = JS_STRING]` is specified.\n *\n * ```protobuf\n * uint64 field_a = 1; // BigInt\n * uint64 field_b = 2 [jstype = JS_NORMAL]; // BigInt\n * uint64 field_b = 2 [jstype = JS_NUMBER]; // BigInt\n * uint64 field_b = 2 [jstype = JS_STRING]; // String\n * ```\n */\nvar LongType;\n(function (LongType) {\n    /**\n     * Use JavaScript BigInt.\n     */\n    LongType[LongType[\"BIGINT\"] = 0] = \"BIGINT\";\n    /**\n     * Use JavaScript String.\n     *\n     * Field option `[jstype = JS_STRING]`.\n     */\n    LongType[LongType[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3NjYWxhci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCLDRDQUE0QztBQUM1Qyw0Q0FBNEM7QUFDNUMsNENBQTRDO0FBQzVDO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AYnVmYnVpbGQvcHJvdG9idWYvZGlzdC9lc20vc2NhbGFyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAyMDIxLTIwMjQgQnVmIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4vLyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4vLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbi8vXG4vLyAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuLy9cbi8vIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbi8vIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbi8vIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuLy8gbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4vKipcbiAqIFNjYWxhciB2YWx1ZSB0eXBlcy4gVGhpcyBpcyBhIHN1YnNldCBvZiBmaWVsZCB0eXBlcyBkZWNsYXJlZCBieSBwcm90b2J1ZlxuICogZW51bSBnb29nbGUucHJvdG9idWYuRmllbGREZXNjcmlwdG9yUHJvdG8uVHlwZSBUaGUgdHlwZXMgR1JPVVAgYW5kIE1FU1NBR0VcbiAqIGFyZSBvbWl0dGVkLCBidXQgdGhlIG51bWVyaWNhbCB2YWx1ZXMgYXJlIGlkZW50aWNhbC5cbiAqL1xuZXhwb3J0IHZhciBTY2FsYXJUeXBlO1xuKGZ1bmN0aW9uIChTY2FsYXJUeXBlKSB7XG4gICAgLy8gMCBpcyByZXNlcnZlZCBmb3IgZXJyb3JzLlxuICAgIC8vIE9yZGVyIGlzIHdlaXJkIGZvciBoaXN0b3JpY2FsIHJlYXNvbnMuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiRE9VQkxFXCJdID0gMV0gPSBcIkRPVUJMRVwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIkZMT0FUXCJdID0gMl0gPSBcIkZMT0FUXCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDY0IGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UNjRcIl0gPSAzXSA9IFwiSU5UNjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UNjRcIl0gPSA0XSA9IFwiVUlOVDY0XCI7XG4gICAgLy8gTm90IFppZ1phZyBlbmNvZGVkLiAgTmVnYXRpdmUgbnVtYmVycyB0YWtlIDEwIGJ5dGVzLiAgVXNlIFRZUEVfU0lOVDMyIGlmXG4gICAgLy8gbmVnYXRpdmUgdmFsdWVzIGFyZSBsaWtlbHkuXG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiSU5UMzJcIl0gPSA1XSA9IFwiSU5UMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDY0XCJdID0gNl0gPSBcIkZJWEVENjRcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJGSVhFRDMyXCJdID0gN10gPSBcIkZJWEVEMzJcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCT09MXCJdID0gOF0gPSBcIkJPT0xcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJTVFJJTkdcIl0gPSA5XSA9IFwiU1RSSU5HXCI7XG4gICAgLy8gVGFnLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gR3JvdXAgdHlwZSBpcyBkZXByZWNhdGVkIGFuZCBub3Qgc3VwcG9ydGVkIGluIHByb3RvMy4gSG93ZXZlciwgUHJvdG8zXG4gICAgLy8gaW1wbGVtZW50YXRpb25zIHNob3VsZCBzdGlsbCBiZSBhYmxlIHRvIHBhcnNlIHRoZSBncm91cCB3aXJlIGZvcm1hdCBhbmRcbiAgICAvLyB0cmVhdCBncm91cCBmaWVsZHMgYXMgdW5rbm93biBmaWVsZHMuXG4gICAgLy8gVFlQRV9HUk9VUCA9IDEwLFxuICAgIC8vIFRZUEVfTUVTU0FHRSA9IDExLCAgLy8gTGVuZ3RoLWRlbGltaXRlZCBhZ2dyZWdhdGUuXG4gICAgLy8gTmV3IGluIHZlcnNpb24gMi5cbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJCWVRFU1wiXSA9IDEyXSA9IFwiQllURVNcIjtcbiAgICBTY2FsYXJUeXBlW1NjYWxhclR5cGVbXCJVSU5UMzJcIl0gPSAxM10gPSBcIlVJTlQzMlwiO1xuICAgIC8vIFRZUEVfRU5VTSA9IDE0LFxuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDMyXCJdID0gMTVdID0gXCJTRklYRUQzMlwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNGSVhFRDY0XCJdID0gMTZdID0gXCJTRklYRUQ2NFwiO1xuICAgIFNjYWxhclR5cGVbU2NhbGFyVHlwZVtcIlNJTlQzMlwiXSA9IDE3XSA9IFwiU0lOVDMyXCI7XG4gICAgU2NhbGFyVHlwZVtTY2FsYXJUeXBlW1wiU0lOVDY0XCJdID0gMThdID0gXCJTSU5UNjRcIjtcbn0pKFNjYWxhclR5cGUgfHwgKFNjYWxhclR5cGUgPSB7fSkpO1xuLyoqXG4gKiBKYXZhU2NyaXB0IHJlcHJlc2VudGF0aW9uIG9mIGZpZWxkcyB3aXRoIDY0IGJpdCBpbnRlZ3JhbCB0eXBlcyAoaW50NjQsIHVpbnQ2NCxcbiAqIHNpbnQ2NCwgZml4ZWQ2NCwgc2ZpeGVkNjQpLlxuICpcbiAqIFRoaXMgaXMgYSBzdWJzZXQgb2YgZ29vZ2xlLnByb3RvYnVmLkZpZWxkT3B0aW9ucy5KU1R5cGUsIHdoaWNoIGRlZmluZXMgSlNfTk9STUFMLFxuICogSlNfU1RSSU5HLCBhbmQgSlNfTlVNQkVSLiBQcm90b2J1Zi1FUyB1c2VzIEJpZ0ludCBieSBkZWZhdWx0LCBidXQgd2lsbCB1c2VcbiAqIFN0cmluZyBpZiBgW2pzdHlwZSA9IEpTX1NUUklOR11gIGlzIHNwZWNpZmllZC5cbiAqXG4gKiBgYGBwcm90b2J1ZlxuICogdWludDY0IGZpZWxkX2EgPSAxOyAvLyBCaWdJbnRcbiAqIHVpbnQ2NCBmaWVsZF9iID0gMiBbanN0eXBlID0gSlNfTk9STUFMXTsgLy8gQmlnSW50XG4gKiB1aW50NjQgZmllbGRfYiA9IDIgW2pzdHlwZSA9IEpTX05VTUJFUl07IC8vIEJpZ0ludFxuICogdWludDY0IGZpZWxkX2IgPSAyIFtqc3R5cGUgPSBKU19TVFJJTkddOyAvLyBTdHJpbmdcbiAqIGBgYFxuICovXG5leHBvcnQgdmFyIExvbmdUeXBlO1xuKGZ1bmN0aW9uIChMb25nVHlwZSkge1xuICAgIC8qKlxuICAgICAqIFVzZSBKYXZhU2NyaXB0IEJpZ0ludC5cbiAgICAgKi9cbiAgICBMb25nVHlwZVtMb25nVHlwZVtcIkJJR0lOVFwiXSA9IDBdID0gXCJCSUdJTlRcIjtcbiAgICAvKipcbiAgICAgKiBVc2UgSmF2YVNjcmlwdCBTdHJpbmcuXG4gICAgICpcbiAgICAgKiBGaWVsZCBvcHRpb24gYFtqc3R5cGUgPSBKU19TVFJJTkddYC5cbiAgICAgKi9cbiAgICBMb25nVHlwZVtMb25nVHlwZVtcIlNUUklOR1wiXSA9IDFdID0gXCJTVFJJTkdcIjtcbn0pKExvbmdUeXBlIHx8IChMb25nVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/scalar.js\n"));

/***/ }),

/***/ "./node_modules/@bufbuild/protobuf/dist/esm/service-type.js":
/*!******************************************************************!*\
  !*** ./node_modules/@bufbuild/protobuf/dist/esm/service-type.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MethodIdempotency: () => (/* binding */ MethodIdempotency),\n/* harmony export */   MethodKind: () => (/* binding */ MethodKind)\n/* harmony export */ });\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * MethodKind represents the four method types that can be declared in\n * protobuf with the `stream` keyword:\n *\n * 1. Unary:           rpc (Input) returns (Output)\n * 2. ServerStreaming: rpc (Input) returns (stream Output)\n * 3. ClientStreaming: rpc (stream Input) returns (Output)\n * 4. BiDiStreaming:   rpc (stream Input) returns (stream Output)\n */\nvar MethodKind;\n(function (MethodKind) {\n    MethodKind[MethodKind[\"Unary\"] = 0] = \"Unary\";\n    MethodKind[MethodKind[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n    MethodKind[MethodKind[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n    MethodKind[MethodKind[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\n/**\n * Is this method side-effect-free (or safe in HTTP parlance), or just\n * idempotent, or neither? HTTP based RPC implementation may choose GET verb\n * for safe methods, and PUT verb for idempotent methods instead of the\n * default POST.\n *\n * This enum matches the protobuf enum google.protobuf.MethodOptions.IdempotencyLevel,\n * defined in the well-known type google/protobuf/descriptor.proto, but\n * drops UNKNOWN.\n */\nvar MethodIdempotency;\n(function (MethodIdempotency) {\n    /**\n     * Idempotent, no side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n    /**\n     * Idempotent, but may have side effects.\n     */\n    MethodIdempotency[MethodIdempotency[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGJ1ZmJ1aWxkL3Byb3RvYnVmL2Rpc3QvZXNtL3NlcnZpY2UtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0M7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BidWZidWlsZC9wcm90b2J1Zi9kaXN0L2VzbS9zZXJ2aWNlLXR5cGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyNCBCdWYgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbi8vIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbi8vIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuLy9cbi8vICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4vL1xuLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuLy8gZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuLy8gV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4vLyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4vLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbi8qKlxuICogTWV0aG9kS2luZCByZXByZXNlbnRzIHRoZSBmb3VyIG1ldGhvZCB0eXBlcyB0aGF0IGNhbiBiZSBkZWNsYXJlZCBpblxuICogcHJvdG9idWYgd2l0aCB0aGUgYHN0cmVhbWAga2V5d29yZDpcbiAqXG4gKiAxLiBVbmFyeTogICAgICAgICAgIHJwYyAoSW5wdXQpIHJldHVybnMgKE91dHB1dClcbiAqIDIuIFNlcnZlclN0cmVhbWluZzogcnBjIChJbnB1dCkgcmV0dXJucyAoc3RyZWFtIE91dHB1dClcbiAqIDMuIENsaWVudFN0cmVhbWluZzogcnBjIChzdHJlYW0gSW5wdXQpIHJldHVybnMgKE91dHB1dClcbiAqIDQuIEJpRGlTdHJlYW1pbmc6ICAgcnBjIChzdHJlYW0gSW5wdXQpIHJldHVybnMgKHN0cmVhbSBPdXRwdXQpXG4gKi9cbmV4cG9ydCB2YXIgTWV0aG9kS2luZDtcbihmdW5jdGlvbiAoTWV0aG9kS2luZCkge1xuICAgIE1ldGhvZEtpbmRbTWV0aG9kS2luZFtcIlVuYXJ5XCJdID0gMF0gPSBcIlVuYXJ5XCI7XG4gICAgTWV0aG9kS2luZFtNZXRob2RLaW5kW1wiU2VydmVyU3RyZWFtaW5nXCJdID0gMV0gPSBcIlNlcnZlclN0cmVhbWluZ1wiO1xuICAgIE1ldGhvZEtpbmRbTWV0aG9kS2luZFtcIkNsaWVudFN0cmVhbWluZ1wiXSA9IDJdID0gXCJDbGllbnRTdHJlYW1pbmdcIjtcbiAgICBNZXRob2RLaW5kW01ldGhvZEtpbmRbXCJCaURpU3RyZWFtaW5nXCJdID0gM10gPSBcIkJpRGlTdHJlYW1pbmdcIjtcbn0pKE1ldGhvZEtpbmQgfHwgKE1ldGhvZEtpbmQgPSB7fSkpO1xuLyoqXG4gKiBJcyB0aGlzIG1ldGhvZCBzaWRlLWVmZmVjdC1mcmVlIChvciBzYWZlIGluIEhUVFAgcGFybGFuY2UpLCBvciBqdXN0XG4gKiBpZGVtcG90ZW50LCBvciBuZWl0aGVyPyBIVFRQIGJhc2VkIFJQQyBpbXBsZW1lbnRhdGlvbiBtYXkgY2hvb3NlIEdFVCB2ZXJiXG4gKiBmb3Igc2FmZSBtZXRob2RzLCBhbmQgUFVUIHZlcmIgZm9yIGlkZW1wb3RlbnQgbWV0aG9kcyBpbnN0ZWFkIG9mIHRoZVxuICogZGVmYXVsdCBQT1NULlxuICpcbiAqIFRoaXMgZW51bSBtYXRjaGVzIHRoZSBwcm90b2J1ZiBlbnVtIGdvb2dsZS5wcm90b2J1Zi5NZXRob2RPcHRpb25zLklkZW1wb3RlbmN5TGV2ZWwsXG4gKiBkZWZpbmVkIGluIHRoZSB3ZWxsLWtub3duIHR5cGUgZ29vZ2xlL3Byb3RvYnVmL2Rlc2NyaXB0b3IucHJvdG8sIGJ1dFxuICogZHJvcHMgVU5LTk9XTi5cbiAqL1xuZXhwb3J0IHZhciBNZXRob2RJZGVtcG90ZW5jeTtcbihmdW5jdGlvbiAoTWV0aG9kSWRlbXBvdGVuY3kpIHtcbiAgICAvKipcbiAgICAgKiBJZGVtcG90ZW50LCBubyBzaWRlIGVmZmVjdHMuXG4gICAgICovXG4gICAgTWV0aG9kSWRlbXBvdGVuY3lbTWV0aG9kSWRlbXBvdGVuY3lbXCJOb1NpZGVFZmZlY3RzXCJdID0gMV0gPSBcIk5vU2lkZUVmZmVjdHNcIjtcbiAgICAvKipcbiAgICAgKiBJZGVtcG90ZW50LCBidXQgbWF5IGhhdmUgc2lkZSBlZmZlY3RzLlxuICAgICAqL1xuICAgIE1ldGhvZElkZW1wb3RlbmN5W01ldGhvZElkZW1wb3RlbmN5W1wiSWRlbXBvdGVudFwiXSA9IDJdID0gXCJJZGVtcG90ZW50XCI7XG59KShNZXRob2RJZGVtcG90ZW5jeSB8fCAoTWV0aG9kSWRlbXBvdGVuY3kgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/core/dist/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@meshsdk/core/dist/index.js ***!
  \**************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppWallet: () => (/* reexport safe */ _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__.AppWallet),\n/* harmony export */   AssetFingerprint: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.AssetFingerprint),\n/* harmony export */   BeginProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.BeginProvider),\n/* harmony export */   BigNum: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.BigNum),\n/* harmony export */   BlockfrostProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.BlockfrostProvider),\n/* harmony export */   BrowserWallet: () => (/* reexport safe */ _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__.BrowserWallet),\n/* harmony export */   CIP68_100: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.CIP68_100),\n/* harmony export */   CIP68_222: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.CIP68_222),\n/* harmony export */   DEFAULT_PROTOCOL_PARAMETERS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_PROTOCOL_PARAMETERS),\n/* harmony export */   DEFAULT_REDEEMER_BUDGET: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_REDEEMER_BUDGET),\n/* harmony export */   DEFAULT_V1_COST_MODEL_LIST: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_V1_COST_MODEL_LIST),\n/* harmony export */   DEFAULT_V2_COST_MODEL_LIST: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_V2_COST_MODEL_LIST),\n/* harmony export */   DREP_DEPOSIT: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.DREP_DEPOSIT),\n/* harmony export */   EmbeddedWallet: () => (/* reexport safe */ _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__.EmbeddedWallet),\n/* harmony export */   ForgeScript: () => (/* reexport safe */ _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__.ForgeScript),\n/* harmony export */   HARDENED_KEY_START: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.HARDENED_KEY_START),\n/* harmony export */   HydraProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.HydraProvider),\n/* harmony export */   KoiosProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.KoiosProvider),\n/* harmony export */   LANGUAGE_VERSIONS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.LANGUAGE_VERSIONS),\n/* harmony export */   MaestroProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.MaestroProvider),\n/* harmony export */   MeshTxBuilder: () => (/* reexport safe */ _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__.MeshTxBuilder),\n/* harmony export */   MeshValue: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.MeshValue),\n/* harmony export */   MeshWallet: () => (/* reexport safe */ _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__.MeshWallet),\n/* harmony export */   OfflineFetcher: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.OfflineFetcher),\n/* harmony export */   OgmiosProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.OgmiosProvider),\n/* harmony export */   POLICY_ID_LENGTH: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.POLICY_ID_LENGTH),\n/* harmony export */   SLOT_CONFIG_NETWORK: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SLOT_CONFIG_NETWORK),\n/* harmony export */   SUPPORTED_CLOCKS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_CLOCKS),\n/* harmony export */   SUPPORTED_HANDLES: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES),\n/* harmony export */   SUPPORTED_LANGUAGE_VIEWS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_LANGUAGE_VIEWS),\n/* harmony export */   SUPPORTED_OGMIOS_LINKS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_OGMIOS_LINKS),\n/* harmony export */   SUPPORTED_TOKENS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_TOKENS),\n/* harmony export */   SUPPORTED_WALLETS: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_WALLETS),\n/* harmony export */   Transaction: () => (/* reexport safe */ _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__.Transaction),\n/* harmony export */   U5CProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.U5CProvider),\n/* harmony export */   UtxoSelection: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.UtxoSelection),\n/* harmony export */   WalletStaticMethods: () => (/* reexport safe */ _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__.WalletStaticMethods),\n/* harmony export */   YaciProvider: () => (/* reexport safe */ _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__.YaciProvider),\n/* harmony export */   applyCborEncoding: () => (/* binding */ applyCborEncoding2),\n/* harmony export */   applyParamsToScript: () => (/* binding */ applyParamsToScript2),\n/* harmony export */   assetClass: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.assetClass),\n/* harmony export */   assetName: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.assetName),\n/* harmony export */   assocMap: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.assocMap),\n/* harmony export */   bool: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.bool),\n/* harmony export */   builtinByteString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.builtinByteString),\n/* harmony export */   byteString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.byteString),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   castProtocol: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol),\n/* harmony export */   checkSignature: () => (/* reexport safe */ _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.checkSignature),\n/* harmony export */   conStr: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.conStr),\n/* harmony export */   conStr0: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.conStr0),\n/* harmony export */   conStr1: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.conStr1),\n/* harmony export */   conStr2: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.conStr2),\n/* harmony export */   conStr3: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.conStr3),\n/* harmony export */   core: () => (/* reexport module object */ _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   cst: () => (/* reexport module object */ _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   currencySymbol: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.currencySymbol),\n/* harmony export */   deserializeAddress: () => (/* binding */ deserializeAddress),\n/* harmony export */   deserializeDatum: () => (/* binding */ deserializeDatum),\n/* harmony export */   deserializePoolId: () => (/* binding */ deserializePoolId),\n/* harmony export */   dict: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.dict),\n/* harmony export */   emptyTxBuilderBody: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.emptyTxBuilderBody),\n/* harmony export */   experimentalSelectUtxos: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.experimentalSelectUtxos),\n/* harmony export */   fromUTF8: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8),\n/* harmony export */   fungibleAssetKeys: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fungibleAssetKeys),\n/* harmony export */   generateMnemonic: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.generateMnemonic),\n/* harmony export */   generateNonce: () => (/* reexport safe */ _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.generateNonce),\n/* harmony export */   getFile: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.getFile),\n/* harmony export */   hashByteString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hashByteString),\n/* harmony export */   hashDrepAnchor: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hashDrepAnchor),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes),\n/* harmony export */   hexToString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hexToString),\n/* harmony export */   integer: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.integer),\n/* harmony export */   isNetwork: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.isNetwork),\n/* harmony export */   keepRelevant: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.keepRelevant),\n/* harmony export */   largestFirst: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.largestFirst),\n/* harmony export */   largestFirstMultiAsset: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.largestFirstMultiAsset),\n/* harmony export */   list: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.list),\n/* harmony export */   mAssetClass: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mAssetClass),\n/* harmony export */   mBool: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mBool),\n/* harmony export */   mConStr: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mConStr),\n/* harmony export */   mConStr0: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mConStr0),\n/* harmony export */   mConStr1: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mConStr1),\n/* harmony export */   mConStr2: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mConStr2),\n/* harmony export */   mConStr3: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mConStr3),\n/* harmony export */   mMaybeStakingHash: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mMaybeStakingHash),\n/* harmony export */   mNone: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mNone),\n/* harmony export */   mOption: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mOption),\n/* harmony export */   mOutputReference: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mOutputReference),\n/* harmony export */   mPlutusBSArrayToString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mPlutusBSArrayToString),\n/* harmony export */   mPubKeyAddress: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mPubKeyAddress),\n/* harmony export */   mScriptAddress: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mScriptAddress),\n/* harmony export */   mSome: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mSome),\n/* harmony export */   mStringToPlutusBSArray: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mStringToPlutusBSArray),\n/* harmony export */   mTuple: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mTuple),\n/* harmony export */   mTxOutRef: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mTxOutRef),\n/* harmony export */   mValue: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mValue),\n/* harmony export */   maybeStakingHash: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.maybeStakingHash),\n/* harmony export */   mergeAssets: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mergeAssets),\n/* harmony export */   metadataStandardKeys: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.metadataStandardKeys),\n/* harmony export */   metadataToCip68: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.metadataToCip68),\n/* harmony export */   mnemonicToEntropy: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.mnemonicToEntropy),\n/* harmony export */   none: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.none),\n/* harmony export */   option: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.option),\n/* harmony export */   outputReference: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.outputReference),\n/* harmony export */   parseAssetUnit: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.parseAssetUnit),\n/* harmony export */   plutusBSArrayToString: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.plutusBSArrayToString),\n/* harmony export */   policyId: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.policyId),\n/* harmony export */   posixTime: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.posixTime),\n/* harmony export */   pubKeyAddress: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.pubKeyAddress),\n/* harmony export */   pubKeyHash: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.pubKeyHash),\n/* harmony export */   resolveDataHash: () => (/* binding */ resolveDataHash),\n/* harmony export */   resolveEpochNo: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.resolveEpochNo),\n/* harmony export */   resolveFingerprint: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.resolveFingerprint),\n/* harmony export */   resolveLanguageView: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.resolveLanguageView),\n/* harmony export */   resolveNativeScriptAddress: () => (/* binding */ resolveNativeScriptAddress),\n/* harmony export */   resolveNativeScriptHash: () => (/* binding */ resolveNativeScriptHash),\n/* harmony export */   resolveNativeScriptHex: () => (/* binding */ resolveNativeScriptHex),\n/* harmony export */   resolvePaymentKeyHash: () => (/* binding */ resolvePaymentKeyHash),\n/* harmony export */   resolvePlutusScriptAddress: () => (/* binding */ resolvePlutusScriptAddress),\n/* harmony export */   resolvePlutusScriptHash: () => (/* binding */ resolvePlutusScriptHash),\n/* harmony export */   resolvePoolId: () => (/* binding */ resolvePoolId),\n/* harmony export */   resolvePrivateKey: () => (/* binding */ resolvePrivateKey),\n/* harmony export */   resolveRewardAddress: () => (/* binding */ resolveRewardAddress),\n/* harmony export */   resolveScriptHash: () => (/* binding */ resolveScriptHash),\n/* harmony export */   resolveScriptHashDRepId: () => (/* binding */ resolveScriptHashDRepId),\n/* harmony export */   resolveScriptRef: () => (/* binding */ resolveScriptRef),\n/* harmony export */   resolveSlotNo: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.resolveSlotNo),\n/* harmony export */   resolveStakeKeyHash: () => (/* binding */ resolveStakeKeyHash),\n/* harmony export */   resolveTxFees: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.resolveTxFees),\n/* harmony export */   resolveTxHash: () => (/* binding */ resolveTxHash),\n/* harmony export */   royaltiesStandardKeys: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.royaltiesStandardKeys),\n/* harmony export */   scriptAddress: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.scriptAddress),\n/* harmony export */   scriptHash: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.scriptHash),\n/* harmony export */   serializeAddressObj: () => (/* binding */ serializeAddressObj),\n/* harmony export */   serializeNativeScript: () => (/* binding */ serializeNativeScript),\n/* harmony export */   serializePlutusScript: () => (/* binding */ serializePlutusScript),\n/* harmony export */   serializePoolId: () => (/* binding */ serializePoolId),\n/* harmony export */   serializeRewardAddress: () => (/* binding */ serializeRewardAddress),\n/* harmony export */   signData: () => (/* reexport safe */ _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.signData),\n/* harmony export */   slotToBeginUnixTime: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.slotToBeginUnixTime),\n/* harmony export */   some: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.some),\n/* harmony export */   stringToBSArray: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.stringToBSArray),\n/* harmony export */   stringToHex: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.stringToHex),\n/* harmony export */   toBytes: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toBytes),\n/* harmony export */   toUTF8: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toUTF8),\n/* harmony export */   tokenName: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.tokenName),\n/* harmony export */   tuple: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.tuple),\n/* harmony export */   txOutRef: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.txOutRef),\n/* harmony export */   unixTimeToEnclosingSlot: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.unixTimeToEnclosingSlot),\n/* harmony export */   utxoToTxIn: () => (/* reexport safe */ _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__.utxoToTxIn),\n/* harmony export */   validityRangeToObj: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.validityRangeToObj),\n/* harmony export */   value: () => (/* reexport safe */ _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.value)\n/* harmony export */ });\n/* harmony import */ var _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @meshsdk/core-csl */ \"./node_modules/@meshsdk/core-csl/dist/index.js\");\n/* harmony import */ var _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meshsdk/common */ \"./node_modules/@meshsdk/common/dist/index.js\");\n/* harmony import */ var _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @meshsdk/core-cst */ \"./node_modules/@meshsdk/core-cst/dist/index.js\");\n/* harmony import */ var _meshsdk_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @meshsdk/provider */ \"./node_modules/@meshsdk/provider/dist/index.js\");\n/* harmony import */ var _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @meshsdk/transaction */ \"./node_modules/@meshsdk/transaction/dist/index.js\");\n/* harmony import */ var _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @meshsdk/wallet */ \"./node_modules/@meshsdk/wallet/dist/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__, _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__, _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__]);\n([_meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__, _meshsdk_transaction__WEBPACK_IMPORTED_MODULE_4__, _meshsdk_wallet__WEBPACK_IMPORTED_MODULE_5__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n// src/core.ts\n\nvar applyParamsToScript2 = _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.applyParamsToScript;\nvar applyCborEncoding2 = _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.applyCborEncoding;\n\n// src/utils/resolver.ts\nvar resolvePrivateKey = (words) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolvePrivateKey(words);\nvar resolveTxHash = (txHex) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.calculateTxHash(txHex);\nvar resolveDataHash = (data) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveDataHash(data);\nvar resolveNativeScriptHash = (script) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveNativeScriptHash(script);\nvar resolveScriptHash = (scriptCode, version) => {\n  if (!version) {\n    return _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializeNativeScript(scriptCode).hash().to_hex();\n  }\n  return _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializePlutusScript(scriptCode, version).hash().to_hex();\n};\nvar resolveRewardAddress = (bech32) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveRewardAddress(bech32);\nvar resolveStakeKeyHash = (bech32) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveStakeKeyHash(bech32);\nvar resolveScriptHashDRepId = (scriptHash) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveScriptHashDRepId(scriptHash);\nvar resolvePlutusScriptAddress = (script, networkId) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolvePlutusScriptAddress(script, networkId);\nvar resolveNativeScriptAddress = (script, networkId) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveNativeScriptAddress(script, networkId);\nvar resolveNativeScriptHex = (script) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.toNativeScript(script).to_hex();\nvar resolvePaymentKeyHash = (bech32) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializeBech32Address(bech32).pubKeyHash;\nvar resolvePlutusScriptHash = (bech32) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializeBech32Address(bech32).scriptHash;\nvar resolveScriptRef = (script) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveScriptRef(script);\nvar resolvePoolId = (hash) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.serializePoolId(hash);\n\n// src/utils/deserializer.ts\nvar deserializeAddress = (bech32) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializeBech32Address(bech32);\nvar deserializeDatum = (datumCbor) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.parseDatumCbor(datumCbor);\nvar deserializePoolId = (poolId) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.resolveEd25519KeyHash(poolId);\n\n// src/utils/serializer.ts\nvar serializeNativeScript = (script, stakeCredentialHash, networkId = 0, isScriptStakeCredential = false) => {\n  const serializer = new _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.CSLSerializer();\n  const { scriptCbor, scriptHash } = serializer.deserializer.script.deserializeNativeScript(script);\n  const deserializedAddress = {\n    scriptHash\n  };\n  if (isScriptStakeCredential) {\n    deserializedAddress.stakeScriptCredentialHash = stakeCredentialHash;\n  } else {\n    deserializedAddress.stakeCredentialHash = stakeCredentialHash;\n  }\n  const address = serializer.serializeAddress(deserializedAddress, networkId);\n  return { address, scriptCbor };\n};\nvar serializePlutusScript = (script, stakeCredentialHash, networkId = 0, isScriptStakeCredential = false) => {\n  const scriptHash = _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.deserializePlutusScript(script.code, script.version).hash().to_hex();\n  const address = _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.scriptHashToBech32(\n    scriptHash,\n    stakeCredentialHash,\n    networkId,\n    isScriptStakeCredential\n  );\n  return { address };\n};\nvar serializeAddressObj = (address, networkId = 0) => {\n  return _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.serializeAddressObj(address, networkId);\n};\nvar serializePoolId = (hash) => _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.serializePoolId(hash);\nvar serializeRewardAddress = (hash, isScriptHash = false, networkId = 0) => {\n  return isScriptHash ? _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.scriptHashToRewardAddress(hash, networkId) : _meshsdk_core_csl__WEBPACK_IMPORTED_MODULE_0__.keyHashToRewardAddress(hash, networkId);\n};\n\n// src/index.ts\n\n\n\n\n\n\n\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvY29yZS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQzBDO0FBQzFDLDJCQUEyQixrRUFBd0I7QUFDbkQseUJBQXlCLGdFQUFzQjs7QUFFL0M7QUFDQSxtQ0FBbUMsZ0VBQXNCO0FBQ3pELCtCQUErQiw4REFBb0I7QUFDbkQsZ0NBQWdDLDhEQUFvQjtBQUNwRCwwQ0FBMEMsc0VBQTRCO0FBQ3RFO0FBQ0E7QUFDQSxXQUFXLHNFQUE0QjtBQUN2QztBQUNBLFNBQVMsc0VBQTRCO0FBQ3JDO0FBQ0EsdUNBQXVDLG1FQUF5QjtBQUNoRSxzQ0FBc0Msa0VBQXdCO0FBQzlELDhDQUE4QyxzRUFBNEI7QUFDMUUsd0RBQXdELHlFQUErQjtBQUN2Rix3REFBd0QseUVBQStCO0FBQ3ZGLHlDQUF5Qyw2REFBbUI7QUFDNUQsd0NBQXdDLHVFQUE2QjtBQUNyRSwwQ0FBMEMsdUVBQTZCO0FBQ3ZFLG1DQUFtQywrREFBcUI7QUFDeEQsOEJBQThCLDhEQUFvQjs7QUFFbEQ7QUFDQSxxQ0FBcUMsdUVBQTZCO0FBQ2xFLHNDQUFzQyw2REFBbUI7QUFDekQsb0NBQW9DLG9FQUEwQjs7QUFFOUQ7QUFDQTtBQUNBLHlCQUF5Qiw0REFBa0I7QUFDM0MsVUFBVSx5QkFBeUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLHFCQUFxQixzRUFBNEI7QUFDakQsa0JBQWtCLGlFQUF1QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxTQUFTLGtFQUF3QjtBQUNqQztBQUNBLGdDQUFnQyw4REFBb0I7QUFDcEQ7QUFDQSx3QkFBd0Isd0VBQThCLG9CQUFvQixxRUFBMkI7QUFDckc7O0FBRUE7QUFDZ0M7QUFDUztBQUNQO0FBQ0c7QUFDTDtBQUM0QztBQWdDMUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvY29yZS9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9jb3JlLnRzXG5pbXBvcnQgKiBhcyBjb3JlIGZyb20gXCJAbWVzaHNkay9jb3JlLWNzbFwiO1xudmFyIGFwcGx5UGFyYW1zVG9TY3JpcHQyID0gY29yZS5hcHBseVBhcmFtc1RvU2NyaXB0O1xudmFyIGFwcGx5Q2JvckVuY29kaW5nMiA9IGNvcmUuYXBwbHlDYm9yRW5jb2Rpbmc7XG5cbi8vIHNyYy91dGlscy9yZXNvbHZlci50c1xudmFyIHJlc29sdmVQcml2YXRlS2V5ID0gKHdvcmRzKSA9PiBjb3JlLnJlc29sdmVQcml2YXRlS2V5KHdvcmRzKTtcbnZhciByZXNvbHZlVHhIYXNoID0gKHR4SGV4KSA9PiBjb3JlLmNhbGN1bGF0ZVR4SGFzaCh0eEhleCk7XG52YXIgcmVzb2x2ZURhdGFIYXNoID0gKGRhdGEpID0+IGNvcmUucmVzb2x2ZURhdGFIYXNoKGRhdGEpO1xudmFyIHJlc29sdmVOYXRpdmVTY3JpcHRIYXNoID0gKHNjcmlwdCkgPT4gY29yZS5yZXNvbHZlTmF0aXZlU2NyaXB0SGFzaChzY3JpcHQpO1xudmFyIHJlc29sdmVTY3JpcHRIYXNoID0gKHNjcmlwdENvZGUsIHZlcnNpb24pID0+IHtcbiAgaWYgKCF2ZXJzaW9uKSB7XG4gICAgcmV0dXJuIGNvcmUuZGVzZXJpYWxpemVOYXRpdmVTY3JpcHQoc2NyaXB0Q29kZSkuaGFzaCgpLnRvX2hleCgpO1xuICB9XG4gIHJldHVybiBjb3JlLmRlc2VyaWFsaXplUGx1dHVzU2NyaXB0KHNjcmlwdENvZGUsIHZlcnNpb24pLmhhc2goKS50b19oZXgoKTtcbn07XG52YXIgcmVzb2x2ZVJld2FyZEFkZHJlc3MgPSAoYmVjaDMyKSA9PiBjb3JlLnJlc29sdmVSZXdhcmRBZGRyZXNzKGJlY2gzMik7XG52YXIgcmVzb2x2ZVN0YWtlS2V5SGFzaCA9IChiZWNoMzIpID0+IGNvcmUucmVzb2x2ZVN0YWtlS2V5SGFzaChiZWNoMzIpO1xudmFyIHJlc29sdmVTY3JpcHRIYXNoRFJlcElkID0gKHNjcmlwdEhhc2gpID0+IGNvcmUucmVzb2x2ZVNjcmlwdEhhc2hEUmVwSWQoc2NyaXB0SGFzaCk7XG52YXIgcmVzb2x2ZVBsdXR1c1NjcmlwdEFkZHJlc3MgPSAoc2NyaXB0LCBuZXR3b3JrSWQpID0+IGNvcmUucmVzb2x2ZVBsdXR1c1NjcmlwdEFkZHJlc3Moc2NyaXB0LCBuZXR3b3JrSWQpO1xudmFyIHJlc29sdmVOYXRpdmVTY3JpcHRBZGRyZXNzID0gKHNjcmlwdCwgbmV0d29ya0lkKSA9PiBjb3JlLnJlc29sdmVOYXRpdmVTY3JpcHRBZGRyZXNzKHNjcmlwdCwgbmV0d29ya0lkKTtcbnZhciByZXNvbHZlTmF0aXZlU2NyaXB0SGV4ID0gKHNjcmlwdCkgPT4gY29yZS50b05hdGl2ZVNjcmlwdChzY3JpcHQpLnRvX2hleCgpO1xudmFyIHJlc29sdmVQYXltZW50S2V5SGFzaCA9IChiZWNoMzIpID0+IGNvcmUuZGVzZXJpYWxpemVCZWNoMzJBZGRyZXNzKGJlY2gzMikucHViS2V5SGFzaDtcbnZhciByZXNvbHZlUGx1dHVzU2NyaXB0SGFzaCA9IChiZWNoMzIpID0+IGNvcmUuZGVzZXJpYWxpemVCZWNoMzJBZGRyZXNzKGJlY2gzMikuc2NyaXB0SGFzaDtcbnZhciByZXNvbHZlU2NyaXB0UmVmID0gKHNjcmlwdCkgPT4gY29yZS5yZXNvbHZlU2NyaXB0UmVmKHNjcmlwdCk7XG52YXIgcmVzb2x2ZVBvb2xJZCA9IChoYXNoKSA9PiBjb3JlLnNlcmlhbGl6ZVBvb2xJZChoYXNoKTtcblxuLy8gc3JjL3V0aWxzL2Rlc2VyaWFsaXplci50c1xudmFyIGRlc2VyaWFsaXplQWRkcmVzcyA9IChiZWNoMzIpID0+IGNvcmUuZGVzZXJpYWxpemVCZWNoMzJBZGRyZXNzKGJlY2gzMik7XG52YXIgZGVzZXJpYWxpemVEYXR1bSA9IChkYXR1bUNib3IpID0+IGNvcmUucGFyc2VEYXR1bUNib3IoZGF0dW1DYm9yKTtcbnZhciBkZXNlcmlhbGl6ZVBvb2xJZCA9IChwb29sSWQpID0+IGNvcmUucmVzb2x2ZUVkMjU1MTlLZXlIYXNoKHBvb2xJZCk7XG5cbi8vIHNyYy91dGlscy9zZXJpYWxpemVyLnRzXG52YXIgc2VyaWFsaXplTmF0aXZlU2NyaXB0ID0gKHNjcmlwdCwgc3Rha2VDcmVkZW50aWFsSGFzaCwgbmV0d29ya0lkID0gMCwgaXNTY3JpcHRTdGFrZUNyZWRlbnRpYWwgPSBmYWxzZSkgPT4ge1xuICBjb25zdCBzZXJpYWxpemVyID0gbmV3IGNvcmUuQ1NMU2VyaWFsaXplcigpO1xuICBjb25zdCB7IHNjcmlwdENib3IsIHNjcmlwdEhhc2ggfSA9IHNlcmlhbGl6ZXIuZGVzZXJpYWxpemVyLnNjcmlwdC5kZXNlcmlhbGl6ZU5hdGl2ZVNjcmlwdChzY3JpcHQpO1xuICBjb25zdCBkZXNlcmlhbGl6ZWRBZGRyZXNzID0ge1xuICAgIHNjcmlwdEhhc2hcbiAgfTtcbiAgaWYgKGlzU2NyaXB0U3Rha2VDcmVkZW50aWFsKSB7XG4gICAgZGVzZXJpYWxpemVkQWRkcmVzcy5zdGFrZVNjcmlwdENyZWRlbnRpYWxIYXNoID0gc3Rha2VDcmVkZW50aWFsSGFzaDtcbiAgfSBlbHNlIHtcbiAgICBkZXNlcmlhbGl6ZWRBZGRyZXNzLnN0YWtlQ3JlZGVudGlhbEhhc2ggPSBzdGFrZUNyZWRlbnRpYWxIYXNoO1xuICB9XG4gIGNvbnN0IGFkZHJlc3MgPSBzZXJpYWxpemVyLnNlcmlhbGl6ZUFkZHJlc3MoZGVzZXJpYWxpemVkQWRkcmVzcywgbmV0d29ya0lkKTtcbiAgcmV0dXJuIHsgYWRkcmVzcywgc2NyaXB0Q2JvciB9O1xufTtcbnZhciBzZXJpYWxpemVQbHV0dXNTY3JpcHQgPSAoc2NyaXB0LCBzdGFrZUNyZWRlbnRpYWxIYXNoLCBuZXR3b3JrSWQgPSAwLCBpc1NjcmlwdFN0YWtlQ3JlZGVudGlhbCA9IGZhbHNlKSA9PiB7XG4gIGNvbnN0IHNjcmlwdEhhc2ggPSBjb3JlLmRlc2VyaWFsaXplUGx1dHVzU2NyaXB0KHNjcmlwdC5jb2RlLCBzY3JpcHQudmVyc2lvbikuaGFzaCgpLnRvX2hleCgpO1xuICBjb25zdCBhZGRyZXNzID0gY29yZS5zY3JpcHRIYXNoVG9CZWNoMzIoXG4gICAgc2NyaXB0SGFzaCxcbiAgICBzdGFrZUNyZWRlbnRpYWxIYXNoLFxuICAgIG5ldHdvcmtJZCxcbiAgICBpc1NjcmlwdFN0YWtlQ3JlZGVudGlhbFxuICApO1xuICByZXR1cm4geyBhZGRyZXNzIH07XG59O1xudmFyIHNlcmlhbGl6ZUFkZHJlc3NPYmogPSAoYWRkcmVzcywgbmV0d29ya0lkID0gMCkgPT4ge1xuICByZXR1cm4gY29yZS5zZXJpYWxpemVBZGRyZXNzT2JqKGFkZHJlc3MsIG5ldHdvcmtJZCk7XG59O1xudmFyIHNlcmlhbGl6ZVBvb2xJZCA9IChoYXNoKSA9PiBjb3JlLnNlcmlhbGl6ZVBvb2xJZChoYXNoKTtcbnZhciBzZXJpYWxpemVSZXdhcmRBZGRyZXNzID0gKGhhc2gsIGlzU2NyaXB0SGFzaCA9IGZhbHNlLCBuZXR3b3JrSWQgPSAwKSA9PiB7XG4gIHJldHVybiBpc1NjcmlwdEhhc2ggPyBjb3JlLnNjcmlwdEhhc2hUb1Jld2FyZEFkZHJlc3MoaGFzaCwgbmV0d29ya0lkKSA6IGNvcmUua2V5SGFzaFRvUmV3YXJkQWRkcmVzcyhoYXNoLCBuZXR3b3JrSWQpO1xufTtcblxuLy8gc3JjL2luZGV4LnRzXG5leHBvcnQgKiBmcm9tIFwiQG1lc2hzZGsvY29tbW9uXCI7XG5pbXBvcnQgKiBhcyBjc3QgZnJvbSBcIkBtZXNoc2RrL2NvcmUtY3N0XCI7XG5leHBvcnQgKiBmcm9tIFwiQG1lc2hzZGsvcHJvdmlkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCJAbWVzaHNkay90cmFuc2FjdGlvblwiO1xuZXhwb3J0ICogZnJvbSBcIkBtZXNoc2RrL3dhbGxldFwiO1xuaW1wb3J0IHsgY2hlY2tTaWduYXR1cmUsIHNpZ25EYXRhLCBnZW5lcmF0ZU5vbmNlIH0gZnJvbSBcIkBtZXNoc2RrL2NvcmUtY3N0XCI7XG5leHBvcnQge1xuICBhcHBseUNib3JFbmNvZGluZzIgYXMgYXBwbHlDYm9yRW5jb2RpbmcsXG4gIGFwcGx5UGFyYW1zVG9TY3JpcHQyIGFzIGFwcGx5UGFyYW1zVG9TY3JpcHQsXG4gIGNoZWNrU2lnbmF0dXJlLFxuICBjb3JlLFxuICBjc3QsXG4gIGRlc2VyaWFsaXplQWRkcmVzcyxcbiAgZGVzZXJpYWxpemVEYXR1bSxcbiAgZGVzZXJpYWxpemVQb29sSWQsXG4gIGdlbmVyYXRlTm9uY2UsXG4gIHJlc29sdmVEYXRhSGFzaCxcbiAgcmVzb2x2ZU5hdGl2ZVNjcmlwdEFkZHJlc3MsXG4gIHJlc29sdmVOYXRpdmVTY3JpcHRIYXNoLFxuICByZXNvbHZlTmF0aXZlU2NyaXB0SGV4LFxuICByZXNvbHZlUGF5bWVudEtleUhhc2gsXG4gIHJlc29sdmVQbHV0dXNTY3JpcHRBZGRyZXNzLFxuICByZXNvbHZlUGx1dHVzU2NyaXB0SGFzaCxcbiAgcmVzb2x2ZVBvb2xJZCxcbiAgcmVzb2x2ZVByaXZhdGVLZXksXG4gIHJlc29sdmVSZXdhcmRBZGRyZXNzLFxuICByZXNvbHZlU2NyaXB0SGFzaCxcbiAgcmVzb2x2ZVNjcmlwdEhhc2hEUmVwSWQsXG4gIHJlc29sdmVTY3JpcHRSZWYsXG4gIHJlc29sdmVTdGFrZUtleUhhc2gsXG4gIHJlc29sdmVUeEhhc2gsXG4gIHNlcmlhbGl6ZUFkZHJlc3NPYmosXG4gIHNlcmlhbGl6ZU5hdGl2ZVNjcmlwdCxcbiAgc2VyaWFsaXplUGx1dHVzU2NyaXB0LFxuICBzZXJpYWxpemVQb29sSWQsXG4gIHNlcmlhbGl6ZVJld2FyZEFkZHJlc3MsXG4gIHNpZ25EYXRhXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/core/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@meshsdk/provider/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BeginProvider: () => (/* binding */ BeginProvider),\n/* harmony export */   BlockfrostProvider: () => (/* binding */ BlockfrostProvider),\n/* harmony export */   HydraProvider: () => (/* binding */ HydraProvider),\n/* harmony export */   KoiosProvider: () => (/* binding */ KoiosProvider),\n/* harmony export */   MaestroProvider: () => (/* binding */ MaestroProvider),\n/* harmony export */   OfflineFetcher: () => (/* binding */ OfflineFetcher),\n/* harmony export */   OgmiosProvider: () => (/* binding */ OgmiosProvider),\n/* harmony export */   U5CProvider: () => (/* binding */ U5CProvider),\n/* harmony export */   YaciProvider: () => (/* binding */ YaciProvider)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/axios.js\");\n/* harmony import */ var _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meshsdk/common */ \"./node_modules/@meshsdk/common/dist/index.js\");\n/* harmony import */ var _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @meshsdk/core-cst */ \"./node_modules/@meshsdk/core-cst/dist/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! events */ \"./node_modules/next/dist/compiled/events/events.js\");\n/* harmony import */ var _utxorpc_sdk__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @utxorpc/sdk */ \"./node_modules/@utxorpc/sdk/lib/browser/index.mjs\");\n/* harmony import */ var _utxorpc_spec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @utxorpc/spec */ \"./node_modules/@utxorpc/spec/lib/index.mjs\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n// src/begin.ts\n\n\n// src/utils/parse-http-error.ts\n\nvar parseHttpError = (error) => {\n  if (axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isAxiosError(error)) {\n    if (error.response) {\n      return JSON.stringify({\n        data: error.response.data,\n        headers: error.response.headers,\n        status: error.response.status\n      });\n    } else if (error.request && !(error.request instanceof XMLHttpRequest)) {\n      return JSON.stringify(error.request);\n    } else {\n      return JSON.stringify({ code: error.code, message: error.message });\n    }\n  } else {\n    return JSON.stringify(error);\n  }\n};\n\n// src/begin.ts\nvar BeginProvider = class {\n  apikey;\n  chainNumber = 1815;\n  domainUrl = \".bgin.id\";\n  /**\n   * Creates a new instance of the BeginProvider.\n   * @param apikey The API key for querying Begin ID.\n   */\n  constructor(apikey) {\n    this.apikey = apikey ?? \"31cab9edcc1c530e29924a56167d4ed17d50b7fds\";\n  }\n  /**\n   * Given a Begin ID, resolves the address and other information.\n   * @param name name of Begin ID, e.g. `mesh`\n   * @param url optional URL to override the default: https://resolveidaddress-ylo5dtxzdq-uc.a.run.app\n   * @returns\n   * - name: string\n   * - domain: string\n   * - image: string\n   * - address: string\n   */\n  async resolveAddress(name, url) {\n    try {\n      const axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL: url ?? \"https://resolveidaddress-ylo5dtxzdq-uc.a.run.app\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: this.apikey\n        }\n      });\n      const { data, status } = await axiosInstance.post(``, {\n        name: name.replace(\"@\", \"\").replace(/(\\.bgin\\.id|\\.beginid\\.io|\\.bgn\\.is)$/, \"\"),\n        chain: this.chainNumber\n      });\n      if (status === 200) {\n        const result = data.result;\n        return {\n          name: result.name,\n          domain: `${\"\".concat(result.name, this.domainUrl)}`,\n          image: result.image,\n          address: result.addresses[this.chainNumber]\n        };\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Given an address, resolves the Begin ID and other information.\n   * @param address address to resolve\n   * @param url optional URL to override the default: https://resolveIdReserveAddress-ylo5dtxzdq-uc.a.run.app\n   * @returns\n   * - name: string\n   * - domain: string\n   * - image: string\n   * - address: string\n   */\n  async resolveAdressReverse(address, url) {\n    try {\n      const axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL: url ?? \"https://resolveIdReserveAddress-ylo5dtxzdq-uc.a.run.app\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: this.apikey\n        }\n      });\n      const { data, status } = await axiosInstance.post(``, {\n        address,\n        chain: this.chainNumber\n      });\n      if (status === 200) {\n        const result = data.result;\n        return {\n          name: result.name,\n          domain: `${\"\".concat(result.name, this.domainUrl)}`,\n          image: result.image,\n          address: result.addresses[this.chainNumber]\n        };\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n};\n\n// src/blockfrost.ts\n\n\n\n\n// src/common/utxos-to-assets.ts\nfunction utxosToAssets(utxos) {\n  const _balance = utxos.map((utxo) => {\n    return utxo.output.amount;\n  }).reduce(\n    (acc, amount) => {\n      for (const asset of amount) {\n        if (asset) {\n          if (acc[asset.unit] == void 0) {\n            acc[asset.unit] = 0;\n          }\n          if (asset.unit in acc) {\n            acc[asset.unit] += parseFloat(asset.quantity);\n          }\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return Object.fromEntries(\n    Object.entries(_balance).map(([key, value]) => [key, value.toString()])\n  );\n}\n\n// src/utils/parse-asset-unit.ts\n\nvar parseAssetUnit = (unit) => {\n  const policyId = unit.slice(0, _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.POLICY_ID_LENGTH);\n  const assetName = unit.includes(\".\") ? (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(unit.split(\".\")[1] || \"\") : unit.slice(_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.POLICY_ID_LENGTH);\n  return { policyId, assetName };\n};\n\n// src/blockfrost.ts\nvar BlockfrostProvider = class {\n  _axiosInstance;\n  _network;\n  submitTxToBytes = true;\n  constructor(...args) {\n    if (typeof args[0] === \"string\" && (args[0].startsWith(\"http\") || args[0].startsWith(\"/\"))) {\n      this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({ baseURL: args[0] });\n      this._network = \"mainnet\";\n    } else {\n      const projectId = args[0];\n      const network = projectId.slice(0, 7);\n      this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL: `https://cardano-${network}.blockfrost.io/api/v${args[1] ?? 0}`,\n        headers: { project_id: projectId }\n      });\n      this._network = network;\n    }\n  }\n  setSubmitTxToBytes(value) {\n    this.submitTxToBytes = value;\n  }\n  /**\n   * Evaluates the resources required to execute the transaction\n   * @param tx - The transaction to evaluate\n   */\n  async evaluateTx(cbor) {\n    try {\n      const headers = { \"Content-Type\": \"application/cbor\" };\n      const { status, data } = await this._axiosInstance.post(\n        \"utils/txs/evaluate\",\n        cbor,\n        {\n          headers\n        }\n      );\n      if (status === 200 && data.result.EvaluationResult) {\n        const tagMap = {\n          spend: \"SPEND\",\n          mint: \"MINT\",\n          certificate: \"CERT\",\n          withdrawal: \"REWARD\"\n        };\n        const result = [];\n        Object.keys(data.result.EvaluationResult).forEach((key) => {\n          const [tagKey, index] = key.split(\":\");\n          const { memory, steps } = data.result.EvaluationResult[key];\n          result.push({\n            tag: tagMap[tagKey],\n            index: Number(index),\n            budget: { mem: memory, steps }\n          });\n        });\n        return result;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Obtain information about a specific stake account.\n   * @param address - Wallet address to fetch account information\n   */\n  async fetchAccountInfo(address) {\n    const rewardAddress = address.startsWith(\"addr\") ? (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.resolveRewardAddress)(address) : address;\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `accounts/${rewardAddress}`\n      );\n      if (status === 200 || status == 202)\n        return {\n          poolId: data.pool_id,\n          active: data.active || data.active_epoch !== null,\n          balance: data.controlled_amount,\n          rewards: data.withdrawable_amount,\n          withdrawals: data.withdrawals_sum\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Fetches the assets for a given address.\n   * @param address - The address to fetch assets for\n   * @returns A map of asset unit to quantity\n   */\n  async fetchAddressAssets(address) {\n    const utxos = await this.fetchAddressUTxOs(address);\n    return utxosToAssets(utxos);\n  }\n  /**\n   * Transactions for an address.\n   * @param address\n   * @returns - partial TransactionInfo\n   */\n  async fetchAddressTransactions(address) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `/addresses/${address}/transactions`\n      );\n      if (status === 200 || status == 202) {\n        return data.map((tx) => {\n          return {\n            hash: tx.tx_hash,\n            index: tx.tx_index,\n            block: \"\",\n            slot: \"\",\n            fees: \"\",\n            size: 0,\n            deposit: \"\",\n            invalidBefore: \"\",\n            invalidAfter: \"\"\n          };\n        });\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * UTXOs of the address.\n   * @param address - The address to fetch UTXO\n   * @param asset - UTXOs of a given asset​\n   * @returns - Array of UTxOs\n   */\n  async fetchAddressUTxOs(address, asset) {\n    const filter = asset !== void 0 ? `/${asset}` : \"\";\n    const url = `addresses/${address}/utxos` + filter;\n    const paginateUTxOs = async (page = 1, utxos = []) => {\n      const { data, status } = await this._axiosInstance.get(\n        `${url}?page=${page}`\n      );\n      if (status === 200 || status == 202)\n        return data.length > 0 ? paginateUTxOs(page + 1, [\n          ...utxos,\n          ...await Promise.all(\n            data.map(\n              (utxo) => this.toUTxO(utxo, utxo.tx_hash)\n            )\n          )\n        ]) : utxos;\n      throw parseHttpError(data);\n    };\n    try {\n      return await paginateUTxOs();\n    } catch (error) {\n      return [];\n    }\n  }\n  /**\n   * Fetches the asset addresses for a given asset.\n   * @param asset - The asset to fetch addresses for\n   */\n  async fetchAssetAddresses(asset) {\n    const paginateAddresses = async (page = 1, addresses = []) => {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}/addresses?page=${page}`\n      );\n      if (status === 200 || status == 202)\n        return data.length > 0 ? paginateAddresses(page + 1, [...addresses, ...data]) : addresses;\n      throw parseHttpError(data);\n    };\n    try {\n      return await paginateAddresses();\n    } catch (error) {\n      return [];\n    }\n  }\n  /**\n   * Fetches the metadata for a given asset.\n   * @param asset - The asset to fetch metadata for\n   * @returns The metadata for the asset\n   */\n  async fetchAssetMetadata(asset) {\n    try {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}`\n      );\n      if (status === 200 || status == 202)\n        return {\n          ...data.onchain_metadata,\n          fingerprint: data.fingerprint,\n          totalSupply: data.quantity,\n          mintingTxHash: data.initial_mint_tx_hash,\n          // todo: request for `initial_mint_tx_hash`\n          mintCount: data.mint_or_burn_count\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Fetches the metadata for a given asset.\n   * @param asset - The asset to fetch metadata for\n   * @returns The metadata for the asset\n   */\n  async fetchLatestBlock() {\n    try {\n      const { data, status } = await this._axiosInstance.get(`blocks/latest`);\n      if (status === 200 || status == 202)\n        return {\n          confirmations: data.confirmations,\n          epoch: data.epoch,\n          epochSlot: data.epoch_slot.toString(),\n          fees: data.fees,\n          hash: data.hash,\n          nextBlock: data.next_block ?? \"\",\n          operationalCertificate: data.op_cert,\n          output: data.output ?? \"0\",\n          previousBlock: data.previous_block,\n          size: data.size,\n          slot: data.slot.toString(),\n          slotLeader: data.slot_leader ?? \"\",\n          time: data.time,\n          txCount: data.tx_count,\n          VRFKey: data.block_vrf\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchBlockInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.get(`blocks/${hash}`);\n      if (status === 200 || status == 202)\n        return {\n          confirmations: data.confirmations,\n          epoch: data.epoch,\n          epochSlot: data.epoch_slot.toString(),\n          fees: data.fees,\n          hash: data.hash,\n          nextBlock: data.next_block ?? \"\",\n          operationalCertificate: data.op_cert,\n          output: data.output ?? \"0\",\n          previousBlock: data.previous_block,\n          size: data.size,\n          slot: data.slot.toString(),\n          slotLeader: data.slot_leader ?? \"\",\n          time: data.time,\n          txCount: data.tx_count,\n          VRFKey: data.block_vrf\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchCollectionAssets(policyId, cursor = 1) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `assets/policy/${policyId}?page=${cursor}`\n      );\n      if (status === 200 || status == 202)\n        return {\n          assets: data.map((asset) => ({\n            unit: asset.asset,\n            quantity: asset.quantity\n          })),\n          next: data.length === 100 ? cursor + 1 : null\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      return { assets: [], next: null };\n    }\n  }\n  async fetchHandle(handle) {\n    if (this._network !== \"mainnet\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(`${handle.replace(\"$\", \"\")}`);\n      const asset = await this.fetchAssetMetadata(\n        `${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}000de140${assetName}`\n      );\n      return asset;\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchHandleAddress(handle) {\n    if (this._network !== \"mainnet\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(handle.replace(\"$\", \"\"));\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}${assetName}/addresses`\n      );\n      if (status === 200 || status == 202) return data[0].address;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchProtocolParameters(epoch = Number.NaN) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `epochs/${isNaN(epoch) ? \"latest\" : epoch}/parameters`\n      );\n      if (status === 200 || status == 202)\n        return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n          coinsPerUtxoSize: data.coins_per_utxo_word,\n          collateralPercent: data.collateral_percent,\n          decentralisation: data.decentralisation_param,\n          epoch: data.epoch,\n          keyDeposit: data.key_deposit,\n          maxBlockExMem: data.max_block_ex_mem,\n          maxBlockExSteps: data.max_block_ex_steps,\n          maxBlockHeaderSize: data.max_block_header_size,\n          maxBlockSize: data.max_block_size,\n          maxCollateralInputs: data.max_collateral_inputs,\n          maxTxExMem: data.max_tx_ex_mem,\n          maxTxExSteps: data.max_tx_ex_steps,\n          maxTxSize: data.max_tx_size,\n          maxValSize: data.max_val_size,\n          minFeeA: data.min_fee_a,\n          minFeeB: data.min_fee_b,\n          minPoolCost: data.min_pool_cost,\n          poolDeposit: data.pool_deposit,\n          priceMem: data.price_mem,\n          priceStep: data.price_step\n        });\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchTxInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.get(`txs/${hash}`);\n      if (status === 200 || status == 202)\n        return {\n          block: data.block,\n          deposit: data.deposit,\n          fees: data.fees,\n          hash: data.hash,\n          index: data.index,\n          invalidAfter: data.invalid_hereafter ?? \"\",\n          invalidBefore: data.invalid_before ?? \"\",\n          slot: data.slot.toString(),\n          size: data.size\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchUTxOs(hash, index) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `txs/${hash}/utxos`\n      );\n      if (status === 200 || status == 202) {\n        const bfOutputs = data.outputs;\n        const outputsPromises = [];\n        bfOutputs.forEach((output) => {\n          outputsPromises.push(this.toUTxO(output, hash));\n        });\n        const outputs = await Promise.all(outputsPromises);\n        if (index !== void 0) {\n          return outputs.filter((utxo) => utxo.input.outputIndex === index);\n        }\n        return outputs;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * A generic method to fetch data from a URL.\n   * @param url - The URL to fetch data from\n   * @returns - The data fetched from the URL\n   */\n  async get(url) {\n    try {\n      const { data, status } = await this._axiosInstance.get(url);\n      if (status === 200 || status == 202) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * A generic method to post data to a URL.\n   * @param url - The URL to fetch data from\n   * @param body - Payload\n   * @param headers - Specify headers, default: { \"Content-Type\": \"application/json\" }\n   * @returns - Data\n   */\n  async post(url, body, headers = { \"Content-Type\": \"application/json\" }) {\n    try {\n      const { data, status } = await this._axiosInstance.post(url, body, {\n        headers\n      });\n      if (status === 200 || status == 202) return data;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Allow you to listen to a transaction confirmation. Upon confirmation, the callback will be called.\n   * @param txHash - The transaction hash to listen for confirmation\n   * @param callback - The callback function to call when the transaction is confirmed\n   * @param limit - The number of blocks to wait for confirmation\n   */\n  onTxConfirmed(txHash, callback, limit = 100) {\n    let attempts = 0;\n    const checkTx = setInterval(() => {\n      if (attempts >= limit) clearInterval(checkTx);\n      this.fetchTxInfo(txHash).then((txInfo) => {\n        this.fetchBlockInfo(txInfo.block).then((blockInfo) => {\n          if (blockInfo?.confirmations > 0) {\n            clearInterval(checkTx);\n            callback();\n          }\n        }).catch(() => {\n          attempts += 1;\n        });\n      }).catch(() => {\n        attempts += 1;\n      });\n    }, 5e3);\n  }\n  /**\n   * Submit a serialized transaction to the network.\n   * @param tx - The serialized transaction in hex to submit\n   * @returns The transaction hash of the submitted transaction\n   */\n  async submitTx(tx) {\n    try {\n      const headers = { \"Content-Type\": \"application/cbor\" };\n      const { data, status } = await this._axiosInstance.post(\n        \"tx/submit\",\n        this.submitTxToBytes ? (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toBytes)(tx) : tx,\n        { headers }\n      );\n      if (status === 200 || status == 202) return data;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  resolveScriptRef = async (scriptHash) => {\n    if (scriptHash) {\n      const { data, status } = await this._axiosInstance.get(\n        `scripts/${scriptHash}`\n      );\n      if (status === 200 || status == 202) {\n        let script;\n        if (data.type.startsWith(\"plutus\")) {\n          const plutusScript = await this.fetchPlutusScriptCBOR(scriptHash);\n          const normalized = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.normalizePlutusScript)(plutusScript, \"DoubleCBOR\");\n          script = {\n            version: data.type.replace(\"plutus\", \"\"),\n            code: normalized\n          };\n        } else {\n          script = await this.fetchNativeScriptJSON(scriptHash);\n        }\n        return (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.toScriptRef)(script).toCbor().toString();\n      }\n      throw parseHttpError(data);\n    }\n    return void 0;\n  };\n  toUTxO = async (bfUTxO, tx_hash) => ({\n    input: {\n      outputIndex: bfUTxO.output_index,\n      txHash: tx_hash\n    },\n    output: {\n      address: bfUTxO.address,\n      amount: bfUTxO.amount,\n      dataHash: bfUTxO.data_hash ?? void 0,\n      plutusData: bfUTxO.inline_datum ?? void 0,\n      scriptRef: bfUTxO.reference_script_hash ? await this.resolveScriptRef(bfUTxO.reference_script_hash) : void 0,\n      scriptHash: bfUTxO.reference_script_hash\n    }\n  });\n  async fetchPlutusScriptCBOR(scriptHash) {\n    const { data, status } = await this._axiosInstance.get(\n      `scripts/${scriptHash}/cbor`\n    );\n    if (status === 200 || status == 202) return data.cbor;\n    throw parseHttpError(data);\n  }\n  async fetchNativeScriptJSON(scriptHash) {\n    const { data, status } = await this._axiosInstance.get(\n      `scripts/${scriptHash}/json`\n    );\n    if (status === 200 || status == 202) return data.json;\n    throw parseHttpError(data);\n  }\n};\n\n// src/hydra.ts\n\n\n\n\nvar HydraProvider = class {\n  _baseUrl;\n  _eventEmitter;\n  _client;\n  _axiosInstance;\n  constructor(url) {\n    this._baseUrl = url;\n    this._eventEmitter = new events__WEBPACK_IMPORTED_MODULE_3__.EventEmitter();\n    this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({ baseURL: url });\n  }\n  /**\n   * Submit a transaction to the Hydra node. Note, unlike other providers, Hydra does not return a transaction hash.\n   * @param tx - The transaction in CBOR hex format\n   */\n  async submitTx(tx) {\n    try {\n      const payload = {\n        tag: \"NewTx\",\n        transaction: {\n          type: \"Witnessed Tx ConwayEra\",\n          description: \"Ledger Cddl Format\",\n          cborHex: tx\n        }\n      };\n      this.check();\n      this.sendCommand(payload);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async connect() {\n    const _client = new WebSocket(this._baseUrl);\n    await new Promise((resolve) => {\n      _client.addEventListener(\"open\", () => resolve(true), { once: true });\n    });\n    _client.onopen = () => {\n      console.log(\"Connected to Hydra\");\n    };\n    _client.onerror = (error) => {\n      console.error(\"Error on Hydra websocket: \", error);\n    };\n    _client.onclose = () => {\n      console.error(\"Hydra websocket closed\");\n    };\n    _client.onmessage = this.receiveMessage.bind(this);\n    this._client = _client;\n  }\n  check() {\n    if (this._client === void 0) {\n      throw new Error(\"HydraProvider not connected. Do connect() first.\");\n    }\n  }\n  /**\n   * Initializes a new Head. This command is a no-op when a Head is already open and the server will output an CommandFailed message should this happen.\n   */\n  async initializesHead() {\n    this.check();\n    this.sendCommand({ tag: \"Init\" });\n  }\n  async fetchUtxoSnapshot() {\n    const { data, status } = await this._axiosInstance.get(`snapshot/utxo`);\n    if (status === 200) {\n      console.log(\"UTXOs: \", data);\n      const utxos = [];\n      for (const [key, value] of Object.entries(data)) {\n        const utxo = this.toUTxO(value, key);\n        utxos.push(utxo);\n      }\n      return utxos;\n    }\n    throw parseHttpError(data);\n  }\n  async fetchAddressUTxOs(address) {\n    const utxos = await this.fetchUtxoSnapshot();\n    return utxos.filter((utxo) => utxo.output.address === address);\n  }\n  async fetchProtocolParameters() {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        \"protocol-parameters\"\n      );\n      if (status === 200)\n        return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n          coinsPerUtxoSize: data.utxoCostPerByte,\n          collateralPercent: data.collateralPercentage,\n          maxBlockExMem: data.maxBlockExecutionUnits.memory,\n          maxBlockExSteps: data.maxBlockExecutionUnits.steps,\n          maxBlockHeaderSize: data.maxBlockHeaderSize,\n          maxBlockSize: data.maxBlockBodySize,\n          maxCollateralInputs: data.maxCollateralInputs,\n          maxTxExMem: data.maxTxExecutionUnits.memory,\n          maxTxExSteps: data.maxTxExecutionUnits.steps,\n          maxTxSize: data.maxTxSize,\n          maxValSize: data.maxValueSize,\n          minFeeA: data.txFeePerByte,\n          minFeeB: data.txFeeFixed,\n          minPoolCost: data.minPoolCost,\n          poolDeposit: data.stakePoolDeposit,\n          priceMem: data.executionUnitPrices.priceMemory,\n          priceStep: data.executionUnitPrices.priceSteps\n        });\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  // fetchAccountInfo(address: string): Promise<AccountInfo> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchAssetAddresses(\n  //   asset: string,\n  // ): Promise<{ address: string; quantity: string }[]> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchAssetMetadata(asset: string): Promise<AssetMetadata> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchBlockInfo(hash: string): Promise<BlockInfo> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchCollectionAssets(\n  //   policyId: string,\n  //   cursor?: number | string,\n  // ): Promise<{ assets: Asset[]; next?: string | number | null }> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchHandle(handle: string): Promise<object> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchHandleAddress(handle: string): Promise<string> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchTxInfo(hash: string): Promise<TransactionInfo> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fetchUTxOs(hash: string): Promise<UTxO[]> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // get(url: string): Promise<any> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  async receiveMessage(message) {\n    const data = JSON.parse(message.data);\n    this._eventEmitter.emit(\"hydraMessage\", data);\n  }\n  onMessage(callback) {\n    this._eventEmitter.on(\"hydraMessage\", callback);\n  }\n  sendCommand(data) {\n    this._client.send(JSON.stringify(data));\n  }\n  toUTxO = (hUTxO, txId) => {\n    const [txHash, txIndex] = txId.split(\"#\");\n    return {\n      input: {\n        outputIndex: Number(txIndex),\n        txHash\n      },\n      output: {\n        address: hUTxO.address,\n        amount: this.toAssets(hUTxO.value),\n        dataHash: hUTxO.datumhash ?? void 0,\n        plutusData: hUTxO.inlineDatum?.toString() ?? void 0,\n        // TODO: cast to correct cbor\n        scriptHash: hUTxO.referenceScript?.toString() ?? void 0\n        // TODO: cast to correct cbor\n      }\n    };\n  };\n  toAssets = (hAssets) => {\n    const assets = [];\n    for (const [policy, amount] of Object.entries(hAssets)) {\n      assets.push({\n        unit: policy,\n        quantity: amount.toString()\n      });\n    }\n    return assets;\n  };\n};\n\n// src/koios.ts\n\n\n\nvar KoiosProvider = class {\n  _axiosInstance;\n  _network;\n  constructor(...args) {\n    if (typeof args[0] === \"string\" && args[0].startsWith(\"http\")) {\n      this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL: args[0],\n        headers: {\n          Authorization: `Bearer ${args[1]}`\n        }\n      });\n      this._network = \"api\";\n    } else {\n      let version = 1;\n      if (typeof args[2] === \"number\") {\n        version = args[2];\n      }\n      const config = {\n        baseURL: `https://${args[0]}.koios.rest/api/v${version}`\n      };\n      this._network = args[0];\n      if (typeof args[1] === \"string\") {\n        config.headers = {\n          Authorization: `Bearer ${args[1]}`\n        };\n      }\n      this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(config);\n    }\n  }\n  async fetchAccountInfo(address) {\n    try {\n      const rewardAddress = address.startsWith(\"addr\") ? (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.resolveRewardAddress)(address) : address;\n      const { data, status } = await this._axiosInstance.post(\"account_info\", {\n        _stake_addresses: [rewardAddress]\n      });\n      if (status === 200)\n        return {\n          poolId: data[0].delegated_pool,\n          active: data[0].status === \"registered\",\n          balance: data[0].total_balance.toString(),\n          rewards: data[0].rewards_available,\n          withdrawals: data[0].withdrawals\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchAddressAssets(address) {\n    const utxos = await this.fetchAddressUTxOs(address);\n    return utxosToAssets(utxos);\n  }\n  /**\n   * Transactions for an address.\n   * @param address\n   * @returns - partial TransactionInfo\n   */\n  async fetchAddressTransactions(address) {\n    try {\n      const { data, status } = await this._axiosInstance.post(`/address_txs`, {\n        _addresses: [address]\n      });\n      if (status === 200 || status == 202) {\n        return data.map((tx) => {\n          return {\n            hash: tx.tx_hash,\n            index: 0,\n            block: \"\",\n            slot: \"\",\n            fees: \"\",\n            size: 0,\n            deposit: \"\",\n            invalidBefore: \"\",\n            invalidAfter: \"\"\n          };\n        });\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchAddressUTxOs(address, asset) {\n    try {\n      const { data, status } = await this._axiosInstance.post(\"address_info\", {\n        _addresses: [address]\n      });\n      if (status === 200) {\n        const utxos = data.flatMap((info) => info.utxo_set).map((utxo) => this.toUTxO(utxo, address));\n        return asset !== void 0 ? utxos.filter(\n          (utxo) => utxo.output.amount.find((a) => a.unit === asset) !== void 0\n        ) : utxos;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      return [];\n    }\n  }\n  async fetchAssetAddresses(asset) {\n    try {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `asset_addresses?_asset_policy=${policyId}&_asset_name=${assetName}`\n      );\n      if (status === 200)\n        return data.map(\n          (item) => ({\n            address: item.payment_address,\n            quantity: item.quantity\n          })\n        );\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchAssetMetadata(asset) {\n    try {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `asset_info?_asset_policy=${policyId}&_asset_name=${assetName}`\n      );\n      if (status === 200)\n        return {\n          ...data[0].minting_tx_metadata[721][policyId][(0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toUTF8)(assetName)],\n          fingerprint: data[0].fingerprint,\n          totalSupply: data[0].total_supply,\n          mintingTxHash: data[0].minting_tx_hash,\n          mintCount: data[0].mint_cnt\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchBlockInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.post(\"block_info\", {\n        _block_hashes: [hash]\n      });\n      if (status === 200)\n        return {\n          confirmations: data[0].num_confirmations,\n          epoch: data[0].epoch_no,\n          epochSlot: data[0].epoch_slot.toString(),\n          fees: data[0].total_fees ?? \"\",\n          hash: data[0].hash,\n          nextBlock: data[0].child_hash ?? \"\",\n          operationalCertificate: data[0].op_cert,\n          output: data[0].total_output ?? \"0\",\n          previousBlock: data[0].parent_hash,\n          size: data[0].block_size,\n          slot: data[0].abs_slot.toString(),\n          slotLeader: data[0].pool ?? \"\",\n          time: data[0].block_time,\n          txCount: data[0].tx_count,\n          VRFKey: data[0].vrf_key\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchCollectionAssets(policyId) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `policy_asset_info?_asset_policy=${policyId}`\n      );\n      if (status === 200)\n        return {\n          assets: data.map((asset) => ({\n            unit: `${asset.policy_id}${asset.asset_name}`,\n            quantity: asset.total_supply\n          }))\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchHandle(handle) {\n    if (this._network !== \"api\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(`${handle.replace(\"$\", \"\")}`);\n      const asset = await this.fetchAssetMetadata(\n        `${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}000de140${assetName}`\n      );\n      return asset;\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchHandleAddress(handle) {\n    if (this._network !== \"api\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(handle.replace(\"$\", \"\"));\n      const { data, status } = await this._axiosInstance.get(\n        `asset_addresses?_asset_policy=${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}&_asset_name=${assetName}`\n      );\n      if (status === 200) return data[0].payment_address;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchProtocolParameters(epoch = Number.NaN) {\n    try {\n      if (isNaN(epoch)) {\n        const { data: data2 } = await this._axiosInstance.get(`tip`);\n        epoch = data2[0].epoch_no;\n      }\n      const { data, status } = await this._axiosInstance.get(\n        `epoch_params?_epoch_no=${epoch}`\n      );\n      if (status === 200)\n        return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n          coinsPerUtxoSize: data[0].coins_per_utxo_size,\n          collateralPercent: data[0].collateral_percent,\n          decentralisation: data[0].decentralisation,\n          epoch: data[0].epoch_no,\n          keyDeposit: data[0].key_deposit,\n          maxBlockExMem: data[0].max_block_ex_mem.toString(),\n          maxBlockExSteps: data[0].max_block_ex_steps.toString(),\n          maxBlockHeaderSize: data[0].max_bh_size,\n          maxBlockSize: data[0].max_block_size,\n          maxCollateralInputs: data[0].max_collateral_inputs,\n          maxTxExMem: data[0].max_tx_ex_mem.toString(),\n          maxTxExSteps: data[0].max_tx_ex_steps.toString(),\n          maxTxSize: data[0].max_tx_size,\n          maxValSize: data[0].max_val_size,\n          minFeeA: data[0].min_fee_a,\n          minFeeB: data[0].min_fee_b,\n          minPoolCost: data[0].min_pool_cost,\n          poolDeposit: data[0].pool_deposit,\n          priceMem: data[0].price_mem,\n          priceStep: data[0].price_step\n        });\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchTxInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.post(\"tx_info\", {\n        _tx_hashes: [hash]\n      });\n      if (status === 200 && data.length == 1)\n        return {\n          block: data[0].block_hash,\n          deposit: data[0].deposit,\n          fees: data[0].fee,\n          hash: data[0].tx_hash,\n          index: data[0].tx_block_index,\n          invalidAfter: data[0].invalid_after?.toString() ?? \"\",\n          invalidBefore: data[0].invalid_before?.toString() ?? \"\",\n          slot: data[0].absolute_slot.toString(),\n          size: data[0].tx_size\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchUTxOs(hash, index) {\n    try {\n      const { data, status } = await this._axiosInstance.post(\"tx_info\", {\n        _tx_hashes: [hash]\n      });\n      if (status === 200) {\n        const utxos = data[0].outputs.map(\n          (utxo) => this.toUTxO(utxo, \"undefined\")\n        );\n        if (index !== void 0) {\n          return utxos.filter((utxo) => utxo.input.outputIndex === index);\n        }\n        return utxos;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * A generic method to fetch data from a URL.\n   * @param url - The URL to fetch data from\n   * @returns - The data fetched from the URL\n   */\n  async get(url) {\n    try {\n      const { data, status } = await this._axiosInstance.get(url);\n      if (status === 200 || status == 202) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * A generic method to post data to a URL.\n   * @param url - The URL to fetch data from\n   * @param body - Payload\n   * @param headers - Specify headers, default: { \"Content-Type\": \"application/json\" }\n   * @returns - Data\n   */\n  async post(url, body, headers = { \"Content-Type\": \"application/json\" }) {\n    try {\n      const { data, status } = await this._axiosInstance.post(url, body, {\n        headers\n      });\n      if (status === 200 || status == 202) return data;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  onTxConfirmed(txHash, callback, limit = 100) {\n    let attempts = 0;\n    const checkTx = setInterval(() => {\n      if (attempts >= limit) clearInterval(checkTx);\n      this.fetchTxInfo(txHash).then((txInfo) => {\n        this.fetchBlockInfo(txInfo.block).then((blockInfo) => {\n          if (blockInfo?.confirmations > 0) {\n            clearInterval(checkTx);\n            callback();\n          }\n        }).catch(() => {\n          attempts += 1;\n        });\n      }).catch(() => {\n        attempts += 1;\n      });\n    }, 5e3);\n  }\n  async submitTx(tx) {\n    try {\n      const headers = { \"Content-Type\": \"application/cbor\" };\n      const { data, status } = await this._axiosInstance.post(\n        \"submittx\",\n        (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toBytes)(tx),\n        { headers }\n      );\n      if (status === 202) return data;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  toUTxO(utxo, address) {\n    return {\n      input: {\n        outputIndex: utxo.tx_index,\n        txHash: utxo.tx_hash\n      },\n      output: {\n        address,\n        amount: [\n          { unit: \"lovelace\", quantity: utxo.value },\n          ...utxo.asset_list.map(\n            (a) => ({\n              unit: `${a.policy_id}${a.asset_name}`,\n              quantity: `${a.quantity}`\n            })\n          )\n        ],\n        dataHash: utxo.datum_hash ?? void 0,\n        plutusData: utxo.inline_datum?.bytes ?? void 0,\n        scriptRef: this.resolveScriptRef(utxo.reference_script),\n        scriptHash: utxo.reference_script?.hash ?? void 0\n      }\n    };\n  }\n  resolveScriptRef = (kScriptRef) => {\n    if (kScriptRef) {\n      let script;\n      if (kScriptRef.type.startsWith(\"plutus\")) {\n        const normalized = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.normalizePlutusScript)(kScriptRef.bytes, \"DoubleCBOR\");\n        script = {\n          code: normalized,\n          version: kScriptRef.type.replace(\"plutus\", \"\")\n        };\n      } else {\n        script = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.fromNativeScript)((0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.deserializeNativeScript)(kScriptRef.bytes));\n      }\n      if (script) return (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.toScriptRef)(script).toCbor().toString();\n    }\n    return void 0;\n  };\n};\n\n// src/maestro.ts\n\n\n\nvar MaestroProvider = class {\n  _axiosInstance;\n  _amountsAsStrings = {\n    headers: {\n      \"amounts-as-strings\": \"true\"\n    }\n  };\n  _network;\n  submitUrl;\n  constructor({ network, apiKey, turboSubmit = false }) {\n    this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n      baseURL: `https://${network}.gomaestro-api.org/v1`,\n      headers: { \"api-key\": apiKey }\n    });\n    this.submitUrl = turboSubmit ? \"txmanager/turbosubmit\" : \"txmanager\";\n    this._network = network;\n  }\n  async evaluateTx(cbor) {\n    try {\n      const { data, status } = await this._axiosInstance.post(\n        \"transactions/evaluate\",\n        { cbor }\n      );\n      if (status === 200) {\n        const tagMap = {\n          spend: \"SPEND\",\n          mint: \"MINT\",\n          cert: \"CERT\",\n          wdrl: \"REWARD\"\n        };\n        const result = data.map((action) => {\n          const budget = action.ex_units;\n          const index = action.redeemer_index;\n          const tag = tagMap[action.redeemer_tag];\n          return { budget, index, tag };\n        });\n        return result;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchAccountInfo(address) {\n    const rewardAddress = address.startsWith(\"addr\") ? (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.resolveRewardAddress)(address) : address;\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `accounts/${rewardAddress}`,\n        this._amountsAsStrings\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        return {\n          poolId: data.delegated_pool,\n          active: data.registered,\n          balance: data.total_balance,\n          rewards: data.rewards_available,\n          withdrawals: data.total_withdrawn\n        };\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchAddressAssets(address) {\n    const utxos = await this.fetchAddressUTxOs(address);\n    return utxosToAssets(utxos);\n  }\n  async fetchAddressUTxOs(address, asset) {\n    const queryPredicate = (() => {\n      if (address.startsWith(\"addr_vkh\") || address.startsWith(\"addr_shared_vkh\"))\n        return `addresses/cred/${address}`;\n      else return `addresses/${address}`;\n    })();\n    const appendAssetString = asset ? `&asset=${asset}` : \"\";\n    const paginateUTxOs = async (cursor = null, utxos = []) => {\n      const appendCursorString = cursor === null ? \"\" : `&cursor=${cursor}`;\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `${queryPredicate}/utxos?count=100${appendAssetString}${appendCursorString}`,\n        this._amountsAsStrings\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        const pageUTxOs = data.map(this.toUTxO);\n        const addedUtxos = [...utxos, ...pageUTxOs];\n        const nextCursor = timestampedData.next_cursor;\n        return nextCursor == null ? addedUtxos : paginateUTxOs(nextCursor, addedUtxos);\n      }\n      throw parseHttpError(timestampedData);\n    };\n    try {\n      return await paginateUTxOs();\n    } catch (error) {\n      return [];\n    }\n  }\n  async fetchAssetAddresses(asset) {\n    const { policyId, assetName } = parseAssetUnit(asset);\n    const paginateAddresses = async (cursor = null, addressesWithQuantity = []) => {\n      const appendCursorString = cursor === null ? \"\" : `&cursor=${cursor}`;\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}/addresses?count=100${appendCursorString}`,\n        this._amountsAsStrings\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        const pageAddressesWithQuantity = data.map((a) => {\n          return { address: a.address, quantity: a.amount };\n        });\n        const nextCursor = timestampedData.next_cursor;\n        const addedData = [\n          ...addressesWithQuantity,\n          ...pageAddressesWithQuantity\n        ];\n        return nextCursor == null ? addedData : paginateAddresses(nextCursor, addedData);\n      }\n      throw parseHttpError(timestampedData);\n    };\n    try {\n      return await paginateAddresses();\n    } catch (error) {\n      return [];\n    }\n  }\n  async fetchAssetMetadata(asset) {\n    try {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}`\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        return {\n          ...data.asset_standards.cip25_metadata,\n          ...data.asset_standards.cip68_metadata,\n          fingerprint: data.fingerprint,\n          totalSupply: data.total_supply,\n          mintingTxHash: data.latest_mint_tx.tx_hash,\n          mintCount: data.mint_tx_count\n        };\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchBlockInfo(hash) {\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `blocks/${hash}`,\n        this._amountsAsStrings\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        return {\n          confirmations: data.confirmations,\n          epoch: data.epoch,\n          epochSlot: data.epoch_slot.toString(),\n          fees: data.total_fees,\n          hash: data.hash,\n          nextBlock: data.next_block ?? \"\",\n          operationalCertificate: data.operational_certificate?.hot_vkey,\n          output: data.total_output_lovelace ?? \"0\",\n          previousBlock: data.previous_block,\n          size: data.size,\n          slot: data.absolute_slot.toString(),\n          slotLeader: data.block_producer ?? \"\",\n          time: Date.parse(data.timestamp) / 1e3,\n          txCount: data.tx_hashes.length,\n          VRFKey: _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.VrfVkBech32.fromHex(data.vrf_key)\n        };\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchCollectionAssets(policyId, cursor) {\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `policy/${policyId}/assets?count=100${cursor ? `&cursor=${cursor}` : \"\"}`\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        return {\n          assets: data.map((asset) => ({\n            unit: policyId + asset.asset_name,\n            quantity: asset.total_supply\n          })),\n          next: timestampedData.next_cursor\n        };\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      return { assets: [], next: null };\n    }\n  }\n  async fetchHandle(handle) {\n    if (this._network !== \"Mainnet\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(`${handle.replace(\"$\", \"\")}`);\n      const asset = await this.fetchAssetMetadata(\n        `${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}000643b0${assetName}`\n      );\n      if (asset.metadata !== void 0) return asset.metadata;\n      throw \"Problem fetching metadata\";\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchHandleAddress(handle) {\n    if (this._network !== \"Mainnet\") {\n      throw new Error(\n        \"Does not support fetching addresses by handle on non-mainnet networks.\"\n      );\n    }\n    try {\n      const handleWithoutDollar = handle.charAt(0) === \"$\" ? handle.substring(1) : handle;\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `ecosystem/adahandle/${handleWithoutDollar}`\n      );\n      if (status === 200) return timestampedData.data;\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchProtocolParameters(epoch = Number.NaN) {\n    if (!isNaN(epoch))\n      throw new Error(\n        \"Maestro only supports fetching Protocol parameters of the latest completed epoch.\"\n      );\n    const decimalFromRationalString = (str) => {\n      const forwardSlashIndex = str.indexOf(\"/\");\n      return parseInt(str.slice(0, forwardSlashIndex)) / parseInt(str.slice(forwardSlashIndex + 1));\n    };\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\"protocol-params\");\n      if (status === 200) {\n        const data = timestampedData.data;\n        try {\n          const { data: timestampedDataEpochData, status: epochStatus } = await this._axiosInstance.get(\"epochs/current\");\n          if (epochStatus === 200) {\n            const epochData = timestampedDataEpochData.data;\n            return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n              coinsPerUtxoSize: parseInt(data.coins_per_utxo_byte),\n              collateralPercent: parseInt(data.collateral_percentage),\n              decentralisation: 0,\n              // Deprecated in Babbage era.\n              epoch: parseInt(epochData.epoch_no),\n              keyDeposit: parseInt(data.stake_key_deposit),\n              maxBlockExMem: data.max_execution_units_per_block.memory.toString(),\n              maxBlockExSteps: data.max_execution_units_per_block.steps.toString(),\n              maxBlockHeaderSize: parseInt(data.max_block_header_size),\n              maxBlockSize: parseInt(data.max_block_body_size),\n              maxCollateralInputs: parseInt(data.max_collateral_inputs),\n              maxTxExMem: data.max_execution_units_per_transaction.memory.toString(),\n              maxTxExSteps: data.max_execution_units_per_transaction.steps.toString(),\n              maxTxSize: parseInt(data.max_tx_size),\n              maxValSize: parseInt(data.max_value_sized),\n              minFeeA: data.min_fee_coefficient,\n              minFeeB: data.min_fee_constant,\n              minPoolCost: data.min_pool_cost.toString(),\n              poolDeposit: parseInt(data.pool_deposit),\n              priceMem: decimalFromRationalString(data.prices.memory),\n              priceStep: decimalFromRationalString(data.prices.steps)\n            });\n          }\n          throw parseHttpError(timestampedDataEpochData);\n        } catch (error) {\n          throw parseHttpError(error);\n        }\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchTxInfo(hash) {\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `transactions/${hash}`\n      );\n      if (status === 200) {\n        const data = timestampedData.data;\n        return {\n          block: data.block_hash,\n          deposit: data.deposit.toString(),\n          fees: data.fee.toString(),\n          hash: data.tx_hash,\n          index: data.block_tx_index,\n          invalidAfter: data.invalid_hereafter ?? \"\",\n          invalidBefore: data.invalid_before ?? \"\",\n          slot: data.block_absolute_slot.toString(),\n          size: data.size - 1\n        };\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchUTxOs(hash, index) {\n    try {\n      const { data: timestampedData, status } = await this._axiosInstance.get(\n        `transactions/${hash}`,\n        this._amountsAsStrings\n      );\n      if (status === 200) {\n        const msOutputs = timestampedData.data.outputs;\n        const outputs = msOutputs.map(this.toUTxO);\n        if (index !== void 0) {\n          return outputs.filter((utxo) => utxo.input.outputIndex === index);\n        }\n        return outputs;\n      }\n      throw parseHttpError(timestampedData);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async get(url) {\n    try {\n      const { data, status } = await this._axiosInstance.get(url);\n      if (status === 200) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  onTxConfirmed(txHash, callback, limit = 100) {\n    let attempts = 0;\n    const checkTx = setInterval(() => {\n      if (attempts >= limit) clearInterval(checkTx);\n      this.fetchTxInfo(txHash).then((txInfo) => {\n        this.fetchBlockInfo(txInfo.block).then((blockInfo) => {\n          if (blockInfo?.confirmations > 0) {\n            clearInterval(checkTx);\n            callback();\n          }\n        }).catch(() => {\n          attempts += 1;\n        });\n      }).catch(() => {\n        attempts += 1;\n      });\n    }, 5e3);\n  }\n  async submitTx(tx) {\n    try {\n      const headers = { \"Content-Type\": \"application/cbor\" };\n      const { data, status } = await this._axiosInstance.post(\n        this.submitUrl,\n        (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toBytes)(tx),\n        { headers }\n      );\n      if (status === 202) return data;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  toUTxO = (utxo) => ({\n    input: {\n      outputIndex: utxo.index,\n      txHash: utxo.tx_hash\n    },\n    output: {\n      address: utxo.address,\n      amount: utxo.assets.map((asset) => ({\n        unit: asset.unit,\n        quantity: asset.amount\n      })),\n      dataHash: utxo.datum?.hash,\n      plutusData: utxo.datum?.bytes,\n      scriptRef: this.resolveScript(utxo),\n      scriptHash: utxo.reference_script?.hash\n    }\n  });\n  resolveScript = (utxo) => {\n    if (utxo.reference_script) {\n      let script;\n      if (utxo.reference_script.type === \"native\") {\n        script = utxo.reference_script.json;\n      } else {\n        const scriptBytes = utxo.reference_script.bytes;\n        if (scriptBytes) {\n          const normalized = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.normalizePlutusScript)(scriptBytes, \"DoubleCBOR\");\n          script = {\n            code: normalized,\n            version: utxo.reference_script.type.replace(\"plutusv\", \"V\")\n          };\n        } else {\n          throw new Error(\"Script bytes not found\");\n        }\n      }\n      return (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.toScriptRef)(script).toCbor().toString();\n    } else return void 0;\n  };\n};\n\n// src/ogmios.ts\n\nvar OgmiosProvider = class {\n  _baseUrl;\n  constructor(...args) {\n    this._baseUrl = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.isNetwork)(args[0]) ? _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_OGMIOS_LINKS[args[0]] : args[0];\n  }\n  async evaluateTx(tx) {\n    const client = await this.open();\n    this.send(client, \"EvaluateTx\", {\n      evaluate: tx\n    });\n    return new Promise((resolve, reject) => {\n      client.addEventListener(\n        \"message\",\n        (response) => {\n          try {\n            const { result } = JSON.parse(response.data);\n            if (result.EvaluationResult) {\n              resolve(\n                Object.keys(result.EvaluationResult).map((key) => {\n                  return {\n                    index: parseInt(key.split(\":\")[1], 10),\n                    tag: key.split(\":\")[0].toUpperCase(),\n                    budget: {\n                      mem: result.EvaluationResult[key].memory,\n                      steps: result.EvaluationResult[key].steps\n                    }\n                  };\n                })\n              );\n            } else {\n              reject(result.EvaluationFailure);\n            }\n            client.close();\n          } catch (error) {\n            reject(error);\n          }\n        },\n        { once: true }\n      );\n    });\n  }\n  async onNextTx(callback) {\n    const client = await this.open();\n    this.send(client, \"AwaitAcquire\", {});\n    client.addEventListener(\"message\", (response) => {\n      const { result } = JSON.parse(response.data);\n      if (result === null) {\n        return this.send(client, \"AwaitAcquire\", {});\n      }\n      if (result.AwaitAcquired === void 0) {\n        callback(result);\n      }\n      this.send(client, \"NextTx\", {});\n    });\n    return () => client.close();\n  }\n  async submitTx(tx) {\n    const client = await this.open();\n    this.send(client, \"SubmitTx\", {\n      submit: tx\n    });\n    return new Promise((resolve, reject) => {\n      client.addEventListener(\n        \"message\",\n        (response) => {\n          try {\n            const { result } = JSON.parse(response.data);\n            if (result.SubmitSuccess) {\n              resolve(result.SubmitSuccess.txId);\n            } else {\n              reject(result.SubmitFail);\n            }\n            client.close();\n          } catch (error) {\n            reject(error);\n          }\n        },\n        { once: true }\n      );\n    });\n  }\n  async open() {\n    const client = new WebSocket(this._baseUrl);\n    await new Promise((resolve) => {\n      client.addEventListener(\"open\", () => resolve(true), { once: true });\n    });\n    return client;\n  }\n  send(client, methodname, args) {\n    client.send(\n      JSON.stringify({\n        version: \"1.0\",\n        type: \"jsonwsp/request\",\n        servicename: \"ogmios\",\n        methodname,\n        args\n      })\n    );\n  }\n};\n\n// src/utxo-rpc.ts\n\n\n\n\nvar U5CProvider = class {\n  // Clients for querying and submitting transactions on the Cardano blockchain.\n  queryClient;\n  submitClient;\n  /**\n   * Constructor initializes the query and submit clients with provided URL and optional headers.\n   * @param url - The base URL for interacting with Cardano nodes.\n   * @param headers - Optional HTTP headers for API requests.\n   */\n  constructor({\n    url,\n    headers\n  }) {\n    this.queryClient = new _utxorpc_sdk__WEBPACK_IMPORTED_MODULE_4__.CardanoQueryClient({\n      uri: url,\n      headers\n    });\n    this.submitClient = new _utxorpc_sdk__WEBPACK_IMPORTED_MODULE_4__.CardanoSubmitClient({\n      uri: url,\n      headers\n    });\n  }\n  /**\n   * Allow you to listen to a transaction confirmation. Upon confirmation, the callback will be called.\n   * @param txHash - The transaction hash to listen for confirmation\n   * @param callback - The callback function to call when the transaction is confirmed\n   * @param limit - The number of blocks to wait for confirmation\n   */\n  onTxConfirmed(txHash, callback, limit = 100) {\n    const onConfirmed = async () => {\n      const updates = this.submitClient.waitForTx((0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(txHash));\n      for await (const stage of updates) {\n        console.log(JSON.stringify(updates));\n        if (stage === _utxorpc_spec__WEBPACK_IMPORTED_MODULE_5__.submit.Stage.CONFIRMED) {\n          callback();\n          return;\n        }\n      }\n    };\n    const timeoutId = setTimeout(() => {\n      console.log(\"Transaction confirmation timed out.\");\n    }, limit * 5e3);\n    onConfirmed().finally(() => clearTimeout(timeoutId));\n  }\n  /**\n   * Evaluates the resources required to execute the transaction\n   * @param tx - The transaction to evaluate\n   */\n  evaluateTx(tx) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Submit a serialized transaction to the network.\n   * @param tx - The serialized transaction in hex to submit\n   * @returns The transaction hash of the submitted transaction\n   */\n  async submitTx(tx) {\n    const cbor = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.toBytes)(tx);\n    const hash = await this.submitClient.submitTx(cbor);\n    return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(hash);\n  }\n  /**\n   * Obtain information about a specific stake account.\n   * @param address - Wallet address to fetch account information\n   */\n  fetchAccountInfo(address) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async fetchAddressAssets(address) {\n    const utxos = await this.fetchAddressUTxOs(address);\n    return utxosToAssets(utxos);\n  }\n  /**\n   * Fetches the UTxOs for a given address.\n   * @param address - The address to fetch UTxOs for\n   * @param asset - The asset to filter UTxOs by (optional)\n   * @returns UTxOs for the given address\n   */\n  async fetchAddressUTxOs(address, asset) {\n    const addressBytes = Buffer.from(_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.Address.fromBech32(address).toBytes());\n    const utxoSearchResult = await this.queryClient.searchUtxosByAddress(addressBytes);\n    return utxoSearchResult.map((item) => {\n      const utxo = this._rpcUtxoToMeshUtxo(item.txoRef, item.parsedValued);\n      if (asset) {\n        if (utxo.output.amount.some((amountItem) => amountItem.unit === asset)) {\n          return utxo;\n        }\n        return void 0;\n      }\n      return utxo;\n    }).filter((utxo) => utxo !== void 0);\n  }\n  /**\n   * Fetches the asset addresses for a given asset.\n   * @param asset - The asset to fetch addresses for\n   */\n  fetchAssetAddresses(asset) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches the metadata for a given asset.\n   * @param asset - The asset to fetch metadata for\n   */\n  fetchAssetMetadata(asset) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches the block information for a given block hash.\n   * @param hash - The block hash to fetch block information for\n   */\n  fetchBlockInfo(hash) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches the collection assets for a given policy ID.\n   * @param policyId - The policy ID to fetch collection assets for\n   * @param cursor - The cursor to fetch the next set of assets (optional)\n   */\n  fetchCollectionAssets(policyId, cursor) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches the information (AssetMetadata) for a given handle.\n   * @param handle - The handle to fetch information for\n   */\n  fetchHandle(handle) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Resolve the handle's address from the handle.\n   * @param handle - The handle to resolve\n   */\n  fetchHandleAddress(handle) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches protocol parameters\n   */\n  async fetchProtocolParameters(epoch = Number.NaN) {\n    const rpcPParams = await this.queryClient.readParams();\n    if (rpcPParams === void 0 || rpcPParams === null) {\n      throw new Error(`Error fetching protocol parameters`);\n    }\n    return this._rpcPParamsToProtocol(rpcPParams);\n  }\n  /**\n   * Fetches transaction info for a given hash.\n   * @param hash - The transaction hash\n   */\n  fetchTxInfo(hash) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Fetches output UTxOs of a given transaction hash.\n   * @param hash - The transaction hash\n   */\n  fetchUTxOs(hash) {\n    throw new Error(\"Method not implemented.\");\n  }\n  get(url) {\n    throw new Error(\"Method not implemented.\");\n  }\n  /**\n   * Waits for transaction confirmation within a given timeout.\n   * @param txId - The transaction hash.\n   * @param timeout - Optional timeout in milliseconds.\n   * @returns True if the transaction is confirmed within the timeout, otherwise false.\n   */\n  awaitTransactionConfirmation(txId, timeout) {\n    const onConfirmed = (async () => {\n      const updates = this.submitClient.waitForTx((0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(txId));\n      for await (const stage of updates) {\n        if (stage == _utxorpc_spec__WEBPACK_IMPORTED_MODULE_5__.submit.Stage.CONFIRMED) {\n          return true;\n        }\n      }\n      return false;\n    })();\n    const onTimeout = new Promise(\n      (resolve) => setTimeout(() => resolve(false), timeout)\n    );\n    return Promise.race([onConfirmed, onTimeout]);\n  }\n  /**\n   * Helper function to convert an RPC UTxO object to a Mesh UTxO object.\n   * @param rpcTxoRef - The transaction output reference from RPC.\n   * @param rpcTxOutput - The transaction output details from RPC.\n   * @returns A formatted UTxO object.\n   */\n  _rpcUtxoToMeshUtxo(rpcTxoRef, rpcTxOutput) {\n    const amount = [\n      {\n        unit: \"lovelace\",\n        quantity: rpcTxOutput.coin.toString()\n      }\n    ];\n    rpcTxOutput.assets.forEach((ma) => {\n      ma.assets.forEach((asset) => {\n        amount.push({\n          unit: Buffer.from(ma.policyId).toString(\"hex\") + Buffer.from(asset.name).toString(\"hex\"),\n          quantity: asset.outputCoin.toString()\n        });\n      });\n    });\n    let dataHash = void 0;\n    let plutusData = void 0;\n    if (rpcTxOutput.datum !== void 0) {\n      if (rpcTxOutput.datum?.originalCbor && rpcTxOutput.datum.originalCbor.length > 0) {\n        dataHash = Buffer.from(rpcTxOutput.datum.hash).toString(\"hex\");\n        plutusData = Buffer.from(rpcTxOutput.datum.originalCbor).toString(\n          \"hex\"\n        );\n      } else if (rpcTxOutput.datum?.hash && rpcTxOutput.datum.hash.length > 0) {\n        dataHash = Buffer.from(rpcTxOutput.datum.hash).toString(\"hex\");\n      }\n    }\n    let scriptRef = void 0;\n    let scriptHash = void 0;\n    if (rpcTxOutput.script !== void 0) {\n    }\n    return {\n      input: {\n        outputIndex: rpcTxoRef.index,\n        txHash: Buffer.from(rpcTxoRef.hash).toString(\"hex\")\n      },\n      output: {\n        address: _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.Address.fromBytes(\n          _meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.CardanoSDKUtil.HexBlob.fromBytes(rpcTxOutput.address)\n        ).toBech32(),\n        amount,\n        dataHash,\n        plutusData,\n        scriptRef,\n        scriptHash\n      }\n    };\n  }\n  /**\n   * Converts RPC protocol parameters to a Mesh Protocol object.\n   * @param rpcPParams - The protocol parameters from the RPC.\n   * @returns A Protocol object.\n   */\n  _rpcPParamsToProtocol(rpcPParams) {\n    return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n      coinsPerUtxoSize: Number(rpcPParams.coinsPerUtxoByte),\n      collateralPercent: Number(rpcPParams.collateralPercentage),\n      decentralisation: 0,\n      // Deprecated in Babbage era.\n      keyDeposit: Number(rpcPParams.stakeKeyDeposit),\n      maxBlockExMem: Number(rpcPParams.maxExecutionUnitsPerBlock?.memory),\n      maxBlockExSteps: Number(rpcPParams.maxExecutionUnitsPerBlock?.steps),\n      maxBlockHeaderSize: Number(rpcPParams.maxBlockHeaderSize),\n      maxBlockSize: Number(rpcPParams.maxBlockBodySize),\n      maxCollateralInputs: Number(rpcPParams.maxCollateralInputs),\n      maxTxExMem: Number(rpcPParams.maxExecutionUnitsPerTransaction?.memory),\n      maxTxExSteps: Number(rpcPParams.maxExecutionUnitsPerTransaction?.steps),\n      maxTxSize: Number(rpcPParams.maxTxSize),\n      maxValSize: Number(rpcPParams.maxValueSize),\n      minFeeA: Number(rpcPParams.minFeeCoefficient),\n      minFeeB: Number(rpcPParams.minFeeConstant),\n      minPoolCost: Number(rpcPParams.minPoolCost),\n      poolDeposit: Number(rpcPParams.poolDeposit),\n      priceMem: Number(rpcPParams.prices?.memory),\n      priceStep: Number(rpcPParams.prices?.steps)\n    });\n  }\n};\n\n// src/yaci.ts\n\n\n\nvar YaciProvider = class {\n  _axiosInstance;\n  _adminAxiosInstance;\n  /**\n   * Set the URL of the instance.\n   * @param baseUrl The base URL of the instance.\n   */\n  constructor(baseUrl = \"https://yaci-node.meshjs.dev/api/v1/\", adminUrl) {\n    this._axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n      baseURL: baseUrl\n    });\n    if (adminUrl) {\n      this._adminAxiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n        baseURL: adminUrl\n      });\n    }\n  }\n  async fetchAccountInfo(address) {\n    const rewardAddress = address.startsWith(\"addr\") ? (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.resolveRewardAddress)(address) : address;\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `accounts/${rewardAddress}`\n      );\n      if (status === 200)\n        return {\n          poolId: data.pool_id,\n          active: data.active || data.active_epoch !== null,\n          balance: data.controlled_amount,\n          rewards: data.withdrawable_amount,\n          withdrawals: data.withdrawals_sum\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  resolveScriptRef = async (scriptHash) => {\n    if (scriptHash) {\n      const { data, status } = await this._axiosInstance.get(\n        `scripts/${scriptHash}`\n      );\n      if (status === 200) {\n        let script;\n        if (data.type.startsWith(\"plutus\")) {\n          const plutusScript = await this.fetchPlutusScriptCBOR(scriptHash);\n          const normalized = (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.normalizePlutusScript)(plutusScript, \"DoubleCBOR\");\n          script = {\n            version: data.type.replace(\"plutus\", \"\"),\n            code: normalized\n          };\n        } else {\n          script = await this.fetchNativeScriptJSON(scriptHash);\n        }\n        return (0,_meshsdk_core_cst__WEBPACK_IMPORTED_MODULE_2__.toScriptRef)(script).toCbor();\n      }\n      throw parseHttpError(data);\n    }\n    return void 0;\n  };\n  toUTxO = async (bfUTxO, tx_hash) => ({\n    input: {\n      outputIndex: bfUTxO.output_index,\n      txHash: tx_hash\n    },\n    output: {\n      address: bfUTxO.address,\n      amount: bfUTxO.amount.map((utxo) => {\n        return { ...utxo, quantity: utxo.quantity.toString() };\n      }),\n      dataHash: bfUTxO.data_hash ?? void 0,\n      plutusData: bfUTxO.inline_datum ?? void 0,\n      scriptRef: bfUTxO.script_ref ? bfUTxO.script_ref : bfUTxO.reference_script_hash ? await this.resolveScriptRef(bfUTxO.reference_script_hash) : void 0,\n      scriptHash: bfUTxO.reference_script_hash\n    }\n  });\n  async fetchAddressAssets(address) {\n    const utxos = await this.fetchAddressUTxOs(address);\n    return utxosToAssets(utxos);\n  }\n  async fetchAddressUTxOs(address, asset) {\n    const filter = asset !== void 0 ? `/${asset}` : \"\";\n    const url = `addresses/${address}/utxos` + filter;\n    const paginateUTxOs = async (page = 1, utxos = []) => {\n      const { data, status } = await this._axiosInstance.get(\n        `${url}?page=${page}`\n      );\n      if (status === 200)\n        return data.length > 0 ? paginateUTxOs(page + 1, [\n          ...utxos,\n          ...await Promise.all(\n            data.map((utxo) => this.toUTxO(utxo, utxo.tx_hash))\n          )\n        ]) : utxos;\n      throw parseHttpError(data);\n    };\n    try {\n      return await paginateUTxOs();\n    } catch (error) {\n      return [];\n    }\n  }\n  async fetchAssetAddresses(asset) {\n    const paginateAddresses = async (page = 1, addresses = []) => {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}/addresses?page=${page}`\n      );\n      if (status === 200)\n        return data.length > 0 ? paginateAddresses(page + 1, [...addresses, ...data]) : addresses;\n      throw parseHttpError(data);\n    };\n    try {\n      return await paginateAddresses();\n    } catch (error) {\n      return [];\n    }\n  }\n  async fetchAssetMetadata(asset) {\n    try {\n      const { policyId, assetName } = parseAssetUnit(asset);\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${policyId}${assetName}`\n      );\n      if (status === 200)\n        return {\n          ...data.onchain_metadata\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchBlockInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.get(`blocks/${hash}`);\n      if (status === 200)\n        return {\n          confirmations: data.confirmations,\n          epoch: data.epoch,\n          epochSlot: data.epoch_slot.toString(),\n          fees: data.fees,\n          hash: data.hash,\n          nextBlock: data.next_block ?? \"\",\n          operationalCertificate: data.op_cert,\n          output: data.output ?? \"0\",\n          previousBlock: data.previous_block,\n          size: data.size,\n          slot: data.slot.toString(),\n          slotLeader: data.slot_leader ?? \"\",\n          time: data.time,\n          txCount: data.tx_count,\n          VRFKey: data.block_vrf\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchCollectionAssets(policyId, cursor = 1) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `assets/policy/${policyId}?page=${cursor}`\n      );\n      if (status === 200)\n        return {\n          assets: data.map((asset) => ({\n            unit: asset.asset,\n            quantity: asset.quantity\n          })),\n          next: data.length === 100 ? cursor + 1 : null\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      return { assets: [], next: null };\n    }\n  }\n  async fetchHandle(handle) {\n    throw new Error(\"Method not implemented.\");\n  }\n  async fetchHandleAddress(handle) {\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(handle.replace(\"$\", \"\"));\n      const { data, status } = await this._axiosInstance.get(\n        `assets/${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}${assetName}/addresses`\n      );\n      if (status === 200) return data[0].address;\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchProtocolParameters(epoch = Number.NaN) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `epochs/${isNaN(epoch) ? \"latest\" : epoch}/parameters`\n      );\n      if (status === 200)\n        return (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.castProtocol)({\n          coinsPerUtxoSize: data.coins_per_utxo_size,\n          collateralPercent: data.collateral_percent,\n          decentralisation: data.decentralisation_param,\n          epoch: data.epoch,\n          keyDeposit: data.key_deposit,\n          maxBlockExMem: data.max_block_ex_mem,\n          maxBlockExSteps: data.max_block_ex_steps,\n          maxBlockHeaderSize: data.max_block_header_size,\n          maxBlockSize: data.max_block_size,\n          maxCollateralInputs: data.max_collateral_inputs,\n          maxTxExMem: data.max_tx_ex_mem,\n          maxTxExSteps: data.max_tx_ex_steps,\n          maxTxSize: data.max_tx_size,\n          maxValSize: data.max_val_size,\n          minFeeA: data.min_fee_a,\n          minFeeB: data.min_fee_b,\n          minPoolCost: data.min_pool_cost,\n          poolDeposit: data.pool_deposit,\n          priceMem: data.price_mem,\n          priceStep: data.price_step\n        });\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchTxInfo(hash) {\n    try {\n      const { data, status } = await this._axiosInstance.get(`txs/${hash}`);\n      if (status === 200)\n        return {\n          block: data.block,\n          deposit: data.deposit,\n          fees: data.fees,\n          hash: data.hash,\n          index: data.index,\n          invalidAfter: data.invalid_hereafter ?? \"\",\n          invalidBefore: data.invalid_before ?? \"\",\n          slot: data.slot.toString(),\n          size: data.size\n        };\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchUTxOs(hash, index) {\n    try {\n      const { data, status } = await this._axiosInstance.get(\n        `txs/${hash}/utxos`\n      );\n      if (status === 200) {\n        const bfOutputs = data.outputs;\n        const outputsPromises = [];\n        bfOutputs.forEach((output) => {\n          outputsPromises.push(this.toUTxO(output, hash));\n        });\n        const outputs = await Promise.all(outputsPromises);\n        if (index !== void 0) {\n          return outputs.filter((utxo) => utxo.input.outputIndex === index);\n        }\n        return outputs;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async get(url) {\n    try {\n      const { data, status } = await this._axiosInstance.get(url);\n      if (status === 200) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  onTxConfirmed(txHash, callback, limit = 100) {\n    let attempts = 0;\n    const checkTx = setInterval(() => {\n      if (attempts >= limit) clearInterval(checkTx);\n      this.fetchTxInfo(txHash).then((txInfo) => {\n        this.fetchBlockInfo(txInfo.block).then((blockInfo) => {\n          if (blockInfo?.confirmations > 0) {\n            clearInterval(checkTx);\n            callback();\n          }\n        }).catch(() => {\n          attempts += 1;\n        });\n      }).catch(() => {\n        attempts += 1;\n      });\n    }, 5e3);\n  }\n  async submitTx(txHex) {\n    try {\n      const headers = { \"Content-Type\": \"text/plain\" };\n      const { status, data } = await this._axiosInstance.post(\n        \"/tx/submit\",\n        txHex,\n        {\n          headers\n        }\n      );\n      if (status === 202) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async evaluateTx(txHex) {\n    try {\n      const headers = { \"Content-Type\": \"application/cbor\" };\n      const { status, data } = await this._axiosInstance.post(\n        \"utils/txs/evaluate\",\n        txHex,\n        {\n          headers\n        }\n      );\n      if (status === 202 && data.result.EvaluationResult) {\n        const tagMap = {\n          spend: \"SPEND\",\n          mint: \"MINT\",\n          certificate: \"CERT\",\n          reward: \"REWARD\"\n        };\n        const result = [];\n        Object.keys(data.result.EvaluationResult).forEach((key) => {\n          const [tagKey, index] = key.split(\":\");\n          const { memory, steps } = data.result.EvaluationResult[key];\n          result.push({\n            tag: tagMap[tagKey],\n            index: Number(index),\n            budget: { mem: memory, steps }\n          });\n        });\n        return result;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async getDevnetInfo() {\n    try {\n      if (this._adminAxiosInstance === void 0)\n        throw parseHttpError(\"Admin URL not provided\");\n      const { status, data } = await this._adminAxiosInstance.get(\n        `local-cluster/api/admin/devnet`\n      );\n      if (status === 200) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async getGenesisByEra(era) {\n    try {\n      if (this._adminAxiosInstance === void 0)\n        throw parseHttpError(\"Admin URL not provided\");\n      const { status, data } = await this._adminAxiosInstance.get(\n        `local-cluster/api/admin/devnet/genesis/${era}`\n      );\n      if (status === 200) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Topup address with ADA\n   * @param address - Address to topup\n   * @param amount - Amount to topup\n   */\n  async addressTopup(address, amount) {\n    try {\n      if (this._adminAxiosInstance === void 0)\n        throw parseHttpError(\"Admin URL not provided\");\n      const headers = { \"Content-Type\": \"application/json\", accept: \"*/*\" };\n      const { status, data } = await this._adminAxiosInstance.post(\n        \"local-cluster/api/addresses/topup\",\n        JSON.stringify({ address, adaAmount: parseInt(amount) }),\n        {\n          headers\n        }\n      );\n      if (status === 200) {\n        return data;\n      }\n      throw parseHttpError(data);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  async fetchPlutusScriptCBOR(scriptHash) {\n    const { data, status } = await this._axiosInstance.get(\n      `scripts/${scriptHash}/cbor`\n    );\n    if (status === 200) return data.cbor;\n    throw parseHttpError(data);\n  }\n  async fetchNativeScriptJSON(scriptHash) {\n    const { data, status } = await this._axiosInstance.get(\n      `scripts/${scriptHash}/json`\n    );\n    if (status === 200) return data.json;\n    throw parseHttpError(data);\n  }\n};\n\n// src/offline/offline-fetcher.ts\n\nvar OfflineFetcher = class _OfflineFetcher {\n  accounts = {};\n  utxos = {};\n  assetAddresses = {};\n  assetMetadata = {};\n  blocks = {};\n  collections = {};\n  protocolParameters = {};\n  transactions = {};\n  paginate(items, cursor, pageSize = 20) {\n    const startIndex = cursor != null ? parseInt(String(cursor), 10) : 0;\n    const paginatedItems = items.slice(startIndex, startIndex + pageSize);\n    const nextCursor = startIndex + pageSize < items.length ? startIndex + pageSize : void 0;\n    return { paginatedItems, nextCursor };\n  }\n  /**\n   * Fetches account information for a given address.\n   * @param address - Address to fetch info for\n   * @returns Promise resolving to account information\n   * @throws Error if account not found\n   */\n  async fetchAccountInfo(address) {\n    const account = this.accounts[address];\n    if (!account) throw new Error(`Account not found: ${address}`);\n    return account;\n  }\n  /**\n   * Fetches UTXOs for a given address, optionally filtered by asset.\n   * @param address - Address to fetch UTXOs for\n   * @param asset - Optional asset ID to filter UTXOs\n   * @returns Promise resolving to array of UTXOs\n   */\n  async fetchAddressUTxOs(address, asset) {\n    const addressUtxos = this.utxos[address] || [];\n    return asset ? addressUtxos.filter((utxo) => utxo.output.amount.some((a) => a.unit === asset)) : addressUtxos;\n  }\n  /**\n   * Fetches addresses holding a specific asset.\n   * @param asset - Asset identifier\n   * @returns Promise resolving to array of asset addresses and quantities\n   */\n  async fetchAssetAddresses(asset) {\n    if (!_OfflineFetcher.isValidHex(asset)) {\n      throw new Error(\"Invalid asset: must be a hex string\");\n    }\n    const addressMap = /* @__PURE__ */ new Map();\n    const registryAddresses = this.assetAddresses[asset] || [];\n    for (const addr of registryAddresses) {\n      addressMap.set(addr.address, BigInt(addr.quantity));\n    }\n    for (const [address, utxos] of Object.entries(this.utxos)) {\n      for (const utxo of utxos) {\n        const assetAmount = utxo.output.amount.find((amt) => amt.unit === asset);\n        if (assetAmount) {\n          const currentAmount = addressMap.get(address) || BigInt(0);\n          addressMap.set(address, currentAmount + BigInt(assetAmount.quantity));\n        }\n      }\n    }\n    return Array.from(addressMap.entries()).filter(([_, quantity]) => quantity > BigInt(0)).map(([address, quantity]) => ({\n      address,\n      quantity: quantity.toString()\n    }));\n  }\n  /**\n   * Fetches all assets associated with an address.\n   * @param address - Address to fetch assets for\n   * @returns Promise resolving to array of assets held by the address\n   */\n  async fetchAddressAssets(address) {\n    if (!_OfflineFetcher.isValidAddress(address)) {\n      throw new Error(\"Invalid address: must be a valid Bech32 or Base58 address\");\n    }\n    const assetMap = /* @__PURE__ */ new Map();\n    const addressUtxos = this.utxos[address] || [];\n    for (const utxo of addressUtxos) {\n      for (const amount of utxo.output.amount) {\n        const currentAmount = assetMap.get(amount.unit) || BigInt(0);\n        assetMap.set(amount.unit, currentAmount + BigInt(amount.quantity));\n      }\n    }\n    for (const [assetId, addresses] of Object.entries(this.assetAddresses)) {\n      const assetAddress = addresses.find((addr) => addr.address === address);\n      if (assetAddress) {\n        const currentAmount = assetMap.get(assetId) || BigInt(0);\n        assetMap.set(assetId, currentAmount + BigInt(assetAddress.quantity));\n      }\n    }\n    return Array.from(assetMap.entries()).map(([unit, quantity]) => ({\n      unit,\n      quantity: quantity.toString()\n    }));\n  }\n  /**\n   * Fetches metadata for a specific asset.\n   * @param asset - Asset identifier\n   * @returns Promise resolving to asset metadata\n   * @throws Error if asset metadata not found\n   */\n  async fetchAssetMetadata(asset) {\n    const metadata = this.assetMetadata[asset];\n    if (!metadata) throw new Error(`Asset metadata not found: ${asset}`);\n    return metadata;\n  }\n  /**\n   * Fetches information about a specific block.\n   * @param hash - Block hash\n   * @returns Promise resolving to block information\n   * @throws Error if block not found\n   */\n  async fetchBlockInfo(hash) {\n    const block = this.blocks[hash];\n    if (!block) throw new Error(`Block not found: ${hash}`);\n    return block;\n  }\n  /**\n   * Fetches assets in a collection (by policy ID) with pagination.\n   * @param policyId - Policy ID of the collection\n   * @param cursor - Optional pagination cursor\n   * @returns Promise resolving to paginated assets and next cursor\n   * @throws Error if collection not found or invalid cursor\n   */\n  async fetchCollectionAssets(policyId, cursor) {\n    const assets = this.collections[policyId];\n    if (!assets) throw new Error(`Collection not found: ${policyId}`);\n    if (cursor && !_OfflineFetcher.isIntegerString(String(cursor))) {\n      throw new Error(\"Invalid cursor: must be a string of digits\");\n    }\n    const { paginatedItems, nextCursor } = this.paginate(assets, cursor);\n    return { assets: paginatedItems, next: nextCursor };\n  }\n  /**\n   * Fetches metadata for a handle.\n   * @param handle - Handle to fetch metadata for\n   * @returns Promise resolving to handle metadata\n   * @throws Error if handle not found or invalid\n   */\n  async fetchHandle(handle) {\n    try {\n      const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(handle.replace(\"$\", \"\"));\n      const handleAsset = `${_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1]}000de140${assetName}`;\n      return await this.fetchAssetMetadata(handleAsset);\n    } catch (error) {\n      throw parseHttpError(error);\n    }\n  }\n  /**\n   * Fetches address associated with a handle.\n   * @param handle - Handle to fetch address for\n   * @returns Promise resolving to address\n   * @throws Error if no address found for handle\n   */\n  async fetchHandleAddress(handle) {\n    const assetName = (0,_meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.fromUTF8)(handle.replace(\"$\", \"\"));\n    const policyId = _meshsdk_common__WEBPACK_IMPORTED_MODULE_1__.SUPPORTED_HANDLES[1];\n    const addresses = await this.fetchAssetAddresses(`${policyId}${assetName}`);\n    const address = addresses[0]?.address;\n    if (!address) {\n      throw new Error(`No addresses found for handle: ${handle}`);\n    }\n    return address;\n  }\n  /**\n   * Fetches protocol parameters for a specific epoch.\n   * @param epoch - Epoch number\n   * @returns Promise resolving to protocol parameters\n   * @throws Error if parameters not found for epoch\n   */\n  async fetchProtocolParameters(epoch) {\n    if (!epoch) {\n      const maxEpochNumber = Math.max(...Object.keys(this.protocolParameters).map(Number));\n      return this.protocolParameters[maxEpochNumber];\n    }\n    const parameters = this.protocolParameters[epoch];\n    if (!parameters) throw new Error(`Protocol parameters not found for epoch: ${epoch}`);\n    return parameters;\n  }\n  /**\n   * Fetches information about a specific transaction.\n   * @param hash - Transaction hash\n   * @returns Promise resolving to transaction information\n   * @throws Error if transaction not found\n   */\n  async fetchTxInfo(hash) {\n    const transaction = this.transactions[hash];\n    if (!transaction) throw new Error(`Transaction not found: ${hash}`);\n    return transaction;\n  }\n  /**\n   * Fetches all UTXOs associated with a specific transaction hash.\n   * @param hash - Transaction hash to fetch UTXOs for\n   * @returns Promise resolving to array of UTXOs associated with the transaction\n   * @throws Error if no UTXOs found for the transaction hash\n   */\n  async fetchUTxOs(hash) {\n    const utxos = Object.values(this.utxos).flat().filter((utxo) => utxo.input.txHash === hash);\n    if (!utxos.length) throw new Error(`No UTxOs found for transaction hash: ${hash}`);\n    return utxos;\n  }\n  /**\n   * HTTP GET method required by IFetcher interface but not implemented in OfflineFetcher.\n   * @param url - URL to fetch from\n   * @throws Error always, as this fetcher operates offline\n   */\n  async get(url) {\n    throw new Error(\"Method not implemented in OfflineFetcher.\");\n  }\n  /**\n   * Serializes fetcher data to JSON string.\n   * @returns JSON string containing all fetcher data\n   */\n  toJSON() {\n    return JSON.stringify({\n      accounts: this.accounts,\n      utxos: this.utxos,\n      assetAddresses: this.assetAddresses,\n      assetMetadata: this.assetMetadata,\n      blocks: this.blocks,\n      collections: this.collections,\n      protocolParameters: this.protocolParameters,\n      transactions: this.transactions\n    });\n  }\n  /**\n   * Creates an OfflineFetcher instance from JSON data.\n   * @param json - JSON string containing fetcher data\n   * @returns New OfflineFetcher instance\n   */\n  static fromJSON(json) {\n    const data = JSON.parse(json);\n    const fetcher = new _OfflineFetcher();\n    Object.entries(data.accounts || {}).forEach(([address, info]) => fetcher.addAccount(address, info));\n    Object.entries(data.utxos || {}).forEach(([address, utxos]) => fetcher.addUTxOs(utxos));\n    Object.entries(data.assetAddresses || {}).forEach(([asset, addresses]) => fetcher.addAssetAddresses(asset, addresses));\n    Object.entries(data.assetMetadata || {}).forEach(([asset, metadata]) => fetcher.addAssetMetadata(asset, metadata));\n    Object.entries(data.blocks || {}).forEach(([_, info]) => fetcher.addBlock(info));\n    Object.entries(data.collections || {}).forEach(([policyId, assets]) => fetcher.addCollectionAssets(assets));\n    Object.entries(data.protocolParameters || {}).forEach(([_, params]) => fetcher.addProtocolParameters(params));\n    Object.entries(data.transactions || {}).forEach(([_, info]) => fetcher.addTransaction(info));\n    return fetcher;\n  }\n  static isValidHex(str, length) {\n    if (length !== void 0 && str.length !== length) {\n      return false;\n    }\n    return /^[0-9a-fA-F]+$/.test(str);\n  }\n  static isValidAddress(address) {\n    return _OfflineFetcher.isValidBech32Address(address) || _OfflineFetcher.isValidBase58(address);\n  }\n  static isValidBase58(input) {\n    const base58Regex = /^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$/;\n    if (!base58Regex.test(input)) {\n      return false;\n    }\n    return true;\n  }\n  static isValidBech32(input, prefix) {\n    if (input !== input.toLowerCase() && input !== input.toUpperCase()) {\n      return false;\n    }\n    const pattern = new RegExp(`^${prefix}1[02-9ac-hj-np-z]+$`, \"i\");\n    return pattern.test(input);\n  }\n  static isValidBech32Address(address) {\n    return _OfflineFetcher.isValidBech32(address, \"(addr|addr_test)\");\n  }\n  static isValidBech32Pool(poolId) {\n    return _OfflineFetcher.isValidBech32(poolId, \"pool\");\n  }\n  static isValidBech32VrfVk(vrfKey) {\n    return _OfflineFetcher.isValidBech32(vrfKey, \"vrf_vk\");\n  }\n  static isIntegerString(str) {\n    return /^\\d+$/.test(str);\n  }\n  static isValidAssetOrLovelace(asset) {\n    if (asset === \"lovelace\") {\n      return true;\n    }\n    if (asset.length < 56) {\n      return false;\n    }\n    return _OfflineFetcher.isValidHex(asset);\n  }\n  /**\n   * Adds account information to the fetcher.\n   * @param address - Account address\n   * @param accountInfo - Account information\n   * @throws Error if address or account info invalid\n   */\n  addAccount(address, accountInfo) {\n    if (!_OfflineFetcher.isValidAddress(address)) {\n      throw new Error(\"Invalid address: must be a valid Bech32 or Base58 address\");\n    }\n    if (accountInfo.poolId !== void 0) {\n      if (!_OfflineFetcher.isValidBech32Pool(accountInfo.poolId)) {\n        throw new Error(\"Invalid 'poolId': must be a valid Bech32 pool address\");\n      }\n    }\n    if (!_OfflineFetcher.isIntegerString(accountInfo.balance)) {\n      throw new Error(\"Invalid 'balance': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(accountInfo.rewards)) {\n      throw new Error(\"Invalid 'rewards': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(accountInfo.withdrawals)) {\n      throw new Error(\"Invalid 'withdrawals': must be a string of digits\");\n    }\n    this.accounts[address] = accountInfo;\n  }\n  /**\n   * Adds UTXOs to the fetcher.\n   * @param utxos - Array of UTXOs\n   * @throws Error if UTXOs invalid\n   */\n  addUTxOs(utxos) {\n    if (!Array.isArray(utxos) || utxos.length === 0) {\n      throw new Error(\"Invalid utxos: must be a non-empty array\");\n    }\n    utxos.forEach((utxo, index) => {\n      if (!Number.isInteger(utxo.input.outputIndex) || utxo.input.outputIndex < 0) {\n        throw new Error(`Invalid outputIndex for UTxO at index ${index}: must be a non-negative integer`);\n      }\n      if (!_OfflineFetcher.isValidHex(utxo.input.txHash, 64)) {\n        throw new Error(`Invalid txHash for UTxO at index ${index}: must be a 64-character hexadecimal string`);\n      }\n      if (!_OfflineFetcher.isValidAddress(utxo.output.address)) {\n        throw new Error(`Invalid address in output for UTxO at index ${index}: must be a valid Bech32 or Base58 address`);\n      }\n      if (!Array.isArray(utxo.output.amount) || utxo.output.amount.length === 0) {\n        throw new Error(`Invalid amount for UTxO at index ${index}: must be a non-empty array of assets`);\n      }\n      utxo.output.amount.forEach((asset, assetIndex) => {\n        if (!_OfflineFetcher.isValidAssetOrLovelace(asset.unit)) {\n          throw new Error(`Invalid unit for asset at index ${assetIndex} in UTxO at index ${index}`);\n        }\n        if (!_OfflineFetcher.isIntegerString(asset.quantity)) {\n          throw new Error(`Invalid quantity for asset at index ${assetIndex} in UTxO at index ${index}: must be a string of digits`);\n        }\n      });\n      if (utxo.output.dataHash !== void 0 && !_OfflineFetcher.isValidHex(utxo.output.dataHash, 64)) {\n        throw new Error(`Invalid dataHash for UTxO at index ${index}: must be a 64-character hexadecimal string or undefined`);\n      }\n      if (utxo.output.plutusData !== void 0 && !_OfflineFetcher.isValidHex(utxo.output.plutusData)) {\n        throw new Error(`Invalid plutusData for UTxO at index ${index}: must be a hexadecimal string or undefined`);\n      }\n      if (utxo.output.scriptRef !== void 0 && !_OfflineFetcher.isValidHex(utxo.output.scriptRef)) {\n        throw new Error(`Invalid scriptRef for UTxO at index ${index}: must be a hexadecimal string or undefined`);\n      }\n      if (utxo.output.scriptHash !== void 0 && !_OfflineFetcher.isValidHex(utxo.output.scriptHash, 56)) {\n        throw new Error(`Invalid scriptHash for UTxO at index ${index}: must be a 56-character hexadecimal string or undefined`);\n      }\n    });\n    for (const utxo of utxos) {\n      if (!this.utxos[utxo.output.address]) {\n        this.utxos[utxo.output.address] = [];\n      }\n      this.utxos[utxo.output.address].push(utxo);\n    }\n  }\n  /**\n   * Adds asset address information to the fetcher.\n   * @param asset - Asset identifier\n   * @param addresses - Array of asset addresses\n   * @throws Error if asset or addresses invalid\n   */\n  addAssetAddresses(asset, addresses) {\n    if (!_OfflineFetcher.isValidHex(asset)) {\n      throw new Error(\"Invalid asset: must be a hex string\");\n    }\n    if (addresses.length === 0) {\n      throw new Error(\"Invalid addresses: must be a non-empty array\");\n    }\n    addresses.forEach((item, index) => {\n      if (!_OfflineFetcher.isValidAddress(item.address)) {\n        throw new Error(`Invalid 'address' field at index ${index}, should be bech32 string`);\n      }\n      if (!_OfflineFetcher.isIntegerString(item.quantity)) {\n        throw new Error(`Invalid 'quantity' field at index ${index}, should be a string of digits`);\n      }\n    });\n    this.assetAddresses[asset] = addresses;\n  }\n  /**\n   * Adds asset metadata to the fetcher.\n   * @param asset - Asset identifier\n   * @param metadata - Asset metadata\n   * @throws Error if asset or metadata invalid\n   */\n  addAssetMetadata(asset, metadata) {\n    if (asset.length < 56) {\n      throw new Error(`Invalid asset ${asset}: must be a string longer than 56 characters`);\n    }\n    if (!_OfflineFetcher.isValidHex(asset)) {\n      throw new Error(\"Invalid asset: must be a hex string\");\n    }\n    if (typeof metadata !== \"object\" || metadata === null) {\n      throw new Error(\"Invalid metadata object\");\n    }\n    this.assetMetadata[asset] = metadata;\n  }\n  /**\n   * Adds collection assets to the fetcher.\n   * @param assets - Array of assets\n   * @throws Error if assets invalid\n   */\n  addCollectionAssets(assets) {\n    if (!Array.isArray(assets) || assets.length === 0) {\n      throw new Error(\"Invalid assets: must be a non-empty array\");\n    }\n    const groupedAssets = {};\n    assets.forEach((asset, index) => {\n      if (asset.unit.length < 56) {\n        throw new Error(`Invalid unit for asset at index ${index}: must be a string longer than 56 characters`);\n      }\n      if (!_OfflineFetcher.isValidHex(asset.unit)) {\n        throw new Error(`Invalid unit for asset at index ${index}: must be a hexadecimal string`);\n      }\n      const policyId = asset.unit.slice(0, 56);\n      if (!_OfflineFetcher.isValidHex(policyId, 56)) {\n        throw new Error(`Invalid policyId in asset unit at index ${index}: must be a 56-character hexadecimal string`);\n      }\n      if (!_OfflineFetcher.isIntegerString(asset.quantity)) {\n        throw new Error(`Invalid quantity for asset at index ${index}: must be a string of digits`);\n      }\n      if (!groupedAssets[policyId]) {\n        groupedAssets[policyId] = [];\n      }\n      groupedAssets[policyId].push(asset);\n    });\n    for (const [policyId, policyAssets] of Object.entries(groupedAssets)) {\n      if (!this.collections[policyId]) {\n        this.collections[policyId] = [];\n      }\n      this.collections[policyId] = this.collections[policyId].concat(policyAssets);\n    }\n  }\n  /**\n   * Adds protocol parameters to the fetcher.\n   * @param parameters - Protocol parameters\n   * @throws Error if parameters invalid\n   */\n  addProtocolParameters(parameters) {\n    if (parameters.epoch < 0 || !Number.isInteger(parameters.epoch)) {\n      throw new Error(\"Invalid epoch: must be a non-negative integer\");\n    }\n    if (parameters.minFeeA < 0 || !Number.isInteger(parameters.minFeeA)) {\n      throw new Error(\"Invalid 'minFeeA': must be a non-negative integer\");\n    }\n    if (parameters.minFeeB < 0 || !Number.isInteger(parameters.minFeeB)) {\n      throw new Error(\"Invalid 'minFeeB': must be a non-negative integer\");\n    }\n    if (parameters.maxBlockSize <= 0 || !Number.isInteger(parameters.maxBlockSize)) {\n      throw new Error(\"Invalid 'maxBlockSize': must be a positive integer\");\n    }\n    if (parameters.maxTxSize <= 0 || !Number.isInteger(parameters.maxTxSize)) {\n      throw new Error(\"Invalid 'maxTxSize': must be a positive integer\");\n    }\n    if (parameters.maxBlockHeaderSize <= 0 || !Number.isInteger(parameters.maxBlockHeaderSize)) {\n      throw new Error(\"Invalid 'maxBlockHeaderSize': must be a positive integer\");\n    }\n    if (parameters.keyDeposit < 0 || !Number.isInteger(parameters.keyDeposit)) {\n      throw new Error(\"Invalid 'keyDeposit': must be a non-negative integer\");\n    }\n    if (parameters.poolDeposit < 0 || !Number.isInteger(parameters.poolDeposit)) {\n      throw new Error(\"Invalid 'poolDeposit': must be a non-negative integer\");\n    }\n    if (parameters.decentralisation < 0 || parameters.decentralisation > 1) {\n      throw new Error(\"Invalid 'decentralisation': must be between 0 and 1\");\n    }\n    if (parameters.priceMem < 0) {\n      throw new Error(\"Invalid 'priceMem': must be non-negative\");\n    }\n    if (parameters.priceStep < 0) {\n      throw new Error(\"Invalid 'priceStep': must be non-negative\");\n    }\n    if (parameters.maxValSize < 0 || !Number.isInteger(parameters.maxValSize)) {\n      throw new Error(\"Invalid 'maxValSize': must be a non-negative integer\");\n    }\n    if (parameters.collateralPercent < 0) {\n      throw new Error(\"Invalid 'collateralPercent': must be a non-negative integer\");\n    }\n    if (parameters.maxCollateralInputs < 0 || !Number.isInteger(parameters.maxCollateralInputs)) {\n      throw new Error(\"Invalid 'maxCollateralInputs': must be a non-negative integer\");\n    }\n    if (parameters.coinsPerUtxoSize < 0) {\n      throw new Error(\"Invalid 'coinsPerUtxoSize': must be non-negative\");\n    }\n    if (parameters.minFeeRefScriptCostPerByte < 0) {\n      throw new Error(\"Invalid 'minFeeRefScriptCostPerByte': must be non-negative\");\n    }\n    if (!_OfflineFetcher.isIntegerString(parameters.minPoolCost)) {\n      throw new Error(\"Invalid 'minPoolCost': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(parameters.maxTxExMem)) {\n      throw new Error(\"Invalid 'maxTxExMem': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(parameters.maxTxExSteps)) {\n      throw new Error(\"Invalid 'maxTxExSteps': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(parameters.maxBlockExMem)) {\n      throw new Error(\"Invalid 'maxBlockExMem': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(parameters.maxBlockExSteps)) {\n      throw new Error(\"Invalid 'maxBlockExSteps': must be a string of digits\");\n    }\n    this.protocolParameters[parameters.epoch] = parameters;\n  }\n  /**\n   * Adds transaction information to the fetcher.\n   * @param txInfo - Transaction information\n   * @throws Error if transaction info invalid\n   */\n  addTransaction(txInfo) {\n    if (!_OfflineFetcher.isValidHex(txInfo.hash, 64)) {\n      throw new Error(\"Invalid transaction hash: must be a 64-character hexadecimal string\");\n    }\n    if (!Number.isInteger(txInfo.index) || txInfo.index < 0) {\n      throw new Error(\"Invalid 'index': must be a non-negative integer\");\n    }\n    if (!_OfflineFetcher.isValidHex(txInfo.block, 64)) {\n      throw new Error(\"Invalid 'block': must be a 64-character hexadecimal string\");\n    }\n    if (!_OfflineFetcher.isIntegerString(txInfo.slot)) {\n      throw new Error(\"Invalid 'slot': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isIntegerString(txInfo.fees)) {\n      throw new Error(\"Invalid 'fees': must be a string of digits\");\n    }\n    if (!Number.isInteger(txInfo.size) || txInfo.size <= 0) {\n      throw new Error(\"Invalid 'size': must be a positive integer\");\n    }\n    if (!/^-?\\d+$/.test(txInfo.deposit)) {\n      throw new Error(\"Invalid 'deposit': must be a string representing an integer (positive or negative)\");\n    }\n    if (txInfo.invalidBefore !== \"\" && !_OfflineFetcher.isIntegerString(txInfo.invalidBefore)) {\n      throw new Error(\"Invalid 'invalidBefore': must be a string of digits or empty string\");\n    }\n    if (txInfo.invalidAfter !== \"\" && !_OfflineFetcher.isIntegerString(txInfo.invalidAfter)) {\n      throw new Error(\"Invalid 'invalidAfter': must be a string of digits or empty string\");\n    }\n    this.transactions[txInfo.hash] = txInfo;\n  }\n  /**\n   * Adds block information to the fetcher.\n   * @param blockInfo - Block information\n   * @throws Error if block info invalid\n   */\n  addBlock(blockInfo) {\n    if (!_OfflineFetcher.isValidHex(blockInfo.hash, 64)) {\n      throw new Error(\"Invalid block hash: must be a 64-character hexadecimal string\");\n    }\n    if (!Number.isInteger(blockInfo.time) || blockInfo.time < 0) {\n      throw new Error(\"Invalid 'time': must be a non-negative integer\");\n    }\n    if (!_OfflineFetcher.isIntegerString(blockInfo.slot)) {\n      throw new Error(\"Invalid 'slot': must be a string of digits\");\n    }\n    if (!Number.isInteger(blockInfo.epoch) || blockInfo.epoch < 0) {\n      throw new Error(\"Invalid 'epoch': must be a non-negative integer\");\n    }\n    if (!_OfflineFetcher.isIntegerString(blockInfo.epochSlot)) {\n      throw new Error(\"Invalid 'epochSlot': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isValidBech32Pool(blockInfo.slotLeader)) {\n      throw new Error(\"Invalid 'slotLeader': must be a bech32 string with pool prefix\");\n    }\n    if (!Number.isInteger(blockInfo.size) || blockInfo.size <= 0) {\n      throw new Error(\"Invalid 'size': must be a positive integer\");\n    }\n    if (!Number.isInteger(blockInfo.txCount) || blockInfo.txCount < 0) {\n      throw new Error(\"Invalid 'txCount': must be a non-negative integer\");\n    }\n    if (!_OfflineFetcher.isIntegerString(blockInfo.output)) {\n      throw new Error(\"Invalid 'output': must be a string of digits\");\n    }\n    if (!_OfflineFetcher.isValidHex(blockInfo.operationalCertificate, 64)) {\n      throw new Error(\"Invalid 'operationalCertificate': must be a 64-character hexadecimal string\");\n    }\n    if (!_OfflineFetcher.isValidHex(blockInfo.previousBlock, 64)) {\n      throw new Error(\"Invalid 'previousBlock': must be a 64-character hexadecimal string\");\n    }\n    if (!_OfflineFetcher.isValidBech32VrfVk(blockInfo.VRFKey)) {\n      throw new Error(\"Invalid 'VRFKey': must be a bech32 string with vrf_vk1 prefix\");\n    }\n    this.blocks[blockInfo.hash] = blockInfo;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/adapters.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/adapters.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/null.js\");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/xhr.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/fetch.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  fetch: _fetch_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(adapter) || adapter === null || adapter === false;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9hZGFwdGVycy9hZGFwdGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZ0M7QUFDSTtBQUNGO0FBQ0k7QUFDUzs7QUFFL0M7QUFDQSxRQUFRLGdEQUFXO0FBQ25CLE9BQU8sK0NBQVU7QUFDakIsU0FBUyxpREFBWTtBQUNyQjs7QUFFQSxpREFBSztBQUNMO0FBQ0E7QUFDQSx5Q0FBeUMsTUFBTTtBQUMvQyxNQUFNO0FBQ047QUFDQTtBQUNBLDhDQUE4QyxNQUFNO0FBQ3BEO0FBQ0EsQ0FBQzs7QUFFRCxzQ0FBc0MsT0FBTzs7QUFFN0Msc0NBQXNDLGlEQUFLOztBQUUzQyxpRUFBZTtBQUNmO0FBQ0EsZUFBZSxpREFBSzs7QUFFcEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7O0FBRUE7O0FBRUEsb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLDJEQUFVLHFCQUFxQixHQUFHO0FBQ3REO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSx5Q0FBeUMsSUFBSTtBQUM3QztBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxnQkFBZ0IsMkRBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQSxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMvYWRhcHRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCBodHRwQWRhcHRlciBmcm9tICcuL2h0dHAuanMnO1xuaW1wb3J0IHhockFkYXB0ZXIgZnJvbSAnLi94aHIuanMnO1xuaW1wb3J0IGZldGNoQWRhcHRlciBmcm9tICcuL2ZldGNoLmpzJztcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gXCIuLi9jb3JlL0F4aW9zRXJyb3IuanNcIjtcblxuY29uc3Qga25vd25BZGFwdGVycyA9IHtcbiAgaHR0cDogaHR0cEFkYXB0ZXIsXG4gIHhocjogeGhyQWRhcHRlcixcbiAgZmV0Y2g6IGZldGNoQWRhcHRlclxufVxuXG51dGlscy5mb3JFYWNoKGtub3duQWRhcHRlcnMsIChmbiwgdmFsdWUpID0+IHtcbiAgaWYgKGZuKSB7XG4gICAgdHJ5IHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwgJ25hbWUnLCB7dmFsdWV9KTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCAnYWRhcHRlck5hbWUnLCB7dmFsdWV9KTtcbiAgfVxufSk7XG5cbmNvbnN0IHJlbmRlclJlYXNvbiA9IChyZWFzb24pID0+IGAtICR7cmVhc29ufWA7XG5cbmNvbnN0IGlzUmVzb2x2ZWRIYW5kbGUgPSAoYWRhcHRlcikgPT4gdXRpbHMuaXNGdW5jdGlvbihhZGFwdGVyKSB8fCBhZGFwdGVyID09PSBudWxsIHx8IGFkYXB0ZXIgPT09IGZhbHNlO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGdldEFkYXB0ZXI6IChhZGFwdGVycykgPT4ge1xuICAgIGFkYXB0ZXJzID0gdXRpbHMuaXNBcnJheShhZGFwdGVycykgPyBhZGFwdGVycyA6IFthZGFwdGVyc107XG5cbiAgICBjb25zdCB7bGVuZ3RofSA9IGFkYXB0ZXJzO1xuICAgIGxldCBuYW1lT3JBZGFwdGVyO1xuICAgIGxldCBhZGFwdGVyO1xuXG4gICAgY29uc3QgcmVqZWN0ZWRSZWFzb25zID0ge307XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBuYW1lT3JBZGFwdGVyID0gYWRhcHRlcnNbaV07XG4gICAgICBsZXQgaWQ7XG5cbiAgICAgIGFkYXB0ZXIgPSBuYW1lT3JBZGFwdGVyO1xuXG4gICAgICBpZiAoIWlzUmVzb2x2ZWRIYW5kbGUobmFtZU9yQWRhcHRlcikpIHtcbiAgICAgICAgYWRhcHRlciA9IGtub3duQWRhcHRlcnNbKGlkID0gU3RyaW5nKG5hbWVPckFkYXB0ZXIpKS50b0xvd2VyQ2FzZSgpXTtcblxuICAgICAgICBpZiAoYWRhcHRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoYFVua25vd24gYWRhcHRlciAnJHtpZH0nYCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGFkYXB0ZXIpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHJlamVjdGVkUmVhc29uc1tpZCB8fCAnIycgKyBpXSA9IGFkYXB0ZXI7XG4gICAgfVxuXG4gICAgaWYgKCFhZGFwdGVyKSB7XG5cbiAgICAgIGNvbnN0IHJlYXNvbnMgPSBPYmplY3QuZW50cmllcyhyZWplY3RlZFJlYXNvbnMpXG4gICAgICAgIC5tYXAoKFtpZCwgc3RhdGVdKSA9PiBgYWRhcHRlciAke2lkfSBgICtcbiAgICAgICAgICAoc3RhdGUgPT09IGZhbHNlID8gJ2lzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGVudmlyb25tZW50JyA6ICdpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBidWlsZCcpXG4gICAgICAgICk7XG5cbiAgICAgIGxldCBzID0gbGVuZ3RoID9cbiAgICAgICAgKHJlYXNvbnMubGVuZ3RoID4gMSA/ICdzaW5jZSA6XFxuJyArIHJlYXNvbnMubWFwKHJlbmRlclJlYXNvbikuam9pbignXFxuJykgOiAnICcgKyByZW5kZXJSZWFzb24ocmVhc29uc1swXSkpIDpcbiAgICAgICAgJ2FzIG5vIGFkYXB0ZXIgc3BlY2lmaWVkJztcblxuICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoXG4gICAgICAgIGBUaGVyZSBpcyBubyBzdWl0YWJsZSBhZGFwdGVyIHRvIGRpc3BhdGNoIHRoZSByZXF1ZXN0IGAgKyBzLFxuICAgICAgICAnRVJSX05PVF9TVVBQT1JUJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gYWRhcHRlcjtcbiAgfSxcbiAgYWRhcHRlcnM6IGtub3duQWRhcHRlcnNcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/adapters.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/fetch.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/fetch.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/composeSignals.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/composeSignals.js\");\n/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/trackStream.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/trackStream.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/resolveConfig.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/settle.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/settle.js\");\n\n\n\n\n\n\n\n\n\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](`Response type '${type}' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isBlob(body)) {\n    return body.size;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isSpecCompliantForm(body)) {\n    const _request = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBufferView(body) || _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n          requestContentLength,\n          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onUploadProgress))\n        );\n\n        data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventDecorator)(\n        responseContentLength,\n        (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.progressEventReducer)((0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_5__.asyncDecorator)(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_6__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(resolve, reject, {\n        data: responseData,\n        headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"].from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].from(err, err && err.code, config, request);\n  }\n}));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/xhr.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/xhr.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../core/settle.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/settle.js\");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/transitional.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseProtocol.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/progressEventReducer.js\");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/resolveConfig.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(config);\n    let requestData = _config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Request aborted', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Network Error', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__.progressEventReducer)(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_config.url);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('Unsupported protocol ' + protocol + ':', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/xhr.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/axios.js":
/*!************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/axios.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/bind.js\");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/Axios.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/formDataToJSON.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CancelToken.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/spread.js\");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAxiosError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/adapters.js\");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/HttpStatusCode.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"].getAdapter;\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9heGlvcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBYTs7QUFFa0I7QUFDTTtBQUNEO0FBQ1k7QUFDTDtBQUNjO0FBQ0g7QUFDSjtBQUNOO0FBQ047QUFDVztBQUNIO0FBQ0w7QUFDWTtBQUNIO0FBQ0o7QUFDVzs7QUFFekQ7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQUs7QUFDM0IsbUJBQW1CLDREQUFJLENBQUMsc0RBQUs7O0FBRTdCO0FBQ0EsRUFBRSxpREFBSyxrQkFBa0Isc0RBQUssc0JBQXNCLGlCQUFpQjs7QUFFckU7QUFDQSxFQUFFLGlEQUFLLGtDQUFrQyxpQkFBaUI7O0FBRTFEO0FBQ0E7QUFDQSwwQkFBMEIsZ0VBQVc7QUFDckM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDZCQUE2QiwwREFBUTs7QUFFckM7QUFDQSxjQUFjLHNEQUFLOztBQUVuQjtBQUNBLHNCQUFzQixnRUFBYTtBQUNuQyxvQkFBb0IsOERBQVc7QUFDL0IsaUJBQWlCLDJEQUFRO0FBQ3pCLGdCQUFnQixpREFBTztBQUN2QixtQkFBbUIsOERBQVU7O0FBRTdCO0FBQ0EsbUJBQW1CLDREQUFVOztBQUU3QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsMkRBQU07O0FBRXJCO0FBQ0EscUJBQXFCLGlFQUFZOztBQUVqQztBQUNBLG9CQUFvQiw0REFBVzs7QUFFL0IscUJBQXFCLDhEQUFZOztBQUVqQyw0QkFBNEIsdUVBQWMsQ0FBQyxpREFBSzs7QUFFaEQsbUJBQW1CLDhEQUFROztBQUUzQix1QkFBdUIsbUVBQWM7O0FBRXJDOztBQUVBO0FBQ0EsaUVBQWUsS0FBSyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2F4aW9zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vdXRpbHMuanMnO1xuaW1wb3J0IGJpbmQgZnJvbSAnLi9oZWxwZXJzL2JpbmQuanMnO1xuaW1wb3J0IEF4aW9zIGZyb20gJy4vY29yZS9BeGlvcy5qcyc7XG5pbXBvcnQgbWVyZ2VDb25maWcgZnJvbSAnLi9jb3JlL21lcmdlQ29uZmlnLmpzJztcbmltcG9ydCBkZWZhdWx0cyBmcm9tICcuL2RlZmF1bHRzL2luZGV4LmpzJztcbmltcG9ydCBmb3JtRGF0YVRvSlNPTiBmcm9tICcuL2hlbHBlcnMvZm9ybURhdGFUb0pTT04uanMnO1xuaW1wb3J0IENhbmNlbGVkRXJyb3IgZnJvbSAnLi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qcyc7XG5pbXBvcnQgQ2FuY2VsVG9rZW4gZnJvbSAnLi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMnO1xuaW1wb3J0IGlzQ2FuY2VsIGZyb20gJy4vY2FuY2VsL2lzQ2FuY2VsLmpzJztcbmltcG9ydCB7VkVSU0lPTn0gZnJvbSAnLi9lbnYvZGF0YS5qcyc7XG5pbXBvcnQgdG9Gb3JtRGF0YSBmcm9tICcuL2hlbHBlcnMvdG9Gb3JtRGF0YS5qcyc7XG5pbXBvcnQgQXhpb3NFcnJvciBmcm9tICcuL2NvcmUvQXhpb3NFcnJvci5qcyc7XG5pbXBvcnQgc3ByZWFkIGZyb20gJy4vaGVscGVycy9zcHJlYWQuanMnO1xuaW1wb3J0IGlzQXhpb3NFcnJvciBmcm9tICcuL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzJztcbmltcG9ydCBBeGlvc0hlYWRlcnMgZnJvbSBcIi4vY29yZS9BeGlvc0hlYWRlcnMuanNcIjtcbmltcG9ydCBhZGFwdGVycyBmcm9tICcuL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzJztcbmltcG9ydCBIdHRwU3RhdHVzQ29kZSBmcm9tICcuL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanMnO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKlxuICogQHJldHVybnMge0F4aW9zfSBBIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICovXG5mdW5jdGlvbiBjcmVhdGVJbnN0YW5jZShkZWZhdWx0Q29uZmlnKSB7XG4gIGNvbnN0IGNvbnRleHQgPSBuZXcgQXhpb3MoZGVmYXVsdENvbmZpZyk7XG4gIGNvbnN0IGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQsIHthbGxPd25LZXlzOiB0cnVlfSk7XG5cbiAgLy8gQ29weSBjb250ZXh0IHRvIGluc3RhbmNlXG4gIHV0aWxzLmV4dGVuZChpbnN0YW5jZSwgY29udGV4dCwgbnVsbCwge2FsbE93bktleXM6IHRydWV9KTtcblxuICAvLyBGYWN0b3J5IGZvciBjcmVhdGluZyBuZXcgaW5zdGFuY2VzXG4gIGluc3RhbmNlLmNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpbnN0YW5jZUNvbmZpZykge1xuICAgIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhkZWZhdWx0Q29uZmlnLCBpbnN0YW5jZUNvbmZpZykpO1xuICB9O1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG5jb25zdCBheGlvcyA9IGNyZWF0ZUluc3RhbmNlKGRlZmF1bHRzKTtcblxuLy8gRXhwb3NlIEF4aW9zIGNsYXNzIHRvIGFsbG93IGNsYXNzIGluaGVyaXRhbmNlXG5heGlvcy5BeGlvcyA9IEF4aW9zO1xuXG4vLyBFeHBvc2UgQ2FuY2VsICYgQ2FuY2VsVG9rZW5cbmF4aW9zLkNhbmNlbGVkRXJyb3IgPSBDYW5jZWxlZEVycm9yO1xuYXhpb3MuQ2FuY2VsVG9rZW4gPSBDYW5jZWxUb2tlbjtcbmF4aW9zLmlzQ2FuY2VsID0gaXNDYW5jZWw7XG5heGlvcy5WRVJTSU9OID0gVkVSU0lPTjtcbmF4aW9zLnRvRm9ybURhdGEgPSB0b0Zvcm1EYXRhO1xuXG4vLyBFeHBvc2UgQXhpb3NFcnJvciBjbGFzc1xuYXhpb3MuQXhpb3NFcnJvciA9IEF4aW9zRXJyb3I7XG5cbi8vIGFsaWFzIGZvciBDYW5jZWxlZEVycm9yIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5XG5heGlvcy5DYW5jZWwgPSBheGlvcy5DYW5jZWxlZEVycm9yO1xuXG4vLyBFeHBvc2UgYWxsL3NwcmVhZFxuYXhpb3MuYWxsID0gZnVuY3Rpb24gYWxsKHByb21pc2VzKSB7XG4gIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcyk7XG59O1xuXG5heGlvcy5zcHJlYWQgPSBzcHJlYWQ7XG5cbi8vIEV4cG9zZSBpc0F4aW9zRXJyb3JcbmF4aW9zLmlzQXhpb3NFcnJvciA9IGlzQXhpb3NFcnJvcjtcblxuLy8gRXhwb3NlIG1lcmdlQ29uZmlnXG5heGlvcy5tZXJnZUNvbmZpZyA9IG1lcmdlQ29uZmlnO1xuXG5heGlvcy5BeGlvc0hlYWRlcnMgPSBBeGlvc0hlYWRlcnM7XG5cbmF4aW9zLmZvcm1Ub0pTT04gPSB0aGluZyA9PiBmb3JtRGF0YVRvSlNPTih1dGlscy5pc0hUTUxGb3JtKHRoaW5nKSA/IG5ldyBGb3JtRGF0YSh0aGluZykgOiB0aGluZyk7XG5cbmF4aW9zLmdldEFkYXB0ZXIgPSBhZGFwdGVycy5nZXRBZGFwdGVyO1xuXG5heGlvcy5IdHRwU3RhdHVzQ29kZSA9IEh0dHBTdGF0dXNDb2RlO1xuXG5heGlvcy5kZWZhdWx0ID0gYXhpb3M7XG5cbi8vIHRoaXMgbW9kdWxlIHNob3VsZCBvbmx5IGhhdmUgYSBkZWZhdWx0IGV4cG9ydFxuZXhwb3J0IGRlZmF1bHQgYXhpb3NcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/axios.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CancelToken.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CancelToken.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CancelToken);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsVG9rZW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFa0M7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx5QkFBeUIseURBQWE7QUFDdEM7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY2FuY2VsL0NhbmNlbFRva2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IENhbmNlbGVkRXJyb3IgZnJvbSAnLi9DYW5jZWxlZEVycm9yLmpzJztcblxuLyoqXG4gKiBBIGBDYW5jZWxUb2tlbmAgaXMgYW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVxdWVzdCBjYW5jZWxsYXRpb24gb2YgYW4gb3BlcmF0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7Q2FuY2VsVG9rZW59XG4gKi9cbmNsYXNzIENhbmNlbFRva2VuIHtcbiAgY29uc3RydWN0b3IoZXhlY3V0b3IpIHtcbiAgICBpZiAodHlwZW9mIGV4ZWN1dG9yICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleGVjdXRvciBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgbGV0IHJlc29sdmVQcm9taXNlO1xuXG4gICAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICAgIHJlc29sdmVQcm9taXNlID0gcmVzb2x2ZTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHRva2VuID0gdGhpcztcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdGhpcy5wcm9taXNlLnRoZW4oY2FuY2VsID0+IHtcbiAgICAgIGlmICghdG9rZW4uX2xpc3RlbmVycykgcmV0dXJuO1xuXG4gICAgICBsZXQgaSA9IHRva2VuLl9saXN0ZW5lcnMubGVuZ3RoO1xuXG4gICAgICB3aGlsZSAoaS0tID4gMCkge1xuICAgICAgICB0b2tlbi5fbGlzdGVuZXJzW2ldKGNhbmNlbCk7XG4gICAgICB9XG4gICAgICB0b2tlbi5fbGlzdGVuZXJzID0gbnVsbDtcbiAgICB9KTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gICAgdGhpcy5wcm9taXNlLnRoZW4gPSBvbmZ1bGZpbGxlZCA9PiB7XG4gICAgICBsZXQgX3Jlc29sdmU7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICB0b2tlbi5zdWJzY3JpYmUocmVzb2x2ZSk7XG4gICAgICAgIF9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgIH0pLnRoZW4ob25mdWxmaWxsZWQpO1xuXG4gICAgICBwcm9taXNlLmNhbmNlbCA9IGZ1bmN0aW9uIHJlamVjdCgpIHtcbiAgICAgICAgdG9rZW4udW5zdWJzY3JpYmUoX3Jlc29sdmUpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHByb21pc2U7XG4gICAgfTtcblxuICAgIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlLCBjb25maWcsIHJlcXVlc3QpIHtcbiAgICAgIGlmICh0b2tlbi5yZWFzb24pIHtcbiAgICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbGVkRXJyb3IobWVzc2FnZSwgY29uZmlnLCByZXF1ZXN0KTtcbiAgICAgIHJlc29sdmVQcm9taXNlKHRva2VuLnJlYXNvbik7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogVGhyb3dzIGEgYENhbmNlbGVkRXJyb3JgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gICAqL1xuICB0aHJvd0lmUmVxdWVzdGVkKCkge1xuICAgIGlmICh0aGlzLnJlYXNvbikge1xuICAgICAgdGhyb3cgdGhpcy5yZWFzb247XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFN1YnNjcmliZSB0byB0aGUgY2FuY2VsIHNpZ25hbFxuICAgKi9cblxuICBzdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAodGhpcy5yZWFzb24pIHtcbiAgICAgIGxpc3RlbmVyKHRoaXMucmVhc29uKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbGlzdGVuZXJzKSB7XG4gICAgICB0aGlzLl9saXN0ZW5lcnMucHVzaChsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2xpc3RlbmVycyA9IFtsaXN0ZW5lcl07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFVuc3Vic2NyaWJlIGZyb20gdGhlIGNhbmNlbCBzaWduYWxcbiAgICovXG5cbiAgdW5zdWJzY3JpYmUobGlzdGVuZXIpIHtcbiAgICBpZiAoIXRoaXMuX2xpc3RlbmVycykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IHRoaXMuX2xpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICB0aGlzLl9saXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gIH1cblxuICB0b0Fib3J0U2lnbmFsKCkge1xuICAgIGNvbnN0IGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG5cbiAgICBjb25zdCBhYm9ydCA9IChlcnIpID0+IHtcbiAgICAgIGNvbnRyb2xsZXIuYWJvcnQoZXJyKTtcbiAgICB9O1xuXG4gICAgdGhpcy5zdWJzY3JpYmUoYWJvcnQpO1xuXG4gICAgY29udHJvbGxlci5zaWduYWwudW5zdWJzY3JpYmUgPSAoKSA9PiB0aGlzLnVuc3Vic2NyaWJlKGFib3J0KTtcblxuICAgIHJldHVybiBjb250cm9sbGVyLnNpZ25hbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGEgbmV3IGBDYW5jZWxUb2tlbmAgYW5kIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsXG4gICAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gICAqL1xuICBzdGF0aWMgc291cmNlKCkge1xuICAgIGxldCBjYW5jZWw7XG4gICAgY29uc3QgdG9rZW4gPSBuZXcgQ2FuY2VsVG9rZW4oZnVuY3Rpb24gZXhlY3V0b3IoYykge1xuICAgICAgY2FuY2VsID0gYztcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgdG9rZW4sXG4gICAgICBjYW5jZWxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhbmNlbFRva2VuO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CancelToken.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].call(this, message == null ? 'canceled' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanceledError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsZWRFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFa0M7QUFDZjs7QUFFaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEI7QUFDQSxhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsRUFBRSwyREFBVSxvREFBb0QsMkRBQVU7QUFDMUU7QUFDQTs7QUFFQSxpREFBSyx5QkFBeUIsMkRBQVU7QUFDeEM7QUFDQSxDQUFDOztBQUVELGlFQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxlZEVycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IEF4aW9zRXJyb3IgZnJvbSAnLi4vY29yZS9BeGlvc0Vycm9yLmpzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbi8qKlxuICogQSBgQ2FuY2VsZWRFcnJvcmAgaXMgYW4gb2JqZWN0IHRoYXQgaXMgdGhyb3duIHdoZW4gYW4gb3BlcmF0aW9uIGlzIGNhbmNlbGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqIEBwYXJhbSB7T2JqZWN0PX0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge09iamVjdD19IHJlcXVlc3QgVGhlIHJlcXVlc3QuXG4gKlxuICogQHJldHVybnMge0NhbmNlbGVkRXJyb3J9IFRoZSBjcmVhdGVkIGVycm9yLlxuICovXG5mdW5jdGlvbiBDYW5jZWxlZEVycm9yKG1lc3NhZ2UsIGNvbmZpZywgcmVxdWVzdCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZXEtbnVsbCxlcWVxZXFcbiAgQXhpb3NFcnJvci5jYWxsKHRoaXMsIG1lc3NhZ2UgPT0gbnVsbCA/ICdjYW5jZWxlZCcgOiBtZXNzYWdlLCBBeGlvc0Vycm9yLkVSUl9DQU5DRUxFRCwgY29uZmlnLCByZXF1ZXN0KTtcbiAgdGhpcy5uYW1lID0gJ0NhbmNlbGVkRXJyb3InO1xufVxuXG51dGlscy5pbmhlcml0cyhDYW5jZWxlZEVycm9yLCBBeGlvc0Vycm9yLCB7XG4gIF9fQ0FOQ0VMX186IHRydWVcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBDYW5jZWxlZEVycm9yO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/isCancel.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/isCancel.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isCancel)\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvaXNDYW5jZWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUVFO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/isCancel.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/Axios.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/Axios.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/buildURL.js\");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/InterceptorManager.js\");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/dispatchRequest.js\");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/validator.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Axios);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/Axios.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosError);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBYTs7QUFFbUI7O0FBRWhDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpREFBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlEQUFLO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QixDQUFDOztBQUVEO0FBQ0Esa0RBQWtELFlBQVk7O0FBRTlEO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLGlEQUFLO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHOztBQUVIOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsVUFBVSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9BeGlvc0Vycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtjb25maWddIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge09iamVjdH0gW3JlcXVlc3RdIFRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXNwb25zZV0gVGhlIHJlc3BvbnNlLlxuICpcbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIEF4aW9zRXJyb3IobWVzc2FnZSwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBFcnJvci5jYWxsKHRoaXMpO1xuXG4gIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHRoaXMuY29uc3RydWN0b3IpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuc3RhY2sgPSAobmV3IEVycm9yKCkpLnN0YWNrO1xuICB9XG5cbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgdGhpcy5uYW1lID0gJ0F4aW9zRXJyb3InO1xuICBjb2RlICYmICh0aGlzLmNvZGUgPSBjb2RlKTtcbiAgY29uZmlnICYmICh0aGlzLmNvbmZpZyA9IGNvbmZpZyk7XG4gIHJlcXVlc3QgJiYgKHRoaXMucmVxdWVzdCA9IHJlcXVlc3QpO1xuICBpZiAocmVzcG9uc2UpIHtcbiAgICB0aGlzLnJlc3BvbnNlID0gcmVzcG9uc2U7XG4gICAgdGhpcy5zdGF0dXMgPSByZXNwb25zZS5zdGF0dXMgPyByZXNwb25zZS5zdGF0dXMgOiBudWxsO1xuICB9XG59XG5cbnV0aWxzLmluaGVyaXRzKEF4aW9zRXJyb3IsIEVycm9yLCB7XG4gIHRvSlNPTjogZnVuY3Rpb24gdG9KU09OKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvLyBTdGFuZGFyZFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLFxuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgLy8gTWljcm9zb2Z0XG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIG51bWJlcjogdGhpcy5udW1iZXIsXG4gICAgICAvLyBNb3ppbGxhXG4gICAgICBmaWxlTmFtZTogdGhpcy5maWxlTmFtZSxcbiAgICAgIGxpbmVOdW1iZXI6IHRoaXMubGluZU51bWJlcixcbiAgICAgIGNvbHVtbk51bWJlcjogdGhpcy5jb2x1bW5OdW1iZXIsXG4gICAgICBzdGFjazogdGhpcy5zdGFjayxcbiAgICAgIC8vIEF4aW9zXG4gICAgICBjb25maWc6IHV0aWxzLnRvSlNPTk9iamVjdCh0aGlzLmNvbmZpZyksXG4gICAgICBjb2RlOiB0aGlzLmNvZGUsXG4gICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzXG4gICAgfTtcbiAgfVxufSk7XG5cbmNvbnN0IHByb3RvdHlwZSA9IEF4aW9zRXJyb3IucHJvdG90eXBlO1xuY29uc3QgZGVzY3JpcHRvcnMgPSB7fTtcblxuW1xuICAnRVJSX0JBRF9PUFRJT05fVkFMVUUnLFxuICAnRVJSX0JBRF9PUFRJT04nLFxuICAnRUNPTk5BQk9SVEVEJyxcbiAgJ0VUSU1FRE9VVCcsXG4gICdFUlJfTkVUV09SSycsXG4gICdFUlJfRlJfVE9PX01BTllfUkVESVJFQ1RTJyxcbiAgJ0VSUl9ERVBSRUNBVEVEJyxcbiAgJ0VSUl9CQURfUkVTUE9OU0UnLFxuICAnRVJSX0JBRF9SRVFVRVNUJyxcbiAgJ0VSUl9DQU5DRUxFRCcsXG4gICdFUlJfTk9UX1NVUFBPUlQnLFxuICAnRVJSX0lOVkFMSURfVVJMJ1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbl0uZm9yRWFjaChjb2RlID0+IHtcbiAgZGVzY3JpcHRvcnNbY29kZV0gPSB7dmFsdWU6IGNvZGV9O1xufSk7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKEF4aW9zRXJyb3IsIGRlc2NyaXB0b3JzKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90b3R5cGUsICdpc0F4aW9zRXJyb3InLCB7dmFsdWU6IHRydWV9KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbkF4aW9zRXJyb3IuZnJvbSA9IChlcnJvciwgY29kZSwgY29uZmlnLCByZXF1ZXN0LCByZXNwb25zZSwgY3VzdG9tUHJvcHMpID0+IHtcbiAgY29uc3QgYXhpb3NFcnJvciA9IE9iamVjdC5jcmVhdGUocHJvdG90eXBlKTtcblxuICB1dGlscy50b0ZsYXRPYmplY3QoZXJyb3IsIGF4aW9zRXJyb3IsIGZ1bmN0aW9uIGZpbHRlcihvYmopIHtcbiAgICByZXR1cm4gb2JqICE9PSBFcnJvci5wcm90b3R5cGU7XG4gIH0sIHByb3AgPT4ge1xuICAgIHJldHVybiBwcm9wICE9PSAnaXNBeGlvc0Vycm9yJztcbiAgfSk7XG5cbiAgQXhpb3NFcnJvci5jYWxsKGF4aW9zRXJyb3IsIGVycm9yLm1lc3NhZ2UsIGNvZGUsIGNvbmZpZywgcmVxdWVzdCwgcmVzcG9uc2UpO1xuXG4gIGF4aW9zRXJyb3IuY2F1c2UgPSBlcnJvcjtcblxuICBheGlvc0Vycm9yLm5hbWUgPSBlcnJvci5uYW1lO1xuXG4gIGN1c3RvbVByb3BzICYmIE9iamVjdC5hc3NpZ24oYXhpb3NFcnJvciwgY3VzdG9tUHJvcHMpO1xuXG4gIHJldHVybiBheGlvc0Vycm9yO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXhpb3NFcnJvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseHeaders.js\");\n\n\n\n\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(header), valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosHeaders);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/InterceptorManager.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/InterceptorManager.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InterceptorManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0ludGVyY2VwdG9yTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUVxQjs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCLGFBQWEsVUFBVTtBQUN2QjtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBLGVBQWUsU0FBUztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLElBQUksaURBQUs7QUFDVDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSxpRUFBZSxrQkFBa0IsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvSW50ZXJjZXB0b3JNYW5hZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuXG5jbGFzcyBJbnRlcmNlcHRvck1hbmFnZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmhhbmRsZXJzID0gW107XG4gIH1cblxuICAvKipcbiAgICogQWRkIGEgbmV3IGludGVyY2VwdG9yIHRvIHRoZSBzdGFja1xuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdWxmaWxsZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgdGhlbmAgZm9yIGEgYFByb21pc2VgXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IHJlamVjdGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHJlamVjdGAgZm9yIGEgYFByb21pc2VgXG4gICAqXG4gICAqIEByZXR1cm4ge051bWJlcn0gQW4gSUQgdXNlZCB0byByZW1vdmUgaW50ZXJjZXB0b3IgbGF0ZXJcbiAgICovXG4gIHVzZShmdWxmaWxsZWQsIHJlamVjdGVkLCBvcHRpb25zKSB7XG4gICAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICAgIGZ1bGZpbGxlZCxcbiAgICAgIHJlamVjdGVkLFxuICAgICAgc3luY2hyb25vdXM6IG9wdGlvbnMgPyBvcHRpb25zLnN5bmNocm9ub3VzIDogZmFsc2UsXG4gICAgICBydW5XaGVuOiBvcHRpb25zID8gb3B0aW9ucy5ydW5XaGVuIDogbnVsbFxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG4gIH1cblxuICAvKipcbiAgICogUmVtb3ZlIGFuIGludGVyY2VwdG9yIGZyb20gdGhlIHN0YWNrXG4gICAqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAgICpcbiAgICogQHJldHVybnMge0Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgaW50ZXJjZXB0b3Igd2FzIHJlbW92ZWQsIGBmYWxzZWAgb3RoZXJ3aXNlXG4gICAqL1xuICBlamVjdChpZCkge1xuICAgIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgICAgdGhpcy5oYW5kbGVyc1tpZF0gPSBudWxsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhciBhbGwgaW50ZXJjZXB0b3JzIGZyb20gdGhlIHN0YWNrXG4gICAqXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgY2xlYXIoKSB7XG4gICAgaWYgKHRoaXMuaGFuZGxlcnMpIHtcbiAgICAgIHRoaXMuaGFuZGxlcnMgPSBbXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSXRlcmF0ZSBvdmVyIGFsbCB0aGUgcmVnaXN0ZXJlZCBpbnRlcmNlcHRvcnNcbiAgICpcbiAgICogVGhpcyBtZXRob2QgaXMgcGFydGljdWxhcmx5IHVzZWZ1bCBmb3Igc2tpcHBpbmcgb3ZlciBhbnlcbiAgICogaW50ZXJjZXB0b3JzIHRoYXQgbWF5IGhhdmUgYmVjb21lIGBudWxsYCBjYWxsaW5nIGBlamVjdGAuXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBjYWxsIGZvciBlYWNoIGludGVyY2VwdG9yXG4gICAqXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cbiAgZm9yRWFjaChmbikge1xuICAgIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgICAgaWYgKGggIT09IG51bGwpIHtcbiAgICAgICAgZm4oaCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW50ZXJjZXB0b3JNYW5hZ2VyO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/InterceptorManager.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/buildFullPath.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/buildFullPath.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildFullPath)\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/combineURLs.js\");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWE7O0FBRTJDO0FBQ0o7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ2U7QUFDZixrQkFBa0IscUVBQWE7QUFDL0IsV0FBVyxtRUFBVztBQUN0QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgaXNBYnNvbHV0ZVVSTCBmcm9tICcuLi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMnO1xuaW1wb3J0IGNvbWJpbmVVUkxzIGZyb20gJy4uL2hlbHBlcnMvY29tYmluZVVSTHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgYmFzZVVSTCB3aXRoIHRoZSByZXF1ZXN0ZWRVUkwsXG4gKiBvbmx5IHdoZW4gdGhlIHJlcXVlc3RlZFVSTCBpcyBub3QgYWxyZWFkeSBhbiBhYnNvbHV0ZSBVUkwuXG4gKiBJZiB0aGUgcmVxdWVzdFVSTCBpcyBhYnNvbHV0ZSwgdGhpcyBmdW5jdGlvbiByZXR1cm5zIHRoZSByZXF1ZXN0ZWRVUkwgdW50b3VjaGVkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlcXVlc3RlZFVSTCBBYnNvbHV0ZSBvciByZWxhdGl2ZSBVUkwgdG8gY29tYmluZVxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBmdWxsIHBhdGhcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/buildFullPath.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/dispatchRequest.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/dispatchRequest.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dispatchRequest)\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/transformData.js\");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/isCancel.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/adapters/adapters.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWE7O0FBRWtDO0FBQ0Y7QUFDRDtBQUNXO0FBQ0o7QUFDSjs7QUFFL0M7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLGdFQUFhO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ2U7QUFDZjs7QUFFQSxtQkFBbUIsNkRBQVk7O0FBRS9CO0FBQ0EsZ0JBQWdCLHlEQUFhO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLDZEQUFRLDhCQUE4QiwwREFBUTs7QUFFaEU7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQix5REFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsNkRBQVk7O0FBRW5DO0FBQ0EsR0FBRztBQUNILFNBQVMsK0RBQVE7QUFDakI7O0FBRUE7QUFDQTtBQUNBLCtCQUErQix5REFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw2REFBWTtBQUM5QztBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9kaXNwYXRjaFJlcXVlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdHJhbnNmb3JtRGF0YSBmcm9tICcuL3RyYW5zZm9ybURhdGEuanMnO1xuaW1wb3J0IGlzQ2FuY2VsIGZyb20gJy4uL2NhbmNlbC9pc0NhbmNlbC5qcyc7XG5pbXBvcnQgZGVmYXVsdHMgZnJvbSAnLi4vZGVmYXVsdHMvaW5kZXguanMnO1xuaW1wb3J0IENhbmNlbGVkRXJyb3IgZnJvbSAnLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3IuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tICcuLi9jb3JlL0F4aW9zSGVhZGVycy5qcyc7XG5pbXBvcnQgYWRhcHRlcnMgZnJvbSBcIi4uL2FkYXB0ZXJzL2FkYXB0ZXJzLmpzXCI7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGVkRXJyb3JgIGlmIGNhbmNlbGxhdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHRoYXQgaXMgdG8gYmUgdXNlZCBmb3IgdGhlIHJlcXVlc3RcbiAqXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cblxuICBpZiAoY29uZmlnLnNpZ25hbCAmJiBjb25maWcuc2lnbmFsLmFib3J0ZWQpIHtcbiAgICB0aHJvdyBuZXcgQ2FuY2VsZWRFcnJvcihudWxsLCBjb25maWcpO1xuICB9XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0IHRvIHRoZSBzZXJ2ZXIgdXNpbmcgdGhlIGNvbmZpZ3VyZWQgYWRhcHRlci5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIFRoZSBjb25maWcgdGhhdCBpcyB0byBiZSB1c2VkIGZvciB0aGUgcmVxdWVzdFxuICpcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBUaGUgUHJvbWlzZSB0byBiZSBmdWxmaWxsZWRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgY29uZmlnLmhlYWRlcnMgPSBBeGlvc0hlYWRlcnMuZnJvbShjb25maWcuaGVhZGVycyk7XG5cbiAgLy8gVHJhbnNmb3JtIHJlcXVlc3QgZGF0YVxuICBjb25maWcuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICBjb25maWcsXG4gICAgY29uZmlnLnRyYW5zZm9ybVJlcXVlc3RcbiAgKTtcblxuICBpZiAoWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLmluZGV4T2YoY29uZmlnLm1ldGhvZCkgIT09IC0xKSB7XG4gICAgY29uZmlnLmhlYWRlcnMuc2V0Q29udGVudFR5cGUoJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcsIGZhbHNlKTtcbiAgfVxuXG4gIGNvbnN0IGFkYXB0ZXIgPSBhZGFwdGVycy5nZXRBZGFwdGVyKGNvbmZpZy5hZGFwdGVyIHx8IGRlZmF1bHRzLmFkYXB0ZXIpO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YS5jYWxsKFxuICAgICAgY29uZmlnLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlLFxuICAgICAgcmVzcG9uc2VcbiAgICApO1xuXG4gICAgcmVzcG9uc2UuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKHJlc3BvbnNlLmhlYWRlcnMpO1xuXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xuICB9LCBmdW5jdGlvbiBvbkFkYXB0ZXJSZWplY3Rpb24ocmVhc29uKSB7XG4gICAgaWYgKCFpc0NhbmNlbChyZWFzb24pKSB7XG4gICAgICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgICAgIC8vIFRyYW5zZm9ybSByZXNwb25zZSBkYXRhXG4gICAgICBpZiAocmVhc29uICYmIHJlYXNvbi5yZXNwb25zZSkge1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuZGF0YSA9IHRyYW5zZm9ybURhdGEuY2FsbChcbiAgICAgICAgICBjb25maWcsXG4gICAgICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZVxuICAgICAgICApO1xuICAgICAgICByZWFzb24ucmVzcG9uc2UuaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QocmVhc29uKTtcbiAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/dispatchRequest.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mergeConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL21lcmdlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhOztBQUVtQjtBQUNhOztBQUU3QyxvREFBb0Qsd0RBQVksS0FBSyxXQUFXOztBQUVoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVEsaURBQUssMEJBQTBCLGlEQUFLO0FBQzVDLGFBQWEsaURBQUssYUFBYSxTQUFTO0FBQ3hDLE1BQU0sU0FBUyxpREFBSztBQUNwQixhQUFhLGlEQUFLLFNBQVM7QUFDM0IsTUFBTSxTQUFTLGlEQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLGlEQUFLO0FBQ2Q7QUFDQSxNQUFNLFVBQVUsaURBQUs7QUFDckI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLGlEQUFLO0FBQ2Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTLGlEQUFLO0FBQ2Q7QUFDQSxNQUFNLFVBQVUsaURBQUs7QUFDckI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLGlEQUFLLHFDQUFxQztBQUM1QztBQUNBO0FBQ0EsS0FBSyxpREFBSztBQUNWLEdBQUc7O0FBRUg7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tIFwiLi9BeGlvc0hlYWRlcnMuanNcIjtcblxuY29uc3QgaGVhZGVyc1RvT2JqZWN0ID0gKHRoaW5nKSA9PiB0aGluZyBpbnN0YW5jZW9mIEF4aW9zSGVhZGVycyA/IHsgLi4udGhpbmcgfSA6IHRoaW5nO1xuXG4vKipcbiAqIENvbmZpZy1zcGVjaWZpYyBtZXJnZS1mdW5jdGlvbiB3aGljaCBjcmVhdGVzIGEgbmV3IGNvbmZpZy1vYmplY3RcbiAqIGJ5IG1lcmdpbmcgdHdvIGNvbmZpZ3VyYXRpb24gb2JqZWN0cyB0b2dldGhlci5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnMVxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzJcbiAqXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcmdlQ29uZmlnKGNvbmZpZzEsIGNvbmZpZzIpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIGNvbmZpZzIgPSBjb25maWcyIHx8IHt9O1xuICBjb25zdCBjb25maWcgPSB7fTtcblxuICBmdW5jdGlvbiBnZXRNZXJnZWRWYWx1ZSh0YXJnZXQsIHNvdXJjZSwgcHJvcCwgY2FzZWxlc3MpIHtcbiAgICBpZiAodXRpbHMuaXNQbGFpbk9iamVjdCh0YXJnZXQpICYmIHV0aWxzLmlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHV0aWxzLm1lcmdlLmNhbGwoe2Nhc2VsZXNzfSwgdGFyZ2V0LCBzb3VyY2UpO1xuICAgIH0gZWxzZSBpZiAodXRpbHMuaXNQbGFpbk9iamVjdChzb3VyY2UpKSB7XG4gICAgICByZXR1cm4gdXRpbHMubWVyZ2Uoe30sIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiBzb3VyY2Uuc2xpY2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIHNvdXJjZTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURlZXBQcm9wZXJ0aWVzKGEsIGIsIHByb3AgLCBjYXNlbGVzcykge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoYikpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShhLCBiLCBwcm9wICwgY2FzZWxlc3MpO1xuICAgIH0gZWxzZSBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGEpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBhLCBwcm9wICwgY2FzZWxlc3MpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiB2YWx1ZUZyb21Db25maWcyKGEsIGIpIHtcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGIpKSB7XG4gICAgICByZXR1cm4gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBiKTtcbiAgICB9XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC1yZXR1cm5cbiAgZnVuY3Rpb24gZGVmYXVsdFRvQ29uZmlnMihhLCBiKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChiKSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgYik7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoYSkpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGEpO1xuICAgIH1cbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb25zaXN0ZW50LXJldHVyblxuICBmdW5jdGlvbiBtZXJnZURpcmVjdEtleXMoYSwgYiwgcHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIHJldHVybiBnZXRNZXJnZWRWYWx1ZShhLCBiKTtcbiAgICB9IGVsc2UgaWYgKHByb3AgaW4gY29uZmlnMSkge1xuICAgICAgcmV0dXJuIGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgYSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgbWVyZ2VNYXAgPSB7XG4gICAgdXJsOiB2YWx1ZUZyb21Db25maWcyLFxuICAgIG1ldGhvZDogdmFsdWVGcm9tQ29uZmlnMixcbiAgICBkYXRhOiB2YWx1ZUZyb21Db25maWcyLFxuICAgIGJhc2VVUkw6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdHJhbnNmb3JtUmVxdWVzdDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB0cmFuc2Zvcm1SZXNwb25zZTogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBwYXJhbXNTZXJpYWxpemVyOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHRpbWVvdXQ6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdGltZW91dE1lc3NhZ2U6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgd2l0aENyZWRlbnRpYWxzOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHdpdGhYU1JGVG9rZW46IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgYWRhcHRlcjogZGVmYXVsdFRvQ29uZmlnMixcbiAgICByZXNwb25zZVR5cGU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgeHNyZkNvb2tpZU5hbWU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgeHNyZkhlYWRlck5hbWU6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgb25VcGxvYWRQcm9ncmVzczogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBvbkRvd25sb2FkUHJvZ3Jlc3M6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgZGVjb21wcmVzczogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBtYXhDb250ZW50TGVuZ3RoOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIG1heEJvZHlMZW5ndGg6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgYmVmb3JlUmVkaXJlY3Q6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgdHJhbnNwb3J0OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIGh0dHBBZ2VudDogZGVmYXVsdFRvQ29uZmlnMixcbiAgICBodHRwc0FnZW50OiBkZWZhdWx0VG9Db25maWcyLFxuICAgIGNhbmNlbFRva2VuOiBkZWZhdWx0VG9Db25maWcyLFxuICAgIHNvY2tldFBhdGg6IGRlZmF1bHRUb0NvbmZpZzIsXG4gICAgcmVzcG9uc2VFbmNvZGluZzogZGVmYXVsdFRvQ29uZmlnMixcbiAgICB2YWxpZGF0ZVN0YXR1czogbWVyZ2VEaXJlY3RLZXlzLFxuICAgIGhlYWRlcnM6IChhLCBiICwgcHJvcCkgPT4gbWVyZ2VEZWVwUHJvcGVydGllcyhoZWFkZXJzVG9PYmplY3QoYSksIGhlYWRlcnNUb09iamVjdChiKSxwcm9wLCB0cnVlKVxuICB9O1xuXG4gIHV0aWxzLmZvckVhY2goT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgY29uZmlnMSwgY29uZmlnMikpLCBmdW5jdGlvbiBjb21wdXRlQ29uZmlnVmFsdWUocHJvcCkge1xuICAgIGNvbnN0IG1lcmdlID0gbWVyZ2VNYXBbcHJvcF0gfHwgbWVyZ2VEZWVwUHJvcGVydGllcztcbiAgICBjb25zdCBjb25maWdWYWx1ZSA9IG1lcmdlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0sIHByb3ApO1xuICAgICh1dGlscy5pc1VuZGVmaW5lZChjb25maWdWYWx1ZSkgJiYgbWVyZ2UgIT09IG1lcmdlRGlyZWN0S2V5cykgfHwgKGNvbmZpZ1twcm9wXSA9IGNvbmZpZ1ZhbHVlKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGNvbmZpZztcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/settle.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/settle.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ settle)\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\n      'Request failed with status code ' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3NldHRsZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUU0Qjs7QUFFekM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixlQUFlLHNEQUFVO0FBQ3pCO0FBQ0EsT0FBTyxzREFBVSxrQkFBa0Isc0RBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9zZXR0bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQXhpb3NFcnJvciBmcm9tICcuL0F4aW9zRXJyb3IuanMnO1xuXG4vKipcbiAqIFJlc29sdmUgb3IgcmVqZWN0IGEgUHJvbWlzZSBiYXNlZCBvbiByZXNwb25zZSBzdGF0dXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVzb2x2ZSBBIGZ1bmN0aW9uIHRoYXQgcmVzb2x2ZXMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSByZWplY3QgQSBmdW5jdGlvbiB0aGF0IHJlamVjdHMgdGhlIHByb21pc2UuXG4gKiBAcGFyYW0ge29iamVjdH0gcmVzcG9uc2UgVGhlIHJlc3BvbnNlLlxuICpcbiAqIEByZXR1cm5zIHtvYmplY3R9IFRoZSByZXNwb25zZS5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgcmVzcG9uc2UpIHtcbiAgY29uc3QgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KG5ldyBBeGlvc0Vycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIFtBeGlvc0Vycm9yLkVSUl9CQURfUkVRVUVTVCwgQXhpb3NFcnJvci5FUlJfQkFEX1JFU1BPTlNFXVtNYXRoLmZsb29yKHJlc3BvbnNlLnN0YXR1cyAvIDEwMCkgLSA0XSxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIHJlc3BvbnNlLnJlcXVlc3QsXG4gICAgICByZXNwb25zZVxuICAgICkpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/settle.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/core/transformData.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/core/transformData.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ transformData)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL3RyYW5zZm9ybURhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUVxQjtBQUNVO0FBQ087O0FBRW5EO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWEsR0FBRztBQUNoQjtBQUNlO0FBQ2YseUJBQXlCLDBEQUFRO0FBQ2pDO0FBQ0Esa0JBQWtCLDZEQUFZO0FBQzlCOztBQUVBLEVBQUUsaURBQUs7QUFDUDtBQUNBLEdBQUc7O0FBRUg7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLy4uL3V0aWxzLmpzJztcbmltcG9ydCBkZWZhdWx0cyBmcm9tICcuLi9kZWZhdWx0cy9pbmRleC5qcyc7XG5pbXBvcnQgQXhpb3NIZWFkZXJzIGZyb20gJy4uL2NvcmUvQXhpb3NIZWFkZXJzLmpzJztcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHBhcmFtIHs/T2JqZWN0fSByZXNwb25zZSBUaGUgcmVzcG9uc2Ugb2JqZWN0XG4gKlxuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmFuc2Zvcm1EYXRhKGZucywgcmVzcG9uc2UpIHtcbiAgY29uc3QgY29uZmlnID0gdGhpcyB8fCBkZWZhdWx0cztcbiAgY29uc3QgY29udGV4dCA9IHJlc3BvbnNlIHx8IGNvbmZpZztcbiAgY29uc3QgaGVhZGVycyA9IEF4aW9zSGVhZGVycy5mcm9tKGNvbnRleHQuaGVhZGVycyk7XG4gIGxldCBkYXRhID0gY29udGV4dC5kYXRhO1xuXG4gIHV0aWxzLmZvckVhY2goZm5zLCBmdW5jdGlvbiB0cmFuc2Zvcm0oZm4pIHtcbiAgICBkYXRhID0gZm4uY2FsbChjb25maWcsIGRhdGEsIGhlYWRlcnMubm9ybWFsaXplKCksIHJlc3BvbnNlID8gcmVzcG9uc2Uuc3RhdHVzIDogdW5kZWZpbmVkKTtcbiAgfSk7XG5cbiAgaGVhZGVycy5ub3JtYWxpemUoKTtcblxuICByZXR1cm4gZGF0YTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/core/transformData.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/transitional.js\");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toURLEncodedForm.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/formDataToJSON.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaults);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/index.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/transitional.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/transitional.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9kZWZhdWx0cy90cmFuc2l0aW9uYWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViLGlFQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvZGVmYXVsdHMvdHJhbnNpdGlvbmFsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzaWxlbnRKU09OUGFyc2luZzogdHJ1ZSxcbiAgZm9yY2VkSlNPTlBhcnNpbmc6IHRydWUsXG4gIGNsYXJpZnlUaW1lb3V0RXJyb3I6IGZhbHNlXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/defaults/transitional.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/env/data.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/env/data.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"1.7.9\";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9lbnYvZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8iLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9lbnYvZGF0YS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVkVSU0lPTiA9IFwiMS43LjlcIjsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/env/data.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/AxiosURLSearchParams.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/AxiosURLSearchParams.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosURLSearchParams);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL0F4aW9zVVJMU2VhcmNoUGFyYW1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRTRCOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQyxXQUFXLHFCQUFxQjtBQUNoQztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUEsWUFBWSwwREFBVTtBQUN0Qjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGlFQUFlLG9CQUFvQixFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0b0Zvcm1EYXRhIGZyb20gJy4vdG9Gb3JtRGF0YS5qcyc7XG5cbi8qKlxuICogSXQgZW5jb2RlcyBhIHN0cmluZyBieSByZXBsYWNpbmcgYWxsIGNoYXJhY3RlcnMgdGhhdCBhcmUgbm90IGluIHRoZSB1bnJlc2VydmVkIHNldCB3aXRoXG4gKiB0aGVpciBwZXJjZW50LWVuY29kZWQgZXF1aXZhbGVudHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyIC0gVGhlIHN0cmluZyB0byBlbmNvZGUuXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGVuY29kZWQgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBlbmNvZGUoc3RyKSB7XG4gIGNvbnN0IGNoYXJNYXAgPSB7XG4gICAgJyEnOiAnJTIxJyxcbiAgICBcIidcIjogJyUyNycsXG4gICAgJygnOiAnJTI4JyxcbiAgICAnKSc6ICclMjknLFxuICAgICd+JzogJyU3RScsXG4gICAgJyUyMCc6ICcrJyxcbiAgICAnJTAwJzogJ1xceDAwJ1xuICB9O1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cikucmVwbGFjZSgvWyEnKCl+XXwlMjB8JTAwL2csIGZ1bmN0aW9uIHJlcGxhY2VyKG1hdGNoKSB7XG4gICAgcmV0dXJuIGNoYXJNYXBbbWF0Y2hdO1xuICB9KTtcbn1cblxuLyoqXG4gKiBJdCB0YWtlcyBhIHBhcmFtcyBvYmplY3QgYW5kIGNvbnZlcnRzIGl0IHRvIGEgRm9ybURhdGEgb2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLCBhbnk+fSBwYXJhbXMgLSBUaGUgcGFyYW1ldGVycyB0byBiZSBjb252ZXJ0ZWQgdG8gYSBGb3JtRGF0YSBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdDxzdHJpbmcsIGFueT59IG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBvYmplY3QgcGFzc2VkIHRvIHRoZSBBeGlvcyBjb25zdHJ1Y3Rvci5cbiAqXG4gKiBAcmV0dXJucyB7dm9pZH1cbiAqL1xuZnVuY3Rpb24gQXhpb3NVUkxTZWFyY2hQYXJhbXMocGFyYW1zLCBvcHRpb25zKSB7XG4gIHRoaXMuX3BhaXJzID0gW107XG5cbiAgcGFyYW1zICYmIHRvRm9ybURhdGEocGFyYW1zLCB0aGlzLCBvcHRpb25zKTtcbn1cblxuY29uc3QgcHJvdG90eXBlID0gQXhpb3NVUkxTZWFyY2hQYXJhbXMucHJvdG90eXBlO1xuXG5wcm90b3R5cGUuYXBwZW5kID0gZnVuY3Rpb24gYXBwZW5kKG5hbWUsIHZhbHVlKSB7XG4gIHRoaXMuX3BhaXJzLnB1c2goW25hbWUsIHZhbHVlXSk7XG59O1xuXG5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZyhlbmNvZGVyKSB7XG4gIGNvbnN0IF9lbmNvZGUgPSBlbmNvZGVyID8gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gZW5jb2Rlci5jYWxsKHRoaXMsIHZhbHVlLCBlbmNvZGUpO1xuICB9IDogZW5jb2RlO1xuXG4gIHJldHVybiB0aGlzLl9wYWlycy5tYXAoZnVuY3Rpb24gZWFjaChwYWlyKSB7XG4gICAgcmV0dXJuIF9lbmNvZGUocGFpclswXSkgKyAnPScgKyBfZW5jb2RlKHBhaXJbMV0pO1xuICB9LCAnJykuam9pbignJicpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXhpb3NVUkxTZWFyY2hQYXJhbXM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/HttpStatusCode.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/HttpStatusCode.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpStatusCode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL0h0dHBTdGF0dXNDb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxDQUFDOztBQUVELGlFQUFlLGNBQWMsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvSHR0cFN0YXR1c0NvZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSHR0cFN0YXR1c0NvZGUgPSB7XG4gIENvbnRpbnVlOiAxMDAsXG4gIFN3aXRjaGluZ1Byb3RvY29sczogMTAxLFxuICBQcm9jZXNzaW5nOiAxMDIsXG4gIEVhcmx5SGludHM6IDEwMyxcbiAgT2s6IDIwMCxcbiAgQ3JlYXRlZDogMjAxLFxuICBBY2NlcHRlZDogMjAyLFxuICBOb25BdXRob3JpdGF0aXZlSW5mb3JtYXRpb246IDIwMyxcbiAgTm9Db250ZW50OiAyMDQsXG4gIFJlc2V0Q29udGVudDogMjA1LFxuICBQYXJ0aWFsQ29udGVudDogMjA2LFxuICBNdWx0aVN0YXR1czogMjA3LFxuICBBbHJlYWR5UmVwb3J0ZWQ6IDIwOCxcbiAgSW1Vc2VkOiAyMjYsXG4gIE11bHRpcGxlQ2hvaWNlczogMzAwLFxuICBNb3ZlZFBlcm1hbmVudGx5OiAzMDEsXG4gIEZvdW5kOiAzMDIsXG4gIFNlZU90aGVyOiAzMDMsXG4gIE5vdE1vZGlmaWVkOiAzMDQsXG4gIFVzZVByb3h5OiAzMDUsXG4gIFVudXNlZDogMzA2LFxuICBUZW1wb3JhcnlSZWRpcmVjdDogMzA3LFxuICBQZXJtYW5lbnRSZWRpcmVjdDogMzA4LFxuICBCYWRSZXF1ZXN0OiA0MDAsXG4gIFVuYXV0aG9yaXplZDogNDAxLFxuICBQYXltZW50UmVxdWlyZWQ6IDQwMixcbiAgRm9yYmlkZGVuOiA0MDMsXG4gIE5vdEZvdW5kOiA0MDQsXG4gIE1ldGhvZE5vdEFsbG93ZWQ6IDQwNSxcbiAgTm90QWNjZXB0YWJsZTogNDA2LFxuICBQcm94eUF1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6IDQwNyxcbiAgUmVxdWVzdFRpbWVvdXQ6IDQwOCxcbiAgQ29uZmxpY3Q6IDQwOSxcbiAgR29uZTogNDEwLFxuICBMZW5ndGhSZXF1aXJlZDogNDExLFxuICBQcmVjb25kaXRpb25GYWlsZWQ6IDQxMixcbiAgUGF5bG9hZFRvb0xhcmdlOiA0MTMsXG4gIFVyaVRvb0xvbmc6IDQxNCxcbiAgVW5zdXBwb3J0ZWRNZWRpYVR5cGU6IDQxNSxcbiAgUmFuZ2VOb3RTYXRpc2ZpYWJsZTogNDE2LFxuICBFeHBlY3RhdGlvbkZhaWxlZDogNDE3LFxuICBJbUFUZWFwb3Q6IDQxOCxcbiAgTWlzZGlyZWN0ZWRSZXF1ZXN0OiA0MjEsXG4gIFVucHJvY2Vzc2FibGVFbnRpdHk6IDQyMixcbiAgTG9ja2VkOiA0MjMsXG4gIEZhaWxlZERlcGVuZGVuY3k6IDQyNCxcbiAgVG9vRWFybHk6IDQyNSxcbiAgVXBncmFkZVJlcXVpcmVkOiA0MjYsXG4gIFByZWNvbmRpdGlvblJlcXVpcmVkOiA0MjgsXG4gIFRvb01hbnlSZXF1ZXN0czogNDI5LFxuICBSZXF1ZXN0SGVhZGVyRmllbGRzVG9vTGFyZ2U6IDQzMSxcbiAgVW5hdmFpbGFibGVGb3JMZWdhbFJlYXNvbnM6IDQ1MSxcbiAgSW50ZXJuYWxTZXJ2ZXJFcnJvcjogNTAwLFxuICBOb3RJbXBsZW1lbnRlZDogNTAxLFxuICBCYWRHYXRld2F5OiA1MDIsXG4gIFNlcnZpY2VVbmF2YWlsYWJsZTogNTAzLFxuICBHYXRld2F5VGltZW91dDogNTA0LFxuICBIdHRwVmVyc2lvbk5vdFN1cHBvcnRlZDogNTA1LFxuICBWYXJpYW50QWxzb05lZ290aWF0ZXM6IDUwNixcbiAgSW5zdWZmaWNpZW50U3RvcmFnZTogNTA3LFxuICBMb29wRGV0ZWN0ZWQ6IDUwOCxcbiAgTm90RXh0ZW5kZWQ6IDUxMCxcbiAgTmV0d29ya0F1dGhlbnRpY2F0aW9uUmVxdWlyZWQ6IDUxMSxcbn07XG5cbk9iamVjdC5lbnRyaWVzKEh0dHBTdGF0dXNDb2RlKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgSHR0cFN0YXR1c0NvZGVbdmFsdWVdID0ga2V5O1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IEh0dHBTdGF0dXNDb2RlO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/HttpStatusCode.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/bind.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/bind.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bind)\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUVFO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2JpbmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiaW5kKGZuLCB0aGlzQXJnKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwKCkge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmd1bWVudHMpO1xuICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/bind.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/buildURL.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/buildURL.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildURL)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2J1aWxkVVJMLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFhOztBQUVtQjtBQUNzQzs7QUFFdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLG9CQUFvQjtBQUMvQjtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE1BQU0saURBQUs7QUFDWDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKLHVCQUF1QixpREFBSztBQUM1QjtBQUNBLFVBQVUsd0VBQW9CO0FBQzlCOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgQXhpb3NVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi4vaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcyc7XG5cbi8qKlxuICogSXQgcmVwbGFjZXMgYWxsIGluc3RhbmNlcyBvZiB0aGUgY2hhcmFjdGVycyBgOmAsIGAkYCwgYCxgLCBgK2AsIGBbYCwgYW5kIGBdYCB3aXRoIHRoZWlyXG4gKiBVUkkgZW5jb2RlZCBjb3VudGVycGFydHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsIFRoZSB2YWx1ZSB0byBiZSBlbmNvZGVkLlxuICpcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBlbmNvZGVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBlbmNvZGUodmFsKSB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsKS5cbiAgICByZXBsYWNlKC8lM0EvZ2ksICc6JykuXG4gICAgcmVwbGFjZSgvJTI0L2csICckJykuXG4gICAgcmVwbGFjZSgvJTJDL2dpLCAnLCcpLlxuICAgIHJlcGxhY2UoLyUyMC9nLCAnKycpLlxuICAgIHJlcGxhY2UoLyU1Qi9naSwgJ1snKS5cbiAgICByZXBsYWNlKC8lNUQvZ2ksICddJyk7XG59XG5cbi8qKlxuICogQnVpbGQgYSBVUkwgYnkgYXBwZW5kaW5nIHBhcmFtcyB0byB0aGUgZW5kXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgYmFzZSBvZiB0aGUgdXJsIChlLmcuLCBodHRwOi8vd3d3Lmdvb2dsZS5jb20pXG4gKiBAcGFyYW0ge29iamVjdH0gW3BhcmFtc10gVGhlIHBhcmFtcyB0byBiZSBhcHBlbmRlZFxuICogQHBhcmFtIHs/KG9iamVjdHxGdW5jdGlvbil9IG9wdGlvbnNcbiAqXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgZm9ybWF0dGVkIHVybFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBidWlsZFVSTCh1cmwsIHBhcmFtcywgb3B0aW9ucykge1xuICAvKmVzbGludCBuby1wYXJhbS1yZWFzc2lnbjowKi9cbiAgaWYgKCFwYXJhbXMpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIFxuICBjb25zdCBfZW5jb2RlID0gb3B0aW9ucyAmJiBvcHRpb25zLmVuY29kZSB8fCBlbmNvZGU7XG5cbiAgaWYgKHV0aWxzLmlzRnVuY3Rpb24ob3B0aW9ucykpIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgc2VyaWFsaXplOiBvcHRpb25zXG4gICAgfTtcbiAgfSBcblxuICBjb25zdCBzZXJpYWxpemVGbiA9IG9wdGlvbnMgJiYgb3B0aW9ucy5zZXJpYWxpemU7XG5cbiAgbGV0IHNlcmlhbGl6ZWRQYXJhbXM7XG5cbiAgaWYgKHNlcmlhbGl6ZUZuKSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHNlcmlhbGl6ZUZuKHBhcmFtcywgb3B0aW9ucyk7XG4gIH0gZWxzZSB7XG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHV0aWxzLmlzVVJMU2VhcmNoUGFyYW1zKHBhcmFtcykgP1xuICAgICAgcGFyYW1zLnRvU3RyaW5nKCkgOlxuICAgICAgbmV3IEF4aW9zVVJMU2VhcmNoUGFyYW1zKHBhcmFtcywgb3B0aW9ucykudG9TdHJpbmcoX2VuY29kZSk7XG4gIH1cblxuICBpZiAoc2VyaWFsaXplZFBhcmFtcykge1xuICAgIGNvbnN0IGhhc2htYXJrSW5kZXggPSB1cmwuaW5kZXhPZihcIiNcIik7XG5cbiAgICBpZiAoaGFzaG1hcmtJbmRleCAhPT0gLTEpIHtcbiAgICAgIHVybCA9IHVybC5zbGljZSgwLCBoYXNobWFya0luZGV4KTtcbiAgICB9XG4gICAgdXJsICs9ICh1cmwuaW5kZXhPZignPycpID09PSAtMSA/ICc/JyA6ICcmJykgKyBzZXJpYWxpemVkUGFyYW1zO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/buildURL.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/combineURLs.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/combineURLs.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ combineURLs)\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29tYmluZVVSTHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgVVJMIGJ5IGNvbWJpbmluZyB0aGUgc3BlY2lmaWVkIFVSTHNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVVSTCBUaGUgYmFzZSBVUkxcbiAqIEBwYXJhbSB7c3RyaW5nfSByZWxhdGl2ZVVSTCBUaGUgcmVsYXRpdmUgVVJMXG4gKlxuICogQHJldHVybnMge3N0cmluZ30gVGhlIGNvbWJpbmVkIFVSTFxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvP1xcLyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/combineURLs.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/composeSignals.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/composeSignals.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/CanceledError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/cancel/CanceledError.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(unsubscribe);\n\n    return signal;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (composeSignals);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbXBvc2VTaWduYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUQ7QUFDUjtBQUNmOztBQUVoQztBQUNBLFNBQVMsUUFBUTs7QUFFakI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJEQUFVLGFBQWEsZ0VBQWE7QUFDNUU7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFVLFlBQVksU0FBUyxpQkFBaUIsMkRBQVU7QUFDNUUsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBOztBQUVBLFdBQVcsUUFBUTs7QUFFbkIsK0JBQStCLGlEQUFLOztBQUVwQztBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9jb21wb3NlU2lnbmFscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2FuY2VsZWRFcnJvciBmcm9tIFwiLi4vY2FuY2VsL0NhbmNlbGVkRXJyb3IuanNcIjtcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gXCIuLi9jb3JlL0F4aW9zRXJyb3IuanNcIjtcbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbmNvbnN0IGNvbXBvc2VTaWduYWxzID0gKHNpZ25hbHMsIHRpbWVvdXQpID0+IHtcbiAgY29uc3Qge2xlbmd0aH0gPSAoc2lnbmFscyA9IHNpZ25hbHMgPyBzaWduYWxzLmZpbHRlcihCb29sZWFuKSA6IFtdKTtcblxuICBpZiAodGltZW91dCB8fCBsZW5ndGgpIHtcbiAgICBsZXQgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcblxuICAgIGxldCBhYm9ydGVkO1xuXG4gICAgY29uc3Qgb25hYm9ydCA9IGZ1bmN0aW9uIChyZWFzb24pIHtcbiAgICAgIGlmICghYWJvcnRlZCkge1xuICAgICAgICBhYm9ydGVkID0gdHJ1ZTtcbiAgICAgICAgdW5zdWJzY3JpYmUoKTtcbiAgICAgICAgY29uc3QgZXJyID0gcmVhc29uIGluc3RhbmNlb2YgRXJyb3IgPyByZWFzb24gOiB0aGlzLnJlYXNvbjtcbiAgICAgICAgY29udHJvbGxlci5hYm9ydChlcnIgaW5zdGFuY2VvZiBBeGlvc0Vycm9yID8gZXJyIDogbmV3IENhbmNlbGVkRXJyb3IoZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IGVycikpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxldCB0aW1lciA9IHRpbWVvdXQgJiYgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aW1lciA9IG51bGw7XG4gICAgICBvbmFib3J0KG5ldyBBeGlvc0Vycm9yKGB0aW1lb3V0ICR7dGltZW91dH0gb2YgbXMgZXhjZWVkZWRgLCBBeGlvc0Vycm9yLkVUSU1FRE9VVCkpXG4gICAgfSwgdGltZW91dClcblxuICAgIGNvbnN0IHVuc3Vic2NyaWJlID0gKCkgPT4ge1xuICAgICAgaWYgKHNpZ25hbHMpIHtcbiAgICAgICAgdGltZXIgJiYgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgdGltZXIgPSBudWxsO1xuICAgICAgICBzaWduYWxzLmZvckVhY2goc2lnbmFsID0+IHtcbiAgICAgICAgICBzaWduYWwudW5zdWJzY3JpYmUgPyBzaWduYWwudW5zdWJzY3JpYmUob25hYm9ydCkgOiBzaWduYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHNpZ25hbHMgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIHNpZ25hbHMuZm9yRWFjaCgoc2lnbmFsKSA9PiBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCBvbmFib3J0KSk7XG5cbiAgICBjb25zdCB7c2lnbmFsfSA9IGNvbnRyb2xsZXI7XG5cbiAgICBzaWduYWwudW5zdWJzY3JpYmUgPSAoKSA9PiB1dGlscy5hc2FwKHVuc3Vic2NyaWJlKTtcblxuICAgIHJldHVybiBzaWduYWw7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29tcG9zZVNpZ25hbHM7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/composeSignals.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/cookies.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/cookies.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path) && cookie.push('path=' + path);\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ1U7O0FBRTVDLGlFQUFlLDBEQUFROztBQUV2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNLGlEQUFLOztBQUVYLE1BQU0saURBQUs7O0FBRVgsTUFBTSxpREFBSzs7QUFFWDs7QUFFQSx1Q0FBdUM7QUFDdkMsS0FBSzs7QUFFTDtBQUNBLDBEQUEwRCx3QkFBd0I7QUFDbEY7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEdBQUcsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvY29va2llcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdXRpbHMgZnJvbSAnLi8uLi91dGlscy5qcyc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuXG5leHBvcnQgZGVmYXVsdCBwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJFbnYgP1xuXG4gIC8vIFN0YW5kYXJkIGJyb3dzZXIgZW52cyBzdXBwb3J0IGRvY3VtZW50LmNvb2tpZVxuICB7XG4gICAgd3JpdGUobmFtZSwgdmFsdWUsIGV4cGlyZXMsIHBhdGgsIGRvbWFpbiwgc2VjdXJlKSB7XG4gICAgICBjb25zdCBjb29raWUgPSBbbmFtZSArICc9JyArIGVuY29kZVVSSUNvbXBvbmVudCh2YWx1ZSldO1xuXG4gICAgICB1dGlscy5pc051bWJlcihleHBpcmVzKSAmJiBjb29raWUucHVzaCgnZXhwaXJlcz0nICsgbmV3IERhdGUoZXhwaXJlcykudG9HTVRTdHJpbmcoKSk7XG5cbiAgICAgIHV0aWxzLmlzU3RyaW5nKHBhdGgpICYmIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcblxuICAgICAgdXRpbHMuaXNTdHJpbmcoZG9tYWluKSAmJiBjb29raWUucHVzaCgnZG9tYWluPScgKyBkb21haW4pO1xuXG4gICAgICBzZWN1cmUgPT09IHRydWUgJiYgY29va2llLnB1c2goJ3NlY3VyZScpO1xuXG4gICAgICBkb2N1bWVudC5jb29raWUgPSBjb29raWUuam9pbignOyAnKTtcbiAgICB9LFxuXG4gICAgcmVhZChuYW1lKSB7XG4gICAgICBjb25zdCBtYXRjaCA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaChuZXcgUmVnRXhwKCcoXnw7XFxcXHMqKSgnICsgbmFtZSArICcpPShbXjtdKiknKSk7XG4gICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgIH0sXG5cbiAgICByZW1vdmUobmFtZSkge1xuICAgICAgdGhpcy53cml0ZShuYW1lLCAnJywgRGF0ZS5ub3coKSAtIDg2NDAwMDAwKTtcbiAgICB9XG4gIH1cblxuICA6XG5cbiAgLy8gTm9uLXN0YW5kYXJkIGJyb3dzZXIgZW52ICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICB7XG4gICAgd3JpdGUoKSB7fSxcbiAgICByZWFkKCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSxcbiAgICByZW1vdmUoKSB7fVxuICB9O1xuXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/cookies.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/formDataToJSON.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/formDataToJSON.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formDataToJSON);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Zvcm1EYXRhVG9KU09OLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRW1COztBQUVoQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsaURBQUs7QUFDZDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFlBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxTQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLG9CQUFvQixpREFBSzs7QUFFekI7QUFDQSxVQUFVLGlEQUFLO0FBQ2Y7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDBCQUEwQixpREFBSztBQUMvQjtBQUNBOztBQUVBOztBQUVBLGtCQUFrQixpREFBSztBQUN2QjtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsTUFBTSxpREFBSyx5QkFBeUIsaURBQUs7QUFDekM7O0FBRUEsSUFBSSxpREFBSztBQUNUO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9mb3JtRGF0YVRvSlNPTi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscy5qcyc7XG5cbi8qKlxuICogSXQgdGFrZXMgYSBzdHJpbmcgbGlrZSBgZm9vW3hdW3ldW3pdYCBhbmQgcmV0dXJucyBhbiBhcnJheSBsaWtlIGBbJ2ZvbycsICd4JywgJ3knLCAneiddXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICpcbiAqIEByZXR1cm5zIEFuIGFycmF5IG9mIHN0cmluZ3MuXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUHJvcFBhdGgobmFtZSkge1xuICAvLyBmb29beF1beV1bel1cbiAgLy8gZm9vLngueS56XG4gIC8vIGZvby14LXktelxuICAvLyBmb28geCB5IHpcbiAgcmV0dXJuIHV0aWxzLm1hdGNoQWxsKC9cXHcrfFxcWyhcXHcqKV0vZywgbmFtZSkubWFwKG1hdGNoID0+IHtcbiAgICByZXR1cm4gbWF0Y2hbMF0gPT09ICdbXScgPyAnJyA6IG1hdGNoWzFdIHx8IG1hdGNoWzBdO1xuICB9KTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0IGFuIGFycmF5IHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge0FycmF5PGFueT59IGFyciAtIFRoZSBhcnJheSB0byBjb252ZXJ0IHRvIGFuIG9iamVjdC5cbiAqXG4gKiBAcmV0dXJucyBBbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBrZXlzIGFuZCB2YWx1ZXMgYXMgdGhlIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheVRvT2JqZWN0KGFycikge1xuICBjb25zdCBvYmogPSB7fTtcbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGFycik7XG4gIGxldCBpO1xuICBjb25zdCBsZW4gPSBrZXlzLmxlbmd0aDtcbiAgbGV0IGtleTtcbiAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAga2V5ID0ga2V5c1tpXTtcbiAgICBvYmpba2V5XSA9IGFycltrZXldO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5cbi8qKlxuICogSXQgdGFrZXMgYSBGb3JtRGF0YSBvYmplY3QgYW5kIHJldHVybnMgYSBKYXZhU2NyaXB0IG9iamVjdFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBmb3JtRGF0YSBUaGUgRm9ybURhdGEgb2JqZWN0IHRvIGNvbnZlcnQgdG8gSlNPTi5cbiAqXG4gKiBAcmV0dXJucyB7T2JqZWN0PHN0cmluZywgYW55PiB8IG51bGx9IFRoZSBjb252ZXJ0ZWQgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBmb3JtRGF0YVRvSlNPTihmb3JtRGF0YSkge1xuICBmdW5jdGlvbiBidWlsZFBhdGgocGF0aCwgdmFsdWUsIHRhcmdldCwgaW5kZXgpIHtcbiAgICBsZXQgbmFtZSA9IHBhdGhbaW5kZXgrK107XG5cbiAgICBpZiAobmFtZSA9PT0gJ19fcHJvdG9fXycpIHJldHVybiB0cnVlO1xuXG4gICAgY29uc3QgaXNOdW1lcmljS2V5ID0gTnVtYmVyLmlzRmluaXRlKCtuYW1lKTtcbiAgICBjb25zdCBpc0xhc3QgPSBpbmRleCA+PSBwYXRoLmxlbmd0aDtcbiAgICBuYW1lID0gIW5hbWUgJiYgdXRpbHMuaXNBcnJheSh0YXJnZXQpID8gdGFyZ2V0Lmxlbmd0aCA6IG5hbWU7XG5cbiAgICBpZiAoaXNMYXN0KSB7XG4gICAgICBpZiAodXRpbHMuaGFzT3duUHJvcCh0YXJnZXQsIG5hbWUpKSB7XG4gICAgICAgIHRhcmdldFtuYW1lXSA9IFt0YXJnZXRbbmFtZV0sIHZhbHVlXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldFtuYW1lXSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gIWlzTnVtZXJpY0tleTtcbiAgICB9XG5cbiAgICBpZiAoIXRhcmdldFtuYW1lXSB8fCAhdXRpbHMuaXNPYmplY3QodGFyZ2V0W25hbWVdKSkge1xuICAgICAgdGFyZ2V0W25hbWVdID0gW107XG4gICAgfVxuXG4gICAgY29uc3QgcmVzdWx0ID0gYnVpbGRQYXRoKHBhdGgsIHZhbHVlLCB0YXJnZXRbbmFtZV0sIGluZGV4KTtcblxuICAgIGlmIChyZXN1bHQgJiYgdXRpbHMuaXNBcnJheSh0YXJnZXRbbmFtZV0pKSB7XG4gICAgICB0YXJnZXRbbmFtZV0gPSBhcnJheVRvT2JqZWN0KHRhcmdldFtuYW1lXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuICFpc051bWVyaWNLZXk7XG4gIH1cblxuICBpZiAodXRpbHMuaXNGb3JtRGF0YShmb3JtRGF0YSkgJiYgdXRpbHMuaXNGdW5jdGlvbihmb3JtRGF0YS5lbnRyaWVzKSkge1xuICAgIGNvbnN0IG9iaiA9IHt9O1xuXG4gICAgdXRpbHMuZm9yRWFjaEVudHJ5KGZvcm1EYXRhLCAobmFtZSwgdmFsdWUpID0+IHtcbiAgICAgIGJ1aWxkUGF0aChwYXJzZVByb3BQYXRoKG5hbWUpLCB2YWx1ZSwgb2JqLCAwKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBvYmo7XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZm9ybURhdGFUb0pTT047XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/formDataToJSON.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAbsoluteURL)\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQjtBQUNBLGFBQWEsU0FBUztBQUN0QjtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBYnNvbHV0ZVVSTC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgVVJMIGlzIGFic29sdXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHVybCBUaGUgVVJMIHRvIHRlc3RcbiAqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzQWJzb2x1dGVVUkwodXJsKSB7XG4gIC8vIEEgVVJMIGlzIGNvbnNpZGVyZWQgYWJzb2x1dGUgaWYgaXQgYmVnaW5zIHdpdGggXCI8c2NoZW1lPjovL1wiIG9yIFwiLy9cIiAocHJvdG9jb2wtcmVsYXRpdmUgVVJMKS5cbiAgLy8gUkZDIDM5ODYgZGVmaW5lcyBzY2hlbWUgbmFtZSBhcyBhIHNlcXVlbmNlIG9mIGNoYXJhY3RlcnMgYmVnaW5uaW5nIHdpdGggYSBsZXR0ZXIgYW5kIGZvbGxvd2VkXG4gIC8vIGJ5IGFueSBjb21iaW5hdGlvbiBvZiBsZXR0ZXJzLCBkaWdpdHMsIHBsdXMsIHBlcmlvZCwgb3IgaHlwaGVuLlxuICByZXR1cm4gL14oW2Etel1bYS16XFxkK1xcLS5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAbsoluteURL.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAxiosError.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAxiosError.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isAxiosError)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(payload) && (payload.isAxiosError === true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQXhpb3NFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUVxQjs7QUFFbEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxHQUFHO0FBQ2Q7QUFDQSxhQUFhLFNBQVM7QUFDdEI7QUFDZTtBQUNmLFNBQVMsaURBQUs7QUFDZCIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvaXNBeGlvc0Vycm9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4vLi4vdXRpbHMuanMnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3NcbiAqXG4gKiBAcGFyYW0geyp9IHBheWxvYWQgVGhlIHZhbHVlIHRvIHRlc3RcbiAqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgcGF5bG9hZCBpcyBhbiBlcnJvciB0aHJvd24gYnkgQXhpb3MsIG90aGVyd2lzZSBmYWxzZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0F4aW9zRXJyb3IocGF5bG9hZCkge1xuICByZXR1cm4gdXRpbHMuaXNPYmplY3QocGF5bG9hZCkgJiYgKHBheWxvYWQuaXNBeGlvc0Vycm9yID09PSB0cnVlKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isAxiosError.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].origin),\n  _platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator && /(msie|trident)/i.test(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navigator.userAgent)\n) : () => true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0Qzs7QUFFNUMsaUVBQWUsMERBQVE7QUFDdkIscUJBQXFCLDBEQUFROztBQUU3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELFVBQVUsMERBQVE7QUFDbEIsRUFBRSwwREFBUSxxQ0FBcUMsMERBQVE7QUFDdkQsY0FBYyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9pc1VSTFNhbWVPcmlnaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtL2luZGV4LmpzJztcblxuZXhwb3J0IGRlZmF1bHQgcGxhdGZvcm0uaGFzU3RhbmRhcmRCcm93c2VyRW52ID8gKChvcmlnaW4sIGlzTVNJRSkgPT4gKHVybCkgPT4ge1xuICB1cmwgPSBuZXcgVVJMKHVybCwgcGxhdGZvcm0ub3JpZ2luKTtcblxuICByZXR1cm4gKFxuICAgIG9yaWdpbi5wcm90b2NvbCA9PT0gdXJsLnByb3RvY29sICYmXG4gICAgb3JpZ2luLmhvc3QgPT09IHVybC5ob3N0ICYmXG4gICAgKGlzTVNJRSB8fCBvcmlnaW4ucG9ydCA9PT0gdXJsLnBvcnQpXG4gICk7XG59KShcbiAgbmV3IFVSTChwbGF0Zm9ybS5vcmlnaW4pLFxuICBwbGF0Zm9ybS5uYXZpZ2F0b3IgJiYgLyhtc2llfHRyaWRlbnQpL2kudGVzdChwbGF0Zm9ybS5uYXZpZ2F0b3IudXNlckFnZW50KVxuKSA6ICgpID0+IHRydWU7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isURLSameOrigin.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/null.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/null.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// eslint-disable-next-line strict\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL251bGwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsaUVBQWUsSUFBSSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9udWxsLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBzdHJpY3RcbmV4cG9ydCBkZWZhdWx0IG51bGw7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/null.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseHeaders.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseHeaders.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFhOztBQUVxQjs7QUFFbEM7QUFDQTtBQUNBLDBCQUEwQixpREFBSztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0EsaUVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlSGVhZGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCB1dGlscyBmcm9tICcuLy4uL3V0aWxzLmpzJztcblxuLy8gUmF3QXhpb3NIZWFkZXJzIHdob3NlIGR1cGxpY2F0ZXMgYXJlIGlnbm9yZWQgYnkgbm9kZVxuLy8gYy5mLiBodHRwczovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbCNodHRwX21lc3NhZ2VfaGVhZGVyc1xuY29uc3QgaWdub3JlRHVwbGljYXRlT2YgPSB1dGlscy50b09iamVjdFNldChbXG4gICdhZ2UnLCAnYXV0aG9yaXphdGlvbicsICdjb250ZW50LWxlbmd0aCcsICdjb250ZW50LXR5cGUnLCAnZXRhZycsXG4gICdleHBpcmVzJywgJ2Zyb20nLCAnaG9zdCcsICdpZi1tb2RpZmllZC1zaW5jZScsICdpZi11bm1vZGlmaWVkLXNpbmNlJyxcbiAgJ2xhc3QtbW9kaWZpZWQnLCAnbG9jYXRpb24nLCAnbWF4LWZvcndhcmRzJywgJ3Byb3h5LWF1dGhvcml6YXRpb24nLFxuICAncmVmZXJlcicsICdyZXRyeS1hZnRlcicsICd1c2VyLWFnZW50J1xuXSk7XG5cbi8qKlxuICogUGFyc2UgaGVhZGVycyBpbnRvIGFuIG9iamVjdFxuICpcbiAqIGBgYFxuICogRGF0ZTogV2VkLCAyNyBBdWcgMjAxNCAwODo1ODo0OSBHTVRcbiAqIENvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvblxuICogQ29ubmVjdGlvbjoga2VlcC1hbGl2ZVxuICogVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWRcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSByYXdIZWFkZXJzIEhlYWRlcnMgbmVlZGluZyB0byBiZSBwYXJzZWRcbiAqXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBIZWFkZXJzIHBhcnNlZCBpbnRvIGFuIG9iamVjdFxuICovXG5leHBvcnQgZGVmYXVsdCByYXdIZWFkZXJzID0+IHtcbiAgY29uc3QgcGFyc2VkID0ge307XG4gIGxldCBrZXk7XG4gIGxldCB2YWw7XG4gIGxldCBpO1xuXG4gIHJhd0hlYWRlcnMgJiYgcmF3SGVhZGVycy5zcGxpdCgnXFxuJykuZm9yRWFjaChmdW5jdGlvbiBwYXJzZXIobGluZSkge1xuICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBrZXkgPSBsaW5lLnN1YnN0cmluZygwLCBpKS50cmltKCkudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSBsaW5lLnN1YnN0cmluZyhpICsgMSkudHJpbSgpO1xuXG4gICAgaWYgKCFrZXkgfHwgKHBhcnNlZFtrZXldICYmIGlnbm9yZUR1cGxpY2F0ZU9mW2tleV0pKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICBpZiAocGFyc2VkW2tleV0pIHtcbiAgICAgICAgcGFyc2VkW2tleV0ucHVzaCh2YWwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSBbdmFsXTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcGFyc2VkW2tleV0gPSBwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldICsgJywgJyArIHZhbCA6IHZhbDtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWQ7XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseHeaders.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseProtocol.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseProtocol.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProtocol)\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3BhcnNlUHJvdG9jb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUVFO0FBQ2YsMEJBQTBCLEtBQUs7QUFDL0I7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvcGFyc2VQcm90b2NvbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlUHJvdG9jb2wodXJsKSB7XG4gIGNvbnN0IG1hdGNoID0gL14oWy0rXFx3XXsxLDI1fSkoOj9cXC9cXC98OikvLmV4ZWModXJsKTtcbiAgcmV0dXJuIG1hdGNoICYmIG1hdGNoWzFdIHx8ICcnO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/parseProtocol.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/progressEventReducer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/progressEventReducer.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asyncDecorator: () => (/* binding */ asyncDecorator),\n/* harmony export */   progressEventDecorator: () => (/* binding */ progressEventDecorator),\n/* harmony export */   progressEventReducer: () => (/* binding */ progressEventReducer)\n/* harmony export */ });\n/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/speedometer.js\");\n/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/throttle.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n\n\n\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(50, 250);\n\n  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nconst asyncDecorator = (fn) => (...args) => _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].asap(() => fn(...args));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Byb2dyZXNzRXZlbnRSZWR1Y2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNOO0FBQ0w7O0FBRXpCO0FBQ1A7QUFDQSx1QkFBdUIsMkRBQVc7O0FBRWxDLFNBQVMsd0RBQVE7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIOztBQUVPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRU8sNENBQTRDLGlEQUFLIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wcm9ncmVzc0V2ZW50UmVkdWNlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3BlZWRvbWV0ZXIgZnJvbSBcIi4vc3BlZWRvbWV0ZXIuanNcIjtcbmltcG9ydCB0aHJvdHRsZSBmcm9tIFwiLi90aHJvdHRsZS5qc1wiO1xuaW1wb3J0IHV0aWxzIGZyb20gXCIuLi91dGlscy5qc1wiO1xuXG5leHBvcnQgY29uc3QgcHJvZ3Jlc3NFdmVudFJlZHVjZXIgPSAobGlzdGVuZXIsIGlzRG93bmxvYWRTdHJlYW0sIGZyZXEgPSAzKSA9PiB7XG4gIGxldCBieXRlc05vdGlmaWVkID0gMDtcbiAgY29uc3QgX3NwZWVkb21ldGVyID0gc3BlZWRvbWV0ZXIoNTAsIDI1MCk7XG5cbiAgcmV0dXJuIHRocm90dGxlKGUgPT4ge1xuICAgIGNvbnN0IGxvYWRlZCA9IGUubG9hZGVkO1xuICAgIGNvbnN0IHRvdGFsID0gZS5sZW5ndGhDb21wdXRhYmxlID8gZS50b3RhbCA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBwcm9ncmVzc0J5dGVzID0gbG9hZGVkIC0gYnl0ZXNOb3RpZmllZDtcbiAgICBjb25zdCByYXRlID0gX3NwZWVkb21ldGVyKHByb2dyZXNzQnl0ZXMpO1xuICAgIGNvbnN0IGluUmFuZ2UgPSBsb2FkZWQgPD0gdG90YWw7XG5cbiAgICBieXRlc05vdGlmaWVkID0gbG9hZGVkO1xuXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgIGxvYWRlZCxcbiAgICAgIHRvdGFsLFxuICAgICAgcHJvZ3Jlc3M6IHRvdGFsID8gKGxvYWRlZCAvIHRvdGFsKSA6IHVuZGVmaW5lZCxcbiAgICAgIGJ5dGVzOiBwcm9ncmVzc0J5dGVzLFxuICAgICAgcmF0ZTogcmF0ZSA/IHJhdGUgOiB1bmRlZmluZWQsXG4gICAgICBlc3RpbWF0ZWQ6IHJhdGUgJiYgdG90YWwgJiYgaW5SYW5nZSA/ICh0b3RhbCAtIGxvYWRlZCkgLyByYXRlIDogdW5kZWZpbmVkLFxuICAgICAgZXZlbnQ6IGUsXG4gICAgICBsZW5ndGhDb21wdXRhYmxlOiB0b3RhbCAhPSBudWxsLFxuICAgICAgW2lzRG93bmxvYWRTdHJlYW0gPyAnZG93bmxvYWQnIDogJ3VwbG9hZCddOiB0cnVlXG4gICAgfTtcblxuICAgIGxpc3RlbmVyKGRhdGEpO1xuICB9LCBmcmVxKTtcbn1cblxuZXhwb3J0IGNvbnN0IHByb2dyZXNzRXZlbnREZWNvcmF0b3IgPSAodG90YWwsIHRocm90dGxlZCkgPT4ge1xuICBjb25zdCBsZW5ndGhDb21wdXRhYmxlID0gdG90YWwgIT0gbnVsbDtcblxuICByZXR1cm4gWyhsb2FkZWQpID0+IHRocm90dGxlZFswXSh7XG4gICAgbGVuZ3RoQ29tcHV0YWJsZSxcbiAgICB0b3RhbCxcbiAgICBsb2FkZWRcbiAgfSksIHRocm90dGxlZFsxXV07XG59XG5cbmV4cG9ydCBjb25zdCBhc3luY0RlY29yYXRvciA9IChmbikgPT4gKC4uLmFyZ3MpID0+IHV0aWxzLmFzYXAoKCkgPT4gZm4oLi4uYXJncykpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/progressEventReducer.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/resolveConfig.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/resolveConfig.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isURLSameOrigin.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cookies.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/cookies.js\");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/buildFullPath.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/buildFullPath.js\");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mergeConfig.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/mergeConfig.js\");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosHeaders.js\");\n/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildURL.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/buildURL.js\");\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((config) => {\n  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].from(headers);\n\n  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFormData(data)) {\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].hasStandardBrowserEnv) {\n    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Jlc29sdmVDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTRDO0FBQ1o7QUFDbUI7QUFDaEI7QUFDa0I7QUFDSjtBQUNFO0FBQ2Q7O0FBRXJDLGlFQUFlO0FBQ2Ysb0JBQW9CLGdFQUFXLEdBQUc7O0FBRWxDLE9BQU8sb0VBQW9FOztBQUUzRSxnQ0FBZ0MsNkRBQVk7O0FBRTVDLGtCQUFrQix3REFBUSxDQUFDLGtFQUFhOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsTUFBTSxpREFBSztBQUNYLFFBQVEsMERBQVEsMEJBQTBCLDBEQUFRO0FBQ2xELHlDQUF5QztBQUN6QyxNQUFNO0FBQ047QUFDQSxrRUFBa0U7QUFDbEUsZ0ZBQWdGO0FBQ2hGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLE1BQU0sMERBQVE7QUFDZCxxQkFBcUIsaURBQUs7O0FBRTFCLHFEQUFxRCwrREFBZTtBQUNwRTtBQUNBLDREQUE0RCxtREFBTzs7QUFFbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Jlc29sdmVDb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBsYXRmb3JtIGZyb20gXCIuLi9wbGF0Zm9ybS9pbmRleC5qc1wiO1xuaW1wb3J0IHV0aWxzIGZyb20gXCIuLi91dGlscy5qc1wiO1xuaW1wb3J0IGlzVVJMU2FtZU9yaWdpbiBmcm9tIFwiLi9pc1VSTFNhbWVPcmlnaW4uanNcIjtcbmltcG9ydCBjb29raWVzIGZyb20gXCIuL2Nvb2tpZXMuanNcIjtcbmltcG9ydCBidWlsZEZ1bGxQYXRoIGZyb20gXCIuLi9jb3JlL2J1aWxkRnVsbFBhdGguanNcIjtcbmltcG9ydCBtZXJnZUNvbmZpZyBmcm9tIFwiLi4vY29yZS9tZXJnZUNvbmZpZy5qc1wiO1xuaW1wb3J0IEF4aW9zSGVhZGVycyBmcm9tIFwiLi4vY29yZS9BeGlvc0hlYWRlcnMuanNcIjtcbmltcG9ydCBidWlsZFVSTCBmcm9tIFwiLi9idWlsZFVSTC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IG5ld0NvbmZpZyA9IG1lcmdlQ29uZmlnKHt9LCBjb25maWcpO1xuXG4gIGxldCB7ZGF0YSwgd2l0aFhTUkZUb2tlbiwgeHNyZkhlYWRlck5hbWUsIHhzcmZDb29raWVOYW1lLCBoZWFkZXJzLCBhdXRofSA9IG5ld0NvbmZpZztcblxuICBuZXdDb25maWcuaGVhZGVycyA9IGhlYWRlcnMgPSBBeGlvc0hlYWRlcnMuZnJvbShoZWFkZXJzKTtcblxuICBuZXdDb25maWcudXJsID0gYnVpbGRVUkwoYnVpbGRGdWxsUGF0aChuZXdDb25maWcuYmFzZVVSTCwgbmV3Q29uZmlnLnVybCksIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKTtcblxuICAvLyBIVFRQIGJhc2ljIGF1dGhlbnRpY2F0aW9uXG4gIGlmIChhdXRoKSB7XG4gICAgaGVhZGVycy5zZXQoJ0F1dGhvcml6YXRpb24nLCAnQmFzaWMgJyArXG4gICAgICBidG9hKChhdXRoLnVzZXJuYW1lIHx8ICcnKSArICc6JyArIChhdXRoLnBhc3N3b3JkID8gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGF1dGgucGFzc3dvcmQpKSA6ICcnKSlcbiAgICApO1xuICB9XG5cbiAgbGV0IGNvbnRlbnRUeXBlO1xuXG4gIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpKSB7XG4gICAgaWYgKHBsYXRmb3JtLmhhc1N0YW5kYXJkQnJvd3NlckVudiB8fCBwbGF0Zm9ybS5oYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYpIHtcbiAgICAgIGhlYWRlcnMuc2V0Q29udGVudFR5cGUodW5kZWZpbmVkKTsgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdFxuICAgIH0gZWxzZSBpZiAoKGNvbnRlbnRUeXBlID0gaGVhZGVycy5nZXRDb250ZW50VHlwZSgpKSAhPT0gZmFsc2UpIHtcbiAgICAgIC8vIGZpeCBzZW1pY29sb24gZHVwbGljYXRpb24gaXNzdWUgZm9yIFJlYWN0TmF0aXZlIEZvcm1EYXRhIGltcGxlbWVudGF0aW9uXG4gICAgICBjb25zdCBbdHlwZSwgLi4udG9rZW5zXSA9IGNvbnRlbnRUeXBlID8gY29udGVudFR5cGUuc3BsaXQoJzsnKS5tYXAodG9rZW4gPT4gdG9rZW4udHJpbSgpKS5maWx0ZXIoQm9vbGVhbikgOiBbXTtcbiAgICAgIGhlYWRlcnMuc2V0Q29udGVudFR5cGUoW3R5cGUgfHwgJ211bHRpcGFydC9mb3JtLWRhdGEnLCAuLi50b2tlbnNdLmpvaW4oJzsgJykpO1xuICAgIH1cbiAgfVxuXG4gIC8vIEFkZCB4c3JmIGhlYWRlclxuICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgLy8gU3BlY2lmaWNhbGx5IG5vdCBpZiB3ZSdyZSBpbiBhIHdlYiB3b3JrZXIsIG9yIHJlYWN0LW5hdGl2ZS5cblxuICBpZiAocGxhdGZvcm0uaGFzU3RhbmRhcmRCcm93c2VyRW52KSB7XG4gICAgd2l0aFhTUkZUb2tlbiAmJiB1dGlscy5pc0Z1bmN0aW9uKHdpdGhYU1JGVG9rZW4pICYmICh3aXRoWFNSRlRva2VuID0gd2l0aFhTUkZUb2tlbihuZXdDb25maWcpKTtcblxuICAgIGlmICh3aXRoWFNSRlRva2VuIHx8ICh3aXRoWFNSRlRva2VuICE9PSBmYWxzZSAmJiBpc1VSTFNhbWVPcmlnaW4obmV3Q29uZmlnLnVybCkpKSB7XG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIGNvbnN0IHhzcmZWYWx1ZSA9IHhzcmZIZWFkZXJOYW1lICYmIHhzcmZDb29raWVOYW1lICYmIGNvb2tpZXMucmVhZCh4c3JmQ29va2llTmFtZSk7XG5cbiAgICAgIGlmICh4c3JmVmFsdWUpIHtcbiAgICAgICAgaGVhZGVycy5zZXQoeHNyZkhlYWRlck5hbWUsIHhzcmZWYWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG5ld0NvbmZpZztcbn1cblxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/resolveConfig.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/speedometer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/speedometer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (speedometer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwZWVkb21ldGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBYTs7QUFFYjtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsV0FBVyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9zcGVlZG9tZXRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ2FsY3VsYXRlIGRhdGEgbWF4UmF0ZVxuICogQHBhcmFtIHtOdW1iZXJ9IFtzYW1wbGVzQ291bnQ9IDEwXVxuICogQHBhcmFtIHtOdW1iZXJ9IFttaW49IDEwMDBdXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259XG4gKi9cbmZ1bmN0aW9uIHNwZWVkb21ldGVyKHNhbXBsZXNDb3VudCwgbWluKSB7XG4gIHNhbXBsZXNDb3VudCA9IHNhbXBsZXNDb3VudCB8fCAxMDtcbiAgY29uc3QgYnl0ZXMgPSBuZXcgQXJyYXkoc2FtcGxlc0NvdW50KTtcbiAgY29uc3QgdGltZXN0YW1wcyA9IG5ldyBBcnJheShzYW1wbGVzQ291bnQpO1xuICBsZXQgaGVhZCA9IDA7XG4gIGxldCB0YWlsID0gMDtcbiAgbGV0IGZpcnN0U2FtcGxlVFM7XG5cbiAgbWluID0gbWluICE9PSB1bmRlZmluZWQgPyBtaW4gOiAxMDAwO1xuXG4gIHJldHVybiBmdW5jdGlvbiBwdXNoKGNodW5rTGVuZ3RoKSB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcblxuICAgIGNvbnN0IHN0YXJ0ZWRBdCA9IHRpbWVzdGFtcHNbdGFpbF07XG5cbiAgICBpZiAoIWZpcnN0U2FtcGxlVFMpIHtcbiAgICAgIGZpcnN0U2FtcGxlVFMgPSBub3c7XG4gICAgfVxuXG4gICAgYnl0ZXNbaGVhZF0gPSBjaHVua0xlbmd0aDtcbiAgICB0aW1lc3RhbXBzW2hlYWRdID0gbm93O1xuXG4gICAgbGV0IGkgPSB0YWlsO1xuICAgIGxldCBieXRlc0NvdW50ID0gMDtcblxuICAgIHdoaWxlIChpICE9PSBoZWFkKSB7XG4gICAgICBieXRlc0NvdW50ICs9IGJ5dGVzW2krK107XG4gICAgICBpID0gaSAlIHNhbXBsZXNDb3VudDtcbiAgICB9XG5cbiAgICBoZWFkID0gKGhlYWQgKyAxKSAlIHNhbXBsZXNDb3VudDtcblxuICAgIGlmIChoZWFkID09PSB0YWlsKSB7XG4gICAgICB0YWlsID0gKHRhaWwgKyAxKSAlIHNhbXBsZXNDb3VudDtcbiAgICB9XG5cbiAgICBpZiAobm93IC0gZmlyc3RTYW1wbGVUUyA8IG1pbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHBhc3NlZCA9IHN0YXJ0ZWRBdCAmJiBub3cgLSBzdGFydGVkQXQ7XG5cbiAgICByZXR1cm4gcGFzc2VkID8gTWF0aC5yb3VuZChieXRlc0NvdW50ICogMTAwMCAvIHBhc3NlZCkgOiB1bmRlZmluZWQ7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IHNwZWVkb21ldGVyO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/speedometer.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/spread.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/spread.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ spread)\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3NwcmVhZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0EsYUFBYTtBQUNiO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTeW50YWN0aWMgc3VnYXIgZm9yIGludm9raW5nIGEgZnVuY3Rpb24gYW5kIGV4cGFuZGluZyBhbiBhcnJheSBmb3IgYXJndW1lbnRzLlxuICpcbiAqIENvbW1vbiB1c2UgY2FzZSB3b3VsZCBiZSB0byB1c2UgYEZ1bmN0aW9uLnByb3RvdHlwZS5hcHBseWAuXG4gKlxuICogIGBgYGpzXG4gKiAgZnVuY3Rpb24gZih4LCB5LCB6KSB7fVxuICogIHZhciBhcmdzID0gWzEsIDIsIDNdO1xuICogIGYuYXBwbHkobnVsbCwgYXJncyk7XG4gKiAgYGBgXG4gKlxuICogV2l0aCBgc3ByZWFkYCB0aGlzIGV4YW1wbGUgY2FuIGJlIHJlLXdyaXR0ZW4uXG4gKlxuICogIGBgYGpzXG4gKiAgc3ByZWFkKGZ1bmN0aW9uKHgsIHksIHopIHt9KShbMSwgMiwgM10pO1xuICogIGBgYFxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzcHJlYWQoY2FsbGJhY2spIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXAoYXJyKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmFwcGx5KG51bGwsIGFycik7XG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/spread.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/throttle.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/throttle.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (throttle);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3Rocm90dGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsaUVBQWUsUUFBUSxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90aHJvdHRsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRocm90dGxlIGRlY29yYXRvclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqIEBwYXJhbSB7TnVtYmVyfSBmcmVxXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqL1xuZnVuY3Rpb24gdGhyb3R0bGUoZm4sIGZyZXEpIHtcbiAgbGV0IHRpbWVzdGFtcCA9IDA7XG4gIGxldCB0aHJlc2hvbGQgPSAxMDAwIC8gZnJlcTtcbiAgbGV0IGxhc3RBcmdzO1xuICBsZXQgdGltZXI7XG5cbiAgY29uc3QgaW52b2tlID0gKGFyZ3MsIG5vdyA9IERhdGUubm93KCkpID0+IHtcbiAgICB0aW1lc3RhbXAgPSBub3c7XG4gICAgbGFzdEFyZ3MgPSBudWxsO1xuICAgIGlmICh0aW1lcikge1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgIHRpbWVyID0gbnVsbDtcbiAgICB9XG4gICAgZm4uYXBwbHkobnVsbCwgYXJncyk7XG4gIH1cblxuICBjb25zdCB0aHJvdHRsZWQgPSAoLi4uYXJncykgPT4ge1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgY29uc3QgcGFzc2VkID0gbm93IC0gdGltZXN0YW1wO1xuICAgIGlmICggcGFzc2VkID49IHRocmVzaG9sZCkge1xuICAgICAgaW52b2tlKGFyZ3MsIG5vdyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxhc3RBcmdzID0gYXJncztcbiAgICAgIGlmICghdGltZXIpIHtcbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aW1lciA9IG51bGw7XG4gICAgICAgICAgaW52b2tlKGxhc3RBcmdzKVxuICAgICAgICB9LCB0aHJlc2hvbGQgLSBwYXNzZWQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGZsdXNoID0gKCkgPT4gbGFzdEFyZ3MgJiYgaW52b2tlKGxhc3RBcmdzKTtcblxuICByZXR1cm4gW3Rocm90dGxlZCwgZmx1c2hdO1xufVxuXG5leHBvcnQgZGVmYXVsdCB0aHJvdHRsZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/throttle.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/null.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endsWith(key, '[]')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toFormData);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toURLEncodedForm.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toURLEncodedForm.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toURLEncodedForm)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toFormData.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3RvVVJMRW5jb2RlZEZvcm0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFhOztBQUVtQjtBQUNTO0FBQ0c7O0FBRTdCO0FBQ2YsU0FBUywwREFBVSxXQUFXLDBEQUFRO0FBQ3RDO0FBQ0EsVUFBVSwwREFBUSxXQUFXLGlEQUFLO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy90b1VSTEVuY29kZWRGb3JtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB0b0Zvcm1EYXRhIGZyb20gJy4vdG9Gb3JtRGF0YS5qcyc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0vaW5kZXguanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0b1VSTEVuY29kZWRGb3JtKGRhdGEsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIHRvRm9ybURhdGEoZGF0YSwgbmV3IHBsYXRmb3JtLmNsYXNzZXMuVVJMU2VhcmNoUGFyYW1zKCksIE9iamVjdC5hc3NpZ24oe1xuICAgIHZpc2l0b3I6IGZ1bmN0aW9uKHZhbHVlLCBrZXksIHBhdGgsIGhlbHBlcnMpIHtcbiAgICAgIGlmIChwbGF0Zm9ybS5pc05vZGUgJiYgdXRpbHMuaXNCdWZmZXIodmFsdWUpKSB7XG4gICAgICAgIHRoaXMuYXBwZW5kKGtleSwgdmFsdWUudG9TdHJpbmcoJ2Jhc2U2NCcpKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaGVscGVycy5kZWZhdWx0VmlzaXRvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfSwgb3B0aW9ucykpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/toURLEncodedForm.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/trackStream.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/trackStream.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readBytes: () => (/* binding */ readBytes),\n/* harmony export */   streamChunk: () => (/* binding */ streamChunk),\n/* harmony export */   trackStream: () => (/* binding */ trackStream)\n/* harmony export */ });\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3RyYWNrU3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVztBQUNYLGFBQWEsYUFBYTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZSxhQUFhOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3RyYWNrU3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZXhwb3J0IGNvbnN0IHN0cmVhbUNodW5rID0gZnVuY3Rpb24qIChjaHVuaywgY2h1bmtTaXplKSB7XG4gIGxldCBsZW4gPSBjaHVuay5ieXRlTGVuZ3RoO1xuXG4gIGlmICghY2h1bmtTaXplIHx8IGxlbiA8IGNodW5rU2l6ZSkge1xuICAgIHlpZWxkIGNodW5rO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBwb3MgPSAwO1xuICBsZXQgZW5kO1xuXG4gIHdoaWxlIChwb3MgPCBsZW4pIHtcbiAgICBlbmQgPSBwb3MgKyBjaHVua1NpemU7XG4gICAgeWllbGQgY2h1bmsuc2xpY2UocG9zLCBlbmQpO1xuICAgIHBvcyA9IGVuZDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgcmVhZEJ5dGVzID0gYXN5bmMgZnVuY3Rpb24qIChpdGVyYWJsZSwgY2h1bmtTaXplKSB7XG4gIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgcmVhZFN0cmVhbShpdGVyYWJsZSkpIHtcbiAgICB5aWVsZCogc3RyZWFtQ2h1bmsoY2h1bmssIGNodW5rU2l6ZSk7XG4gIH1cbn1cblxuY29uc3QgcmVhZFN0cmVhbSA9IGFzeW5jIGZ1bmN0aW9uKiAoc3RyZWFtKSB7XG4gIGlmIChzdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKSB7XG4gICAgeWllbGQqIHN0cmVhbTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG4gIHRyeSB7XG4gICAgZm9yICg7Oykge1xuICAgICAgY29uc3Qge2RvbmUsIHZhbHVlfSA9IGF3YWl0IHJlYWRlci5yZWFkKCk7XG4gICAgICBpZiAoZG9uZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHlpZWxkIHZhbHVlO1xuICAgIH1cbiAgfSBmaW5hbGx5IHtcbiAgICBhd2FpdCByZWFkZXIuY2FuY2VsKCk7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHRyYWNrU3RyZWFtID0gKHN0cmVhbSwgY2h1bmtTaXplLCBvblByb2dyZXNzLCBvbkZpbmlzaCkgPT4ge1xuICBjb25zdCBpdGVyYXRvciA9IHJlYWRCeXRlcyhzdHJlYW0sIGNodW5rU2l6ZSk7XG5cbiAgbGV0IGJ5dGVzID0gMDtcbiAgbGV0IGRvbmU7XG4gIGxldCBfb25GaW5pc2ggPSAoZSkgPT4ge1xuICAgIGlmICghZG9uZSkge1xuICAgICAgZG9uZSA9IHRydWU7XG4gICAgICBvbkZpbmlzaCAmJiBvbkZpbmlzaChlKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtKHtcbiAgICBhc3luYyBwdWxsKGNvbnRyb2xsZXIpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHtkb25lLCB2YWx1ZX0gPSBhd2FpdCBpdGVyYXRvci5uZXh0KCk7XG5cbiAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgIF9vbkZpbmlzaCgpO1xuICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbGVuID0gdmFsdWUuYnl0ZUxlbmd0aDtcbiAgICAgICAgaWYgKG9uUHJvZ3Jlc3MpIHtcbiAgICAgICAgICBsZXQgbG9hZGVkQnl0ZXMgPSBieXRlcyArPSBsZW47XG4gICAgICAgICAgb25Qcm9ncmVzcyhsb2FkZWRCeXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKG5ldyBVaW50OEFycmF5KHZhbHVlKSk7XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX29uRmluaXNoKGVycik7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9LFxuICAgIGNhbmNlbChyZWFzb24pIHtcbiAgICAgIF9vbkZpbmlzaChyZWFzb24pO1xuICAgICAgcmV0dXJuIGl0ZXJhdG9yLnJldHVybigpO1xuICAgIH1cbiAgfSwge1xuICAgIGhpZ2hXYXRlck1hcms6IDJcbiAgfSlcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/trackStream.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/validator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/validator.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  assertOptions,\n  validators\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL3ZhbGlkYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBYTs7QUFFMEI7QUFDUTs7QUFFL0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtQkFBbUI7QUFDOUIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsaURBQU87QUFDL0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJEQUFVO0FBQzFCO0FBQ0EsUUFBUSwyREFBVTtBQUNsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsS0FBSyw2QkFBNkIsZ0JBQWdCO0FBQ3RFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBLGFBQWE7QUFDYjs7QUFFQTtBQUNBO0FBQ0EsY0FBYywyREFBVSw4QkFBOEIsMkRBQVU7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQVUseUNBQXlDLDJEQUFVO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDJEQUFVLDBCQUEwQiwyREFBVTtBQUM5RDtBQUNBO0FBQ0E7O0FBRUEsaUVBQWU7QUFDZjtBQUNBO0FBQ0EsQ0FBQyxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy92YWxpZGF0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQge1ZFUlNJT059IGZyb20gJy4uL2Vudi9kYXRhLmpzJztcbmltcG9ydCBBeGlvc0Vycm9yIGZyb20gJy4uL2NvcmUvQXhpb3NFcnJvci5qcyc7XG5cbmNvbnN0IHZhbGlkYXRvcnMgPSB7fTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblsnb2JqZWN0JywgJ2Jvb2xlYW4nLCAnbnVtYmVyJywgJ2Z1bmN0aW9uJywgJ3N0cmluZycsICdzeW1ib2wnXS5mb3JFYWNoKCh0eXBlLCBpKSA9PiB7XG4gIHZhbGlkYXRvcnNbdHlwZV0gPSBmdW5jdGlvbiB2YWxpZGF0b3IodGhpbmcpIHtcbiAgICByZXR1cm4gdHlwZW9mIHRoaW5nID09PSB0eXBlIHx8ICdhJyArIChpIDwgMSA/ICduICcgOiAnICcpICsgdHlwZTtcbiAgfTtcbn0pO1xuXG5jb25zdCBkZXByZWNhdGVkV2FybmluZ3MgPSB7fTtcblxuLyoqXG4gKiBUcmFuc2l0aW9uYWwgb3B0aW9uIHZhbGlkYXRvclxuICpcbiAqIEBwYXJhbSB7ZnVuY3Rpb258Ym9vbGVhbj99IHZhbGlkYXRvciAtIHNldCB0byBmYWxzZSBpZiB0aGUgdHJhbnNpdGlvbmFsIG9wdGlvbiBoYXMgYmVlbiByZW1vdmVkXG4gKiBAcGFyYW0ge3N0cmluZz99IHZlcnNpb24gLSBkZXByZWNhdGVkIHZlcnNpb24gLyByZW1vdmVkIHNpbmNlIHZlcnNpb25cbiAqIEBwYXJhbSB7c3RyaW5nP30gbWVzc2FnZSAtIHNvbWUgbWVzc2FnZSB3aXRoIGFkZGl0aW9uYWwgaW5mb1xuICpcbiAqIEByZXR1cm5zIHtmdW5jdGlvbn1cbiAqL1xudmFsaWRhdG9ycy50cmFuc2l0aW9uYWwgPSBmdW5jdGlvbiB0cmFuc2l0aW9uYWwodmFsaWRhdG9yLCB2ZXJzaW9uLCBtZXNzYWdlKSB7XG4gIGZ1bmN0aW9uIGZvcm1hdE1lc3NhZ2Uob3B0LCBkZXNjKSB7XG4gICAgcmV0dXJuICdbQXhpb3MgdicgKyBWRVJTSU9OICsgJ10gVHJhbnNpdGlvbmFsIG9wdGlvbiBcXCcnICsgb3B0ICsgJ1xcJycgKyBkZXNjICsgKG1lc3NhZ2UgPyAnLiAnICsgbWVzc2FnZSA6ICcnKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG4gIHJldHVybiAodmFsdWUsIG9wdCwgb3B0cykgPT4ge1xuICAgIGlmICh2YWxpZGF0b3IgPT09IGZhbHNlKSB7XG4gICAgICB0aHJvdyBuZXcgQXhpb3NFcnJvcihcbiAgICAgICAgZm9ybWF0TWVzc2FnZShvcHQsICcgaGFzIGJlZW4gcmVtb3ZlZCcgKyAodmVyc2lvbiA/ICcgaW4gJyArIHZlcnNpb24gOiAnJykpLFxuICAgICAgICBBeGlvc0Vycm9yLkVSUl9ERVBSRUNBVEVEXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmICh2ZXJzaW9uICYmICFkZXByZWNhdGVkV2FybmluZ3Nbb3B0XSkge1xuICAgICAgZGVwcmVjYXRlZFdhcm5pbmdzW29wdF0gPSB0cnVlO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgZm9ybWF0TWVzc2FnZShcbiAgICAgICAgICBvcHQsXG4gICAgICAgICAgJyBoYXMgYmVlbiBkZXByZWNhdGVkIHNpbmNlIHYnICsgdmVyc2lvbiArICcgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmVhciBmdXR1cmUnXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbGlkYXRvciA/IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRzKSA6IHRydWU7XG4gIH07XG59O1xuXG52YWxpZGF0b3JzLnNwZWxsaW5nID0gZnVuY3Rpb24gc3BlbGxpbmcoY29ycmVjdFNwZWxsaW5nKSB7XG4gIHJldHVybiAodmFsdWUsIG9wdCkgPT4ge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgY29uc29sZS53YXJuKGAke29wdH0gaXMgbGlrZWx5IGEgbWlzc3BlbGxpbmcgb2YgJHtjb3JyZWN0U3BlbGxpbmd9YCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG5cbi8qKlxuICogQXNzZXJ0IG9iamVjdCdzIHByb3BlcnRpZXMgdHlwZVxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge29iamVjdH0gc2NoZW1hXG4gKiBAcGFyYW0ge2Jvb2xlYW4/fSBhbGxvd1Vua25vd25cbiAqXG4gKiBAcmV0dXJucyB7b2JqZWN0fVxuICovXG5cbmZ1bmN0aW9uIGFzc2VydE9wdGlvbnMob3B0aW9ucywgc2NoZW1hLCBhbGxvd1Vua25vd24pIHtcbiAgaWYgKHR5cGVvZiBvcHRpb25zICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdvcHRpb25zIG11c3QgYmUgYW4gb2JqZWN0JywgQXhpb3NFcnJvci5FUlJfQkFEX09QVElPTl9WQUxVRSk7XG4gIH1cbiAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKG9wdGlvbnMpO1xuICBsZXQgaSA9IGtleXMubGVuZ3RoO1xuICB3aGlsZSAoaS0tID4gMCkge1xuICAgIGNvbnN0IG9wdCA9IGtleXNbaV07XG4gICAgY29uc3QgdmFsaWRhdG9yID0gc2NoZW1hW29wdF07XG4gICAgaWYgKHZhbGlkYXRvcikge1xuICAgICAgY29uc3QgdmFsdWUgPSBvcHRpb25zW29wdF07XG4gICAgICBjb25zdCByZXN1bHQgPSB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbGlkYXRvcih2YWx1ZSwgb3B0LCBvcHRpb25zKTtcbiAgICAgIGlmIChyZXN1bHQgIT09IHRydWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF4aW9zRXJyb3IoJ29wdGlvbiAnICsgb3B0ICsgJyBtdXN0IGJlICcgKyByZXN1bHQsIEF4aW9zRXJyb3IuRVJSX0JBRF9PUFRJT05fVkFMVUUpO1xuICAgICAgfVxuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChhbGxvd1Vua25vd24gIT09IHRydWUpIHtcbiAgICAgIHRocm93IG5ldyBBeGlvc0Vycm9yKCdVbmtub3duIG9wdGlvbiAnICsgb3B0LCBBeGlvc0Vycm9yLkVSUl9CQURfT1BUSU9OKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQge1xuICBhc3NlcnRPcHRpb25zLFxuICB2YWxpZGF0b3JzXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/validator.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/Blob.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/Blob.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof Blob !== 'undefined' ? Blob : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvQmxvYi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQVk7O0FBRVosaUVBQWUseUNBQXlDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9jbGFzc2VzL0Jsb2IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmV4cG9ydCBkZWZhdWx0IHR5cGVvZiBCbG9iICE9PSAndW5kZWZpbmVkJyA/IEJsb2IgOiBudWxsXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/Blob.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/FormData.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/FormData.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof FormData !== 'undefined' ? FormData : null);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvRm9ybURhdGEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFhOztBQUViLGlFQUFlLGlEQUFpRCxFQUFDIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL0BtZXNoc2RrL3Byb3ZpZGVyL25vZGVfbW9kdWxlcy9heGlvcy9saWIvcGxhdGZvcm0vYnJvd3Nlci9jbGFzc2VzL0Zvcm1EYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0IGRlZmF1bHQgdHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJyA/IEZvcm1EYXRhIDogbnVsbDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/FormData.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof URLSearchParams !== 'undefined' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2NsYXNzZXMvVVJMU2VhcmNoUGFyYW1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWE7O0FBRStEO0FBQzVFLGlFQUFlLDJEQUEyRCx3RUFBb0IsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2Jyb3dzZXIvY2xhc3Nlcy9VUkxTZWFyY2hQYXJhbXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pbXBvcnQgQXhpb3NVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi4vLi4vLi4vaGVscGVycy9BeGlvc1VSTFNlYXJjaFBhcmFtcy5qcyc7XG5leHBvcnQgZGVmYXVsdCB0eXBlb2YgVVJMU2VhcmNoUGFyYW1zICE9PSAndW5kZWZpbmVkJyA/IFVSTFNlYXJjaFBhcmFtcyA6IEF4aW9zVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js\");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/FormData.js\");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/classes/Blob.js\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEQ7QUFDZDtBQUNSOztBQUVwQyxpRUFBZTtBQUNmO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsWUFBWTtBQUNaLFFBQVE7QUFDUixHQUFHO0FBQ0g7QUFDQSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9icm93c2VyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBVUkxTZWFyY2hQYXJhbXMgZnJvbSAnLi9jbGFzc2VzL1VSTFNlYXJjaFBhcmFtcy5qcydcbmltcG9ydCBGb3JtRGF0YSBmcm9tICcuL2NsYXNzZXMvRm9ybURhdGEuanMnXG5pbXBvcnQgQmxvYiBmcm9tICcuL2NsYXNzZXMvQmxvYi5qcydcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpc0Jyb3dzZXI6IHRydWUsXG4gIGNsYXNzZXM6IHtcbiAgICBVUkxTZWFyY2hQYXJhbXMsXG4gICAgRm9ybURhdGEsXG4gICAgQmxvYlxuICB9LFxuICBwcm90b2NvbHM6IFsnaHR0cCcsICdodHRwcycsICdmaWxlJywgJ2Jsb2InLCAndXJsJywgJ2RhdGEnXVxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/index.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/common/utils.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/common/utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBrowserEnv: () => (/* binding */ hasBrowserEnv),\n/* harmony export */   hasStandardBrowserEnv: () => (/* binding */ hasStandardBrowserEnv),\n/* harmony export */   hasStandardBrowserWebWorkerEnv: () => (/* binding */ hasStandardBrowserWebWorkerEnv),\n/* harmony export */   navigator: () => (/* binding */ _navigator),\n/* harmony export */   origin: () => (/* binding */ origin)\n/* harmony export */ });\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9jb21tb24vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFRQyIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AbWVzaHNkay9wcm92aWRlci9ub2RlX21vZHVsZXMvYXhpb3MvbGliL3BsYXRmb3JtL2NvbW1vbi91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoYXNCcm93c2VyRW52ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJztcblxuY29uc3QgX25hdmlnYXRvciA9IHR5cGVvZiBuYXZpZ2F0b3IgPT09ICdvYmplY3QnICYmIG5hdmlnYXRvciB8fCB1bmRlZmluZWQ7XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIHdlJ3JlIHJ1bm5pbmcgaW4gYSBzdGFuZGFyZCBicm93c2VyIGVudmlyb25tZW50XG4gKlxuICogVGhpcyBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlciwgYW5kIHJlYWN0LW5hdGl2ZS5cbiAqIEJvdGggZW52aXJvbm1lbnRzIHN1cHBvcnQgWE1MSHR0cFJlcXVlc3QsIGJ1dCBub3QgZnVsbHkgc3RhbmRhcmQgZ2xvYmFscy5cbiAqXG4gKiB3ZWIgd29ya2VyczpcbiAqICB0eXBlb2Ygd2luZG93IC0+IHVuZGVmaW5lZFxuICogIHR5cGVvZiBkb2N1bWVudCAtPiB1bmRlZmluZWRcbiAqXG4gKiByZWFjdC1uYXRpdmU6XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ1JlYWN0TmF0aXZlJ1xuICogbmF0aXZlc2NyaXB0XG4gKiAgbmF2aWdhdG9yLnByb2R1Y3QgLT4gJ05hdGl2ZVNjcmlwdCcgb3IgJ05TJ1xuICpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5jb25zdCBoYXNTdGFuZGFyZEJyb3dzZXJFbnYgPSBoYXNCcm93c2VyRW52ICYmXG4gICghX25hdmlnYXRvciB8fCBbJ1JlYWN0TmF0aXZlJywgJ05hdGl2ZVNjcmlwdCcsICdOUyddLmluZGV4T2YoX25hdmlnYXRvci5wcm9kdWN0KSA8IDApO1xuXG4vKipcbiAqIERldGVybWluZSBpZiB3ZSdyZSBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciB3ZWJXb3JrZXIgZW52aXJvbm1lbnRcbiAqXG4gKiBBbHRob3VnaCB0aGUgYGlzU3RhbmRhcmRCcm93c2VyRW52YCBtZXRob2QgaW5kaWNhdGVzIHRoYXRcbiAqIGBhbGxvd3MgYXhpb3MgdG8gcnVuIGluIGEgd2ViIHdvcmtlcmAsIHRoZSBXZWJXb3JrZXIgd2lsbCBzdGlsbCBiZVxuICogZmlsdGVyZWQgb3V0IGR1ZSB0byBpdHMganVkZ21lbnQgc3RhbmRhcmRcbiAqIGB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnYC5cbiAqIFRoaXMgbGVhZHMgdG8gYSBwcm9ibGVtIHdoZW4gYXhpb3MgcG9zdCBgRm9ybURhdGFgIGluIHdlYldvcmtlclxuICovXG5jb25zdCBoYXNTdGFuZGFyZEJyb3dzZXJXZWJXb3JrZXJFbnYgPSAoKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gJ3VuZGVmaW5lZCcgJiZcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICBzZWxmIGluc3RhbmNlb2YgV29ya2VyR2xvYmFsU2NvcGUgJiZcbiAgICB0eXBlb2Ygc2VsZi5pbXBvcnRTY3JpcHRzID09PSAnZnVuY3Rpb24nXG4gICk7XG59KSgpO1xuXG5jb25zdCBvcmlnaW4gPSBoYXNCcm93c2VyRW52ICYmIHdpbmRvdy5sb2NhdGlvbi5ocmVmIHx8ICdodHRwOi8vbG9jYWxob3N0JztcblxuZXhwb3J0IHtcbiAgaGFzQnJvd3NlckVudixcbiAgaGFzU3RhbmRhcmRCcm93c2VyV2ViV29ya2VyRW52LFxuICBoYXNTdGFuZGFyZEJyb3dzZXJFbnYsXG4gIF9uYXZpZ2F0b3IgYXMgbmF2aWdhdG9yLFxuICBvcmlnaW5cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/common/utils.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node/index.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/browser/index.js\");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/common/utils.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_0__,\n  ..._node_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBdUM7QUFDSTs7QUFFM0MsaUVBQWU7QUFDZixLQUFLLDZDQUFLO0FBQ1YsS0FBSyxzREFBUTtBQUNiLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvQG1lc2hzZGsvcHJvdmlkZXIvbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9wbGF0Zm9ybS9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi9ub2RlL2luZGV4LmpzJztcbmltcG9ydCAqIGFzIHV0aWxzIGZyb20gJy4vY29tbW9uL3V0aWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQge1xuICAuLi51dGlscyxcbiAgLi4ucGxhdGZvcm1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/platform/index.js\n"));

/***/ }),

/***/ "./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/@meshsdk/provider/node_modules/axios/lib/helpers/bind.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@meshsdk/provider/node_modules/axios/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@radix-ui/react-label/dist/index.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/@radix-ui/react-label/dist/index.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Root: () => (/* binding */ Root)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @radix-ui/react-primitive */ \"./node_modules/@radix-ui/react-primitive/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n\"use client\";\n\n// packages/react/label/src/Label.tsx\n\n\n\nvar NAME = \"Label\";\nvar Label = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, forwardedRef) => {\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(\n    _radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__.Primitive.label,\n    {\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: (event) => {\n        const target = event.target;\n        if (target.closest(\"button, input, select, textarea\")) return;\n        props.onMouseDown?.(event);\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }\n    }\n  );\n});\nLabel.displayName = NAME;\nvar Root = Label;\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHJhZGl4LXVpL3JlYWN0LWxhYmVsL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUE7QUFDK0I7QUFDdUI7QUFDZDtBQUN4QztBQUNBLFlBQVksNkNBQWdCO0FBQzVCLHlCQUF5QixzREFBRztBQUM1QixJQUFJLGdFQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9AcmFkaXgtdWkvcmVhY3QtbGFiZWwvZGlzdC9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHBhY2thZ2VzL3JlYWN0L2xhYmVsL3NyYy9MYWJlbC50c3hcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgUHJpbWl0aXZlIH0gZnJvbSBcIkByYWRpeC11aS9yZWFjdC1wcmltaXRpdmVcIjtcbmltcG9ydCB7IGpzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xudmFyIE5BTUUgPSBcIkxhYmVsXCI7XG52YXIgTGFiZWwgPSBSZWFjdC5mb3J3YXJkUmVmKChwcm9wcywgZm9yd2FyZGVkUmVmKSA9PiB7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFxuICAgIFByaW1pdGl2ZS5sYWJlbCxcbiAgICB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIHJlZjogZm9yd2FyZGVkUmVmLFxuICAgICAgb25Nb3VzZURvd246IChldmVudCkgPT4ge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmICh0YXJnZXQuY2xvc2VzdChcImJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWFcIikpIHJldHVybjtcbiAgICAgICAgcHJvcHMub25Nb3VzZURvd24/LihldmVudCk7XG4gICAgICAgIGlmICghZXZlbnQuZGVmYXVsdFByZXZlbnRlZCAmJiBldmVudC5kZXRhaWwgPiAxKSBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgIH1cbiAgKTtcbn0pO1xuTGFiZWwuZGlzcGxheU5hbWUgPSBOQU1FO1xudmFyIFJvb3QgPSBMYWJlbDtcbmV4cG9ydCB7XG4gIExhYmVsLFxuICBSb290XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@radix-ui/react-label/dist/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@utxorpc/sdk/lib/browser/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@utxorpc/sdk/lib/browser/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardanoQueryClient: () => (/* binding */ QueryClient),\n/* harmony export */   CardanoSubmitClient: () => (/* binding */ SubmitClient),\n/* harmony export */   CardanoSyncClient: () => (/* binding */ SyncClient)\n/* harmony export */ });\n/* harmony import */ var buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\");\n/* harmony import */ var _utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utxorpc/spec */ \"./node_modules/@utxorpc/spec/lib/index.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/base64-js/index.js\nvar require_base64_js = __commonJS({\n  \"node_modules/base64-js/index.js\"(exports) {\n    \"use strict\";\n    var import_buffer65 = __toESM(require_buffer());\n    exports.byteLength = byteLength;\n    exports.toByteArray = toByteArray;\n    exports.fromByteArray = fromByteArray;\n    var lookup = [];\n    var revLookup = [];\n    var Arr = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n    var code = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    for (i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    }\n    var i;\n    var len;\n    revLookup[\"-\".charCodeAt(0)] = 62;\n    revLookup[\"_\".charCodeAt(0)] = 63;\n    function getLens(b64) {\n      var len2 = b64.length;\n      if (len2 % 4 > 0) {\n        throw new Error(\"Invalid string. Length must be a multiple of 4\");\n      }\n      var validLen = b64.indexOf(\"=\");\n      if (validLen === -1) validLen = len2;\n      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;\n      return [validLen, placeHoldersLen];\n    }\n    function byteLength(b64) {\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function _byteLength(b64, validLen, placeHoldersLen) {\n      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n    }\n    function toByteArray(b64) {\n      var tmp;\n      var lens = getLens(b64);\n      var validLen = lens[0];\n      var placeHoldersLen = lens[1];\n      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n      var curByte = 0;\n      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;\n      var i2;\n      for (i2 = 0; i2 < len2; i2 += 4) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 18 | revLookup[b64.charCodeAt(i2 + 1)] << 12 | revLookup[b64.charCodeAt(i2 + 2)] << 6 | revLookup[b64.charCodeAt(i2 + 3)];\n        arr[curByte++] = tmp >> 16 & 255;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n      }\n      if (placeHoldersLen === 2) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 2 | revLookup[b64.charCodeAt(i2 + 1)] >> 4;\n        arr[curByte++] = tmp & 255;\n      }\n      if (placeHoldersLen === 1) {\n        tmp = revLookup[b64.charCodeAt(i2)] << 10 | revLookup[b64.charCodeAt(i2 + 1)] << 4 | revLookup[b64.charCodeAt(i2 + 2)] >> 2;\n        arr[curByte++] = tmp >> 8 & 255;\n        arr[curByte++] = tmp & 255;\n      }\n      return arr;\n    }\n    function tripletToBase64(num) {\n      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];\n    }\n    function encodeChunk(uint8, start, end) {\n      var tmp;\n      var output = [];\n      for (var i2 = start; i2 < end; i2 += 3) {\n        tmp = (uint8[i2] << 16 & 16711680) + (uint8[i2 + 1] << 8 & 65280) + (uint8[i2 + 2] & 255);\n        output.push(tripletToBase64(tmp));\n      }\n      return output.join(\"\");\n    }\n    function fromByteArray(uint8) {\n      var tmp;\n      var len2 = uint8.length;\n      var extraBytes = len2 % 3;\n      var parts = [];\n      var maxChunkLength = 16383;\n      for (var i2 = 0, len22 = len2 - extraBytes; i2 < len22; i2 += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i2, i2 + maxChunkLength > len22 ? len22 : i2 + maxChunkLength));\n      }\n      if (extraBytes === 1) {\n        tmp = uint8[len2 - 1];\n        parts.push(\n          lookup[tmp >> 2] + lookup[tmp << 4 & 63] + \"==\"\n        );\n      } else if (extraBytes === 2) {\n        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];\n        parts.push(\n          lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + \"=\"\n        );\n      }\n      return parts.join(\"\");\n    }\n  }\n});\n\n// node_modules/ieee754/index.js\nvar require_ieee754 = __commonJS({\n  \"node_modules/ieee754/index.js\"(exports) {\n    \"use strict\";\n    var import_buffer65 = __toESM(require_buffer());\n    exports.read = function(buffer, offset, isLE, mLen, nBytes) {\n      var e, m;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var nBits = -7;\n      var i = isLE ? nBytes - 1 : 0;\n      var d = isLE ? -1 : 1;\n      var s = buffer[offset + i];\n      i += d;\n      e = s & (1 << -nBits) - 1;\n      s >>= -nBits;\n      nBits += eLen;\n      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {\n      }\n      m = e & (1 << -nBits) - 1;\n      e >>= -nBits;\n      nBits += mLen;\n      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {\n      }\n      if (e === 0) {\n        e = 1 - eBias;\n      } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n      } else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n      }\n      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n    };\n    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {\n      var e, m, c;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n      var i = isLE ? 0 : nBytes - 1;\n      var d = isLE ? 1 : -1;\n      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n      value = Math.abs(value);\n      if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n      } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n          e--;\n          c *= 2;\n        }\n        if (e + eBias >= 1) {\n          value += rt / c;\n        } else {\n          value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n          e++;\n          c /= 2;\n        }\n        if (e + eBias >= eMax) {\n          m = 0;\n          e = eMax;\n        } else if (e + eBias >= 1) {\n          m = (value * c - 1) * Math.pow(2, mLen);\n          e = e + eBias;\n        } else {\n          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n          e = 0;\n        }\n      }\n      for (; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8) {\n      }\n      e = e << mLen | m;\n      eLen += mLen;\n      for (; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8) {\n      }\n      buffer[offset + i - d] |= s * 128;\n    };\n  }\n});\n\n// node_modules/buffer/index.js\nvar require_buffer = __commonJS({\n  \"node_modules/buffer/index.js\"(exports) {\n    \"use strict\";\n    var base64 = require_base64_js();\n    var ieee754 = require_ieee754();\n    var customInspectSymbol = typeof Symbol === \"function\" && typeof Symbol[\"for\"] === \"function\" ? Symbol[\"for\"](\"nodejs.util.inspect.custom\") : null;\n    exports.Buffer = Buffer3;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n    var K_MAX_LENGTH = 2147483647;\n    exports.kMaxLength = K_MAX_LENGTH;\n    Buffer3.TYPED_ARRAY_SUPPORT = typedArraySupport();\n    if (!Buffer3.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n      console.error(\n        \"This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\"\n      );\n    }\n    function typedArraySupport() {\n      try {\n        const arr = new Uint8Array(1);\n        const proto = { foo: function() {\n          return 42;\n        } };\n        Object.setPrototypeOf(proto, Uint8Array.prototype);\n        Object.setPrototypeOf(arr, proto);\n        return arr.foo() === 42;\n      } catch (e) {\n        return false;\n      }\n    }\n    Object.defineProperty(Buffer3.prototype, \"parent\", {\n      enumerable: true,\n      get: function() {\n        if (!Buffer3.isBuffer(this)) return void 0;\n        return this.buffer;\n      }\n    });\n    Object.defineProperty(Buffer3.prototype, \"offset\", {\n      enumerable: true,\n      get: function() {\n        if (!Buffer3.isBuffer(this)) return void 0;\n        return this.byteOffset;\n      }\n    });\n    function createBuffer(length) {\n      if (length > K_MAX_LENGTH) {\n        throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"');\n      }\n      const buf = new Uint8Array(length);\n      Object.setPrototypeOf(buf, Buffer3.prototype);\n      return buf;\n    }\n    function Buffer3(arg, encodingOrOffset, length) {\n      if (typeof arg === \"number\") {\n        if (typeof encodingOrOffset === \"string\") {\n          throw new TypeError(\n            'The \"string\" argument must be of type string. Received type number'\n          );\n        }\n        return allocUnsafe(arg);\n      }\n      return from(arg, encodingOrOffset, length);\n    }\n    Buffer3.poolSize = 8192;\n    function from(value, encodingOrOffset, length) {\n      if (typeof value === \"string\") {\n        return fromString(value, encodingOrOffset);\n      }\n      if (ArrayBuffer.isView(value)) {\n        return fromArrayView(value);\n      }\n      if (value == null) {\n        throw new TypeError(\n          \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n        );\n      }\n      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n      if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n      if (typeof value === \"number\") {\n        throw new TypeError(\n          'The \"value\" argument must not be of type number. Received type number'\n        );\n      }\n      const valueOf = value.valueOf && value.valueOf();\n      if (valueOf != null && valueOf !== value) {\n        return Buffer3.from(valueOf, encodingOrOffset, length);\n      }\n      const b = fromObject(value);\n      if (b) return b;\n      if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === \"function\") {\n        return Buffer3.from(value[Symbol.toPrimitive](\"string\"), encodingOrOffset, length);\n      }\n      throw new TypeError(\n        \"The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \" + typeof value\n      );\n    }\n    Buffer3.from = function(value, encodingOrOffset, length) {\n      return from(value, encodingOrOffset, length);\n    };\n    Object.setPrototypeOf(Buffer3.prototype, Uint8Array.prototype);\n    Object.setPrototypeOf(Buffer3, Uint8Array);\n    function assertSize(size) {\n      if (typeof size !== \"number\") {\n        throw new TypeError('\"size\" argument must be of type number');\n      } else if (size < 0) {\n        throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n      }\n    }\n    function alloc(size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(size);\n      }\n      if (fill !== void 0) {\n        return typeof encoding === \"string\" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n      }\n      return createBuffer(size);\n    }\n    Buffer3.alloc = function(size, fill, encoding) {\n      return alloc(size, fill, encoding);\n    };\n    function allocUnsafe(size) {\n      assertSize(size);\n      return createBuffer(size < 0 ? 0 : checked(size) | 0);\n    }\n    Buffer3.allocUnsafe = function(size) {\n      return allocUnsafe(size);\n    };\n    Buffer3.allocUnsafeSlow = function(size) {\n      return allocUnsafe(size);\n    };\n    function fromString(string, encoding) {\n      if (typeof encoding !== \"string\" || encoding === \"\") {\n        encoding = \"utf8\";\n      }\n      if (!Buffer3.isEncoding(encoding)) {\n        throw new TypeError(\"Unknown encoding: \" + encoding);\n      }\n      const length = byteLength(string, encoding) | 0;\n      let buf = createBuffer(length);\n      const actual = buf.write(string, encoding);\n      if (actual !== length) {\n        buf = buf.slice(0, actual);\n      }\n      return buf;\n    }\n    function fromArrayLike(array) {\n      const length = array.length < 0 ? 0 : checked(array.length) | 0;\n      const buf = createBuffer(length);\n      for (let i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n      }\n      return buf;\n    }\n    function fromArrayView(arrayView) {\n      if (isInstance(arrayView, Uint8Array)) {\n        const copy = new Uint8Array(arrayView);\n        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);\n      }\n      return fromArrayLike(arrayView);\n    }\n    function fromArrayBuffer(array, byteOffset, length) {\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\"offset\" is outside of buffer bounds');\n      }\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\"length\" is outside of buffer bounds');\n      }\n      let buf;\n      if (byteOffset === void 0 && length === void 0) {\n        buf = new Uint8Array(array);\n      } else if (length === void 0) {\n        buf = new Uint8Array(array, byteOffset);\n      } else {\n        buf = new Uint8Array(array, byteOffset, length);\n      }\n      Object.setPrototypeOf(buf, Buffer3.prototype);\n      return buf;\n    }\n    function fromObject(obj) {\n      if (Buffer3.isBuffer(obj)) {\n        const len = checked(obj.length) | 0;\n        const buf = createBuffer(len);\n        if (buf.length === 0) {\n          return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n      }\n      if (obj.length !== void 0) {\n        if (typeof obj.length !== \"number\" || numberIsNaN(obj.length)) {\n          return createBuffer(0);\n        }\n        return fromArrayLike(obj);\n      }\n      if (obj.type === \"Buffer\" && Array.isArray(obj.data)) {\n        return fromArrayLike(obj.data);\n      }\n    }\n    function checked(length) {\n      if (length >= K_MAX_LENGTH) {\n        throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\" + K_MAX_LENGTH.toString(16) + \" bytes\");\n      }\n      return length | 0;\n    }\n    function SlowBuffer(length) {\n      if (+length != length) {\n        length = 0;\n      }\n      return Buffer3.alloc(+length);\n    }\n    Buffer3.isBuffer = function isBuffer(b) {\n      return b != null && b._isBuffer === true && b !== Buffer3.prototype;\n    };\n    Buffer3.compare = function compare(a, b) {\n      if (isInstance(a, Uint8Array)) a = Buffer3.from(a, a.offset, a.byteLength);\n      if (isInstance(b, Uint8Array)) b = Buffer3.from(b, b.offset, b.byteLength);\n      if (!Buffer3.isBuffer(a) || !Buffer3.isBuffer(b)) {\n        throw new TypeError(\n          'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n        );\n      }\n      if (a === b) return 0;\n      let x = a.length;\n      let y = b.length;\n      for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n    Buffer3.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case \"hex\":\n        case \"utf8\":\n        case \"utf-8\":\n        case \"ascii\":\n        case \"latin1\":\n        case \"binary\":\n        case \"base64\":\n        case \"ucs2\":\n        case \"ucs-2\":\n        case \"utf16le\":\n        case \"utf-16le\":\n          return true;\n        default:\n          return false;\n      }\n    };\n    Buffer3.concat = function concat(list, length) {\n      if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n      if (list.length === 0) {\n        return Buffer3.alloc(0);\n      }\n      let i;\n      if (length === void 0) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n      const buffer = Buffer3.allocUnsafe(length);\n      let pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        let buf = list[i];\n        if (isInstance(buf, Uint8Array)) {\n          if (pos + buf.length > buffer.length) {\n            if (!Buffer3.isBuffer(buf)) buf = Buffer3.from(buf);\n            buf.copy(buffer, pos);\n          } else {\n            Uint8Array.prototype.set.call(\n              buffer,\n              buf,\n              pos\n            );\n          }\n        } else if (!Buffer3.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        } else {\n          buf.copy(buffer, pos);\n        }\n        pos += buf.length;\n      }\n      return buffer;\n    };\n    function byteLength(string, encoding) {\n      if (Buffer3.isBuffer(string)) {\n        return string.length;\n      }\n      if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n        return string.byteLength;\n      }\n      if (typeof string !== \"string\") {\n        throw new TypeError(\n          'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string\n        );\n      }\n      const len = string.length;\n      const mustMatch = arguments.length > 2 && arguments[2] === true;\n      if (!mustMatch && len === 0) return 0;\n      let loweredCase = false;\n      for (; ; ) {\n        switch (encoding) {\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n            return len;\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8ToBytes(string).length;\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return len * 2;\n          case \"hex\":\n            return len >>> 1;\n          case \"base64\":\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) {\n              return mustMatch ? -1 : utf8ToBytes(string).length;\n            }\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer3.byteLength = byteLength;\n    function slowToString(encoding, start, end) {\n      let loweredCase = false;\n      if (start === void 0 || start < 0) {\n        start = 0;\n      }\n      if (start > this.length) {\n        return \"\";\n      }\n      if (end === void 0 || end > this.length) {\n        end = this.length;\n      }\n      if (end <= 0) {\n        return \"\";\n      }\n      end >>>= 0;\n      start >>>= 0;\n      if (end <= start) {\n        return \"\";\n      }\n      if (!encoding) encoding = \"utf8\";\n      while (true) {\n        switch (encoding) {\n          case \"hex\":\n            return hexSlice(this, start, end);\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8Slice(this, start, end);\n          case \"ascii\":\n            return asciiSlice(this, start, end);\n          case \"latin1\":\n          case \"binary\":\n            return latin1Slice(this, start, end);\n          case \"base64\":\n            return base64Slice(this, start, end);\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return utf16leSlice(this, start, end);\n          default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (encoding + \"\").toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer3.prototype._isBuffer = true;\n    function swap(b, n, m) {\n      const i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n    Buffer3.prototype.swap16 = function swap16() {\n      const len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n      }\n      for (let i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n    Buffer3.prototype.swap32 = function swap32() {\n      const len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n      }\n      for (let i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n    Buffer3.prototype.swap64 = function swap64() {\n      const len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n      }\n      for (let i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n    Buffer3.prototype.toString = function toString() {\n      const length = this.length;\n      if (length === 0) return \"\";\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n    Buffer3.prototype.toLocaleString = Buffer3.prototype.toString;\n    Buffer3.prototype.equals = function equals(b) {\n      if (!Buffer3.isBuffer(b)) throw new TypeError(\"Argument must be a Buffer\");\n      if (this === b) return true;\n      return Buffer3.compare(this, b) === 0;\n    };\n    Buffer3.prototype.inspect = function inspect() {\n      let str = \"\";\n      const max = exports.INSPECT_MAX_BYTES;\n      str = this.toString(\"hex\", 0, max).replace(/(.{2})/g, \"$1 \").trim();\n      if (this.length > max) str += \" ... \";\n      return \"<Buffer \" + str + \">\";\n    };\n    if (customInspectSymbol) {\n      Buffer3.prototype[customInspectSymbol] = Buffer3.prototype.inspect;\n    }\n    Buffer3.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (isInstance(target, Uint8Array)) {\n        target = Buffer3.from(target, target.offset, target.byteLength);\n      }\n      if (!Buffer3.isBuffer(target)) {\n        throw new TypeError(\n          'The \"target\" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target\n        );\n      }\n      if (start === void 0) {\n        start = 0;\n      }\n      if (end === void 0) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === void 0) {\n        thisStart = 0;\n      }\n      if (thisEnd === void 0) {\n        thisEnd = this.length;\n      }\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError(\"out of range index\");\n      }\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n      if (this === target) return 0;\n      let x = thisEnd - thisStart;\n      let y = end - start;\n      const len = Math.min(x, y);\n      const thisCopy = this.slice(thisStart, thisEnd);\n      const targetCopy = target.slice(start, end);\n      for (let i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      if (buffer.length === 0) return -1;\n      if (typeof byteOffset === \"string\") {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 2147483647) {\n        byteOffset = 2147483647;\n      } else if (byteOffset < -2147483648) {\n        byteOffset = -2147483648;\n      }\n      byteOffset = +byteOffset;\n      if (numberIsNaN(byteOffset)) {\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;\n        else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;\n        else return -1;\n      }\n      if (typeof val === \"string\") {\n        val = Buffer3.from(val, encoding);\n      }\n      if (Buffer3.isBuffer(val)) {\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === \"number\") {\n        val = val & 255;\n        if (typeof Uint8Array.prototype.indexOf === \"function\") {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n      throw new TypeError(\"val must be string, number or Buffer\");\n    }\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      let indexSize = 1;\n      let arrLength = arr.length;\n      let valLength = val.length;\n      if (encoding !== void 0) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === \"ucs2\" || encoding === \"ucs-2\" || encoding === \"utf16le\" || encoding === \"utf-16le\") {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n      function read(buf, i2) {\n        if (indexSize === 1) {\n          return buf[i2];\n        } else {\n          return buf.readUInt16BE(i2 * indexSize);\n        }\n      }\n      let i;\n      if (dir) {\n        let foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          let found = true;\n          for (let j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found) return i;\n        }\n      }\n      return -1;\n    }\n    Buffer3.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n    Buffer3.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n    Buffer3.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      const remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n      const strLen = string.length;\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      let i;\n      for (i = 0; i < length; ++i) {\n        const parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n    Buffer3.prototype.write = function write(string, offset, length, encoding) {\n      if (offset === void 0) {\n        encoding = \"utf8\";\n        length = this.length;\n        offset = 0;\n      } else if (length === void 0 && typeof offset === \"string\") {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n      } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n          length = length >>> 0;\n          if (encoding === void 0) encoding = \"utf8\";\n        } else {\n          encoding = length;\n          length = void 0;\n        }\n      } else {\n        throw new Error(\n          \"Buffer.write(string, encoding, offset[, length]) is no longer supported\"\n        );\n      }\n      const remaining = this.length - offset;\n      if (length === void 0 || length > remaining) length = remaining;\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError(\"Attempt to write outside buffer bounds\");\n      }\n      if (!encoding) encoding = \"utf8\";\n      let loweredCase = false;\n      for (; ; ) {\n        switch (encoding) {\n          case \"hex\":\n            return hexWrite(this, string, offset, length);\n          case \"utf8\":\n          case \"utf-8\":\n            return utf8Write(this, string, offset, length);\n          case \"ascii\":\n          case \"latin1\":\n          case \"binary\":\n            return asciiWrite(this, string, offset, length);\n          case \"base64\":\n            return base64Write(this, string, offset, length);\n          case \"ucs2\":\n          case \"ucs-2\":\n          case \"utf16le\":\n          case \"utf-16le\":\n            return ucs2Write(this, string, offset, length);\n          default:\n            if (loweredCase) throw new TypeError(\"Unknown encoding: \" + encoding);\n            encoding = (\"\" + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n    Buffer3.prototype.toJSON = function toJSON() {\n      return {\n        type: \"Buffer\",\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      const res = [];\n      let i = start;\n      while (i < end) {\n        const firstByte = buf[i];\n        let codePoint = null;\n        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n        if (i + bytesPerSequence <= end) {\n          let secondByte, thirdByte, fourthByte, tempCodePoint;\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 128) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 192) === 128) {\n                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n                if (tempCodePoint > 127) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n        if (codePoint === null) {\n          codePoint = 65533;\n          bytesPerSequence = 1;\n        } else if (codePoint > 65535) {\n          codePoint -= 65536;\n          res.push(codePoint >>> 10 & 1023 | 55296);\n          codePoint = 56320 | codePoint & 1023;\n        }\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n      return decodeCodePointsArray(res);\n    }\n    var MAX_ARGUMENTS_LENGTH = 4096;\n    function decodeCodePointsArray(codePoints) {\n      const len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints);\n      }\n      let res = \"\";\n      let i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(\n          String,\n          codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n        );\n      }\n      return res;\n    }\n    function asciiSlice(buf, start, end) {\n      let ret = \"\";\n      end = Math.min(buf.length, end);\n      for (let i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 127);\n      }\n      return ret;\n    }\n    function latin1Slice(buf, start, end) {\n      let ret = \"\";\n      end = Math.min(buf.length, end);\n      for (let i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n    function hexSlice(buf, start, end) {\n      const len = buf.length;\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n      let out = \"\";\n      for (let i = start; i < end; ++i) {\n        out += hexSliceLookupTable[buf[i]];\n      }\n      return out;\n    }\n    function utf16leSlice(buf, start, end) {\n      const bytes = buf.slice(start, end);\n      let res = \"\";\n      for (let i = 0; i < bytes.length - 1; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n      return res;\n    }\n    Buffer3.prototype.slice = function slice(start, end) {\n      const len = this.length;\n      start = ~~start;\n      end = end === void 0 ? len : ~~end;\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n      if (end < start) end = start;\n      const newBuf = this.subarray(start, end);\n      Object.setPrototypeOf(newBuf, Buffer3.prototype);\n      return newBuf;\n    };\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError(\"offset is not uint\");\n      if (offset + ext > length) throw new RangeError(\"Trying to access beyond buffer length\");\n    }\n    Buffer3.prototype.readUintLE = Buffer3.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength2, this.length);\n      let val = this[offset];\n      let mul = 1;\n      let i = 0;\n      while (++i < byteLength2 && (mul *= 256)) {\n        val += this[offset + i] * mul;\n      }\n      return val;\n    };\n    Buffer3.prototype.readUintBE = Buffer3.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength2, this.length);\n      }\n      let val = this[offset + --byteLength2];\n      let mul = 1;\n      while (byteLength2 > 0 && (mul *= 256)) {\n        val += this[offset + --byteLength2] * mul;\n      }\n      return val;\n    };\n    Buffer3.prototype.readUint8 = Buffer3.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n    Buffer3.prototype.readUint16LE = Buffer3.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n    Buffer3.prototype.readUint16BE = Buffer3.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n    Buffer3.prototype.readUint32LE = Buffer3.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;\n    };\n    Buffer3.prototype.readUint32BE = Buffer3.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n    Buffer3.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;\n      const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;\n      return BigInt(lo) + (BigInt(hi) << BigInt(32));\n    });\n    Buffer3.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n      const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;\n      return (BigInt(hi) << BigInt(32)) + BigInt(lo);\n    });\n    Buffer3.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength2, this.length);\n      let val = this[offset];\n      let mul = 1;\n      let i = 0;\n      while (++i < byteLength2 && (mul *= 256)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 128;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);\n      return val;\n    };\n    Buffer3.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength2, this.length);\n      let i = byteLength2;\n      let mul = 1;\n      let val = this[offset + --i];\n      while (i > 0 && (mul *= 256)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 128;\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength2);\n      return val;\n    };\n    Buffer3.prototype.readInt8 = function readInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 128)) return this[offset];\n      return (255 - this[offset] + 1) * -1;\n    };\n    Buffer3.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      const val = this[offset] | this[offset + 1] << 8;\n      return val & 32768 ? val | 4294901760 : val;\n    };\n    Buffer3.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      const val = this[offset + 1] | this[offset] << 8;\n      return val & 32768 ? val | 4294901760 : val;\n    };\n    Buffer3.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n    Buffer3.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n    Buffer3.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);\n      return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);\n    });\n    Buffer3.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {\n      offset = offset >>> 0;\n      validateNumber(offset, \"offset\");\n      const first = this[offset];\n      const last = this[offset + 7];\n      if (first === void 0 || last === void 0) {\n        boundsError(offset, this.length - 8);\n      }\n      const val = (first << 24) + // Overflow\n      this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];\n      return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);\n    });\n    Buffer3.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n    Buffer3.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n    Buffer3.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n    Buffer3.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer3.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n    }\n    Buffer3.prototype.writeUintLE = Buffer3.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n        checkInt(this, value, offset, byteLength2, maxBytes, 0);\n      }\n      let mul = 1;\n      let i = 0;\n      this[offset] = value & 255;\n      while (++i < byteLength2 && (mul *= 256)) {\n        this[offset + i] = value / mul & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeUintBE = Buffer3.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength2 = byteLength2 >>> 0;\n      if (!noAssert) {\n        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;\n        checkInt(this, value, offset, byteLength2, maxBytes, 0);\n      }\n      let i = byteLength2 - 1;\n      let mul = 1;\n      this[offset + i] = value & 255;\n      while (--i >= 0 && (mul *= 256)) {\n        this[offset + i] = value / mul & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeUint8 = Buffer3.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 255, 0);\n      this[offset] = value & 255;\n      return offset + 1;\n    };\n    Buffer3.prototype.writeUint16LE = Buffer3.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeUint16BE = Buffer3.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 255;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeUint32LE = Buffer3.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n      this[offset + 3] = value >>> 24;\n      this[offset + 2] = value >>> 16;\n      this[offset + 1] = value >>> 8;\n      this[offset] = value & 255;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeUint32BE = Buffer3.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 255;\n      return offset + 4;\n    };\n    function wrtBigUInt64LE(buf, value, offset, min, max) {\n      checkIntBI(value, min, max, buf, offset, 7);\n      let lo = Number(value & BigInt(4294967295));\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      lo = lo >> 8;\n      buf[offset++] = lo;\n      let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      hi = hi >> 8;\n      buf[offset++] = hi;\n      return offset;\n    }\n    function wrtBigUInt64BE(buf, value, offset, min, max) {\n      checkIntBI(value, min, max, buf, offset, 7);\n      let lo = Number(value & BigInt(4294967295));\n      buf[offset + 7] = lo;\n      lo = lo >> 8;\n      buf[offset + 6] = lo;\n      lo = lo >> 8;\n      buf[offset + 5] = lo;\n      lo = lo >> 8;\n      buf[offset + 4] = lo;\n      let hi = Number(value >> BigInt(32) & BigInt(4294967295));\n      buf[offset + 3] = hi;\n      hi = hi >> 8;\n      buf[offset + 2] = hi;\n      hi = hi >> 8;\n      buf[offset + 1] = hi;\n      hi = hi >> 8;\n      buf[offset] = hi;\n      return offset + 8;\n    }\n    Buffer3.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {\n      return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n    });\n    Buffer3.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {\n      return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt(\"0xffffffffffffffff\"));\n    });\n    Buffer3.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength2 - 1);\n        checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n      }\n      let i = 0;\n      let mul = 1;\n      let sub = 0;\n      this[offset] = value & 255;\n      while (++i < byteLength2 && (mul *= 256)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        const limit = Math.pow(2, 8 * byteLength2 - 1);\n        checkInt(this, value, offset, byteLength2, limit - 1, -limit);\n      }\n      let i = byteLength2 - 1;\n      let mul = 1;\n      let sub = 0;\n      this[offset + i] = value & 255;\n      while (--i >= 0 && (mul *= 256)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 255;\n      }\n      return offset + byteLength2;\n    };\n    Buffer3.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 127, -128);\n      if (value < 0) value = 255 + value + 1;\n      this[offset] = value & 255;\n      return offset + 1;\n    };\n    Buffer3.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 255;\n      return offset + 2;\n    };\n    Buffer3.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n      this[offset] = value & 255;\n      this[offset + 1] = value >>> 8;\n      this[offset + 2] = value >>> 16;\n      this[offset + 3] = value >>> 24;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);\n      if (value < 0) value = 4294967295 + value + 1;\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 255;\n      return offset + 4;\n    };\n    Buffer3.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {\n      return wrtBigUInt64LE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n    });\n    Buffer3.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {\n      return wrtBigUInt64BE(this, value, offset, -BigInt(\"0x8000000000000000\"), BigInt(\"0x7fffffffffffffff\"));\n    });\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError(\"Index out of range\");\n      if (offset < 0) throw new RangeError(\"Index out of range\");\n    }\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n    Buffer3.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n    Buffer3.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n    Buffer3.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n    Buffer3.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n    Buffer3.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!Buffer3.isBuffer(target)) throw new TypeError(\"argument should be a Buffer\");\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start;\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0;\n      if (targetStart < 0) {\n        throw new RangeError(\"targetStart out of bounds\");\n      }\n      if (start < 0 || start >= this.length) throw new RangeError(\"Index out of range\");\n      if (end < 0) throw new RangeError(\"sourceEnd out of bounds\");\n      if (end > this.length) end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n      const len = end - start;\n      if (this === target && typeof Uint8Array.prototype.copyWithin === \"function\") {\n        this.copyWithin(targetStart, start, end);\n      } else {\n        Uint8Array.prototype.set.call(\n          target,\n          this.subarray(start, end),\n          targetStart\n        );\n      }\n      return len;\n    };\n    Buffer3.prototype.fill = function fill(val, start, end, encoding) {\n      if (typeof val === \"string\") {\n        if (typeof start === \"string\") {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === \"string\") {\n          encoding = end;\n          end = this.length;\n        }\n        if (encoding !== void 0 && typeof encoding !== \"string\") {\n          throw new TypeError(\"encoding must be a string\");\n        }\n        if (typeof encoding === \"string\" && !Buffer3.isEncoding(encoding)) {\n          throw new TypeError(\"Unknown encoding: \" + encoding);\n        }\n        if (val.length === 1) {\n          const code = val.charCodeAt(0);\n          if (encoding === \"utf8\" && code < 128 || encoding === \"latin1\") {\n            val = code;\n          }\n        }\n      } else if (typeof val === \"number\") {\n        val = val & 255;\n      } else if (typeof val === \"boolean\") {\n        val = Number(val);\n      }\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError(\"Out of range index\");\n      }\n      if (end <= start) {\n        return this;\n      }\n      start = start >>> 0;\n      end = end === void 0 ? this.length : end >>> 0;\n      if (!val) val = 0;\n      let i;\n      if (typeof val === \"number\") {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        const bytes = Buffer3.isBuffer(val) ? val : Buffer3.from(val, encoding);\n        const len = bytes.length;\n        if (len === 0) {\n          throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        }\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n      return this;\n    };\n    var errors = {};\n    function E(sym, getMessage, Base) {\n      errors[sym] = class NodeError extends Base {\n        constructor() {\n          super();\n          Object.defineProperty(this, \"message\", {\n            value: getMessage.apply(this, arguments),\n            writable: true,\n            configurable: true\n          });\n          this.name = `${this.name} [${sym}]`;\n          this.stack;\n          delete this.name;\n        }\n        get code() {\n          return sym;\n        }\n        set code(value) {\n          Object.defineProperty(this, \"code\", {\n            configurable: true,\n            enumerable: true,\n            value,\n            writable: true\n          });\n        }\n        toString() {\n          return `${this.name} [${sym}]: ${this.message}`;\n        }\n      };\n    }\n    E(\n      \"ERR_BUFFER_OUT_OF_BOUNDS\",\n      function(name) {\n        if (name) {\n          return `${name} is outside of buffer bounds`;\n        }\n        return \"Attempt to access memory outside buffer bounds\";\n      },\n      RangeError\n    );\n    E(\n      \"ERR_INVALID_ARG_TYPE\",\n      function(name, actual) {\n        return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`;\n      },\n      TypeError\n    );\n    E(\n      \"ERR_OUT_OF_RANGE\",\n      function(str, range, input) {\n        let msg = `The value of \"${str}\" is out of range.`;\n        let received = input;\n        if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n          received = addNumericalSeparator(String(input));\n        } else if (typeof input === \"bigint\") {\n          received = String(input);\n          if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n            received = addNumericalSeparator(received);\n          }\n          received += \"n\";\n        }\n        msg += ` It must be ${range}. Received ${received}`;\n        return msg;\n      },\n      RangeError\n    );\n    function addNumericalSeparator(val) {\n      let res = \"\";\n      let i = val.length;\n      const start = val[0] === \"-\" ? 1 : 0;\n      for (; i >= start + 4; i -= 3) {\n        res = `_${val.slice(i - 3, i)}${res}`;\n      }\n      return `${val.slice(0, i)}${res}`;\n    }\n    function checkBounds(buf, offset, byteLength2) {\n      validateNumber(offset, \"offset\");\n      if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {\n        boundsError(offset, buf.length - (byteLength2 + 1));\n      }\n    }\n    function checkIntBI(value, min, max, buf, offset, byteLength2) {\n      if (value > max || value < min) {\n        const n = typeof min === \"bigint\" ? \"n\" : \"\";\n        let range;\n        if (byteLength2 > 3) {\n          if (min === 0 || min === BigInt(0)) {\n            range = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;\n          } else {\n            range = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;\n          }\n        } else {\n          range = `>= ${min}${n} and <= ${max}${n}`;\n        }\n        throw new errors.ERR_OUT_OF_RANGE(\"value\", range, value);\n      }\n      checkBounds(buf, offset, byteLength2);\n    }\n    function validateNumber(value, name) {\n      if (typeof value !== \"number\") {\n        throw new errors.ERR_INVALID_ARG_TYPE(name, \"number\", value);\n      }\n    }\n    function boundsError(value, length, type) {\n      if (Math.floor(value) !== value) {\n        validateNumber(value, type);\n        throw new errors.ERR_OUT_OF_RANGE(type || \"offset\", \"an integer\", value);\n      }\n      if (length < 0) {\n        throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();\n      }\n      throw new errors.ERR_OUT_OF_RANGE(\n        type || \"offset\",\n        `>= ${type ? 1 : 0} and <= ${length}`,\n        value\n      );\n    }\n    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n    function base64clean(str) {\n      str = str.split(\"=\")[0];\n      str = str.trim().replace(INVALID_BASE64_RE, \"\");\n      if (str.length < 2) return \"\";\n      while (str.length % 4 !== 0) {\n        str = str + \"=\";\n      }\n      return str;\n    }\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      let codePoint;\n      const length = string.length;\n      let leadSurrogate = null;\n      const bytes = [];\n      for (let i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        if (codePoint > 55295 && codePoint < 57344) {\n          if (!leadSurrogate) {\n            if (codePoint > 56319) {\n              if ((units -= 3) > -1) bytes.push(239, 191, 189);\n              continue;\n            } else if (i + 1 === length) {\n              if ((units -= 3) > -1) bytes.push(239, 191, 189);\n              continue;\n            }\n            leadSurrogate = codePoint;\n            continue;\n          }\n          if (codePoint < 56320) {\n            if ((units -= 3) > -1) bytes.push(239, 191, 189);\n            leadSurrogate = codePoint;\n            continue;\n          }\n          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n        } else if (leadSurrogate) {\n          if ((units -= 3) > -1) bytes.push(239, 191, 189);\n        }\n        leadSurrogate = null;\n        if (codePoint < 128) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 2048) {\n          if ((units -= 2) < 0) break;\n          bytes.push(\n            codePoint >> 6 | 192,\n            codePoint & 63 | 128\n          );\n        } else if (codePoint < 65536) {\n          if ((units -= 3) < 0) break;\n          bytes.push(\n            codePoint >> 12 | 224,\n            codePoint >> 6 & 63 | 128,\n            codePoint & 63 | 128\n          );\n        } else if (codePoint < 1114112) {\n          if ((units -= 4) < 0) break;\n          bytes.push(\n            codePoint >> 18 | 240,\n            codePoint >> 12 & 63 | 128,\n            codePoint >> 6 & 63 | 128,\n            codePoint & 63 | 128\n          );\n        } else {\n          throw new Error(\"Invalid code point\");\n        }\n      }\n      return bytes;\n    }\n    function asciiToBytes(str) {\n      const byteArray = [];\n      for (let i = 0; i < str.length; ++i) {\n        byteArray.push(str.charCodeAt(i) & 255);\n      }\n      return byteArray;\n    }\n    function utf16leToBytes(str, units) {\n      let c, hi, lo;\n      const byteArray = [];\n      for (let i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n      return byteArray;\n    }\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n    function blitBuffer(src, dst, offset, length) {\n      let i;\n      for (i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n    function isInstance(obj, type) {\n      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;\n    }\n    function numberIsNaN(obj) {\n      return obj !== obj;\n    }\n    var hexSliceLookupTable = function() {\n      const alphabet = \"0123456789abcdef\";\n      const table = new Array(256);\n      for (let i = 0; i < 16; ++i) {\n        const i16 = i * 16;\n        for (let j = 0; j < 16; ++j) {\n          table[i16 + j] = alphabet[i] + alphabet[j];\n        }\n      }\n      return table;\n    }();\n    function defineBigIntMethod(fn) {\n      return typeof BigInt === \"undefined\" ? BufferBigIntNotDefined : fn;\n    }\n    function BufferBigIntNotDefined() {\n      throw new Error(\"BigInt not supported\");\n    }\n  }\n});\n\n// src/index.ts\nvar import_buffer64 = __toESM(require_buffer());\n\n// src/cardano.ts\nvar import_buffer62 = __toESM(require_buffer());\n\n// node_modules/@connectrpc/connect/dist/esm/index.js\nvar import_buffer49 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/connect-error.js\nvar import_buffer3 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/code.js\nvar import_buffer = __toESM(require_buffer(), 1);\nvar Code;\n(function(Code2) {\n  Code2[Code2[\"Canceled\"] = 1] = \"Canceled\";\n  Code2[Code2[\"Unknown\"] = 2] = \"Unknown\";\n  Code2[Code2[\"InvalidArgument\"] = 3] = \"InvalidArgument\";\n  Code2[Code2[\"DeadlineExceeded\"] = 4] = \"DeadlineExceeded\";\n  Code2[Code2[\"NotFound\"] = 5] = \"NotFound\";\n  Code2[Code2[\"AlreadyExists\"] = 6] = \"AlreadyExists\";\n  Code2[Code2[\"PermissionDenied\"] = 7] = \"PermissionDenied\";\n  Code2[Code2[\"ResourceExhausted\"] = 8] = \"ResourceExhausted\";\n  Code2[Code2[\"FailedPrecondition\"] = 9] = \"FailedPrecondition\";\n  Code2[Code2[\"Aborted\"] = 10] = \"Aborted\";\n  Code2[Code2[\"OutOfRange\"] = 11] = \"OutOfRange\";\n  Code2[Code2[\"Unimplemented\"] = 12] = \"Unimplemented\";\n  Code2[Code2[\"Internal\"] = 13] = \"Internal\";\n  Code2[Code2[\"Unavailable\"] = 14] = \"Unavailable\";\n  Code2[Code2[\"DataLoss\"] = 15] = \"DataLoss\";\n  Code2[Code2[\"Unauthenticated\"] = 16] = \"Unauthenticated\";\n})(Code || (Code = {}));\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-connect/code-string.js\nvar import_buffer2 = __toESM(require_buffer(), 1);\nfunction codeToString(value) {\n  const name = Code[value];\n  if (typeof name != \"string\") {\n    return value.toString();\n  }\n  return name[0].toLowerCase() + name.substring(1).replace(/[A-Z]/g, (c) => \"_\" + c.toLowerCase());\n}\n\n// node_modules/@connectrpc/connect/dist/esm/connect-error.js\nvar ConnectError = class _ConnectError extends Error {\n  /**\n   * Create a new ConnectError.\n   * If no code is provided, code \"unknown\" is used.\n   * Outgoing details are only relevant for the server side - a service may\n   * raise an error with details, and it is up to the protocol implementation\n   * to encode and send the details along with error.\n   */\n  constructor(message, code = Code.Unknown, metadata, outgoingDetails, cause) {\n    super(createMessage(message, code));\n    this.name = \"ConnectError\";\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.rawMessage = message;\n    this.code = code;\n    this.metadata = new Headers(metadata !== null && metadata !== void 0 ? metadata : {});\n    this.details = outgoingDetails !== null && outgoingDetails !== void 0 ? outgoingDetails : [];\n    this.cause = cause;\n  }\n  /**\n   * Convert any value - typically a caught error into a ConnectError,\n   * following these rules:\n   * - If the value is already a ConnectError, return it as is.\n   * - If the value is an AbortError from the fetch API, return the message\n   *   of the AbortError with code Canceled.\n   * - For other Errors, return the error message with code Unknown by default.\n   * - For other values, return the values String representation as a message,\n   *   with the code Unknown by default.\n   * The original value will be used for the \"cause\" property for the new\n   * ConnectError.\n   */\n  static from(reason, code = Code.Unknown) {\n    if (reason instanceof _ConnectError) {\n      return reason;\n    }\n    if (reason instanceof Error) {\n      if (reason.name == \"AbortError\") {\n        return new _ConnectError(reason.message, Code.Canceled);\n      }\n      return new _ConnectError(reason.message, code, void 0, void 0, reason);\n    }\n    return new _ConnectError(String(reason), code, void 0, void 0, reason);\n  }\n  static [Symbol.hasInstance](v) {\n    if (!(v instanceof Error)) {\n      return false;\n    }\n    if (Object.getPrototypeOf(v) === _ConnectError.prototype) {\n      return true;\n    }\n    return v.name === \"ConnectError\" && \"code\" in v && typeof v.code === \"number\" && \"metadata\" in v && \"details\" in v && Array.isArray(v.details) && \"rawMessage\" in v && typeof v.rawMessage == \"string\" && \"cause\" in v;\n  }\n  findDetails(typeOrRegistry) {\n    const registry = \"typeName\" in typeOrRegistry ? {\n      findMessage: (typeName) => typeName === typeOrRegistry.typeName ? typeOrRegistry : void 0\n    } : typeOrRegistry;\n    const details = [];\n    for (const data of this.details) {\n      if (\"getType\" in data) {\n        if (registry.findMessage(data.getType().typeName)) {\n          details.push(data);\n        }\n        continue;\n      }\n      const type = registry.findMessage(data.type);\n      if (type) {\n        try {\n          details.push(type.fromBinary(data.value));\n        } catch (_) {\n        }\n      }\n    }\n    return details;\n  }\n};\nfunction createMessage(message, code) {\n  return message.length ? `[${codeToString(code)}] ${message}` : `[${codeToString(code)}]`;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/http-headers.js\nvar import_buffer31 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/index.js\nvar import_buffer30 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/proto3.js\nvar import_buffer27 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\nvar import_buffer22 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\nvar import_buffer5 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/assert.js\nvar import_buffer4 = __toESM(require_buffer(), 1);\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(msg);\n  }\n}\nvar FLOAT32_MAX = 34028234663852886e22;\nvar FLOAT32_MIN = -34028234663852886e22;\nvar UINT32_MAX = 4294967295;\nvar INT32_MAX = 2147483647;\nvar INT32_MIN = -2147483648;\nfunction assertInt32(arg) {\n  if (typeof arg !== \"number\")\n    throw new Error(\"invalid int 32: \" + typeof arg);\n  if (!Number.isInteger(arg) || arg > INT32_MAX || arg < INT32_MIN)\n    throw new Error(\"invalid int 32: \" + arg);\n}\nfunction assertUInt32(arg) {\n  if (typeof arg !== \"number\")\n    throw new Error(\"invalid uint 32: \" + typeof arg);\n  if (!Number.isInteger(arg) || arg > UINT32_MAX || arg < 0)\n    throw new Error(\"invalid uint 32: \" + arg);\n}\nfunction assertFloat32(arg) {\n  if (typeof arg !== \"number\")\n    throw new Error(\"invalid float 32: \" + typeof arg);\n  if (!Number.isFinite(arg))\n    return;\n  if (arg > FLOAT32_MAX || arg < FLOAT32_MIN)\n    throw new Error(\"invalid float 32: \" + arg);\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/enum.js\nvar enumTypeSymbol = Symbol(\"@bufbuild/protobuf/enum-type\");\nfunction getEnumType(enumObject) {\n  const t = enumObject[enumTypeSymbol];\n  assert(t, \"missing enum type on enum object\");\n  return t;\n}\nfunction setEnumType(enumObject, typeName, values, opt) {\n  enumObject[enumTypeSymbol] = makeEnumType(typeName, values.map((v) => ({\n    no: v.no,\n    name: v.name,\n    localName: enumObject[v.no]\n  })), opt);\n}\nfunction makeEnumType(typeName, values, _opt) {\n  const names = /* @__PURE__ */ Object.create(null);\n  const numbers = /* @__PURE__ */ Object.create(null);\n  const normalValues = [];\n  for (const value of values) {\n    const n = normalizeEnumValue(value);\n    normalValues.push(n);\n    names[value.name] = n;\n    numbers[value.no] = n;\n  }\n  return {\n    typeName,\n    values: normalValues,\n    // We do not surface options at this time\n    // options: opt?.options ?? Object.create(null),\n    findName(name) {\n      return names[name];\n    },\n    findNumber(no) {\n      return numbers[no];\n    }\n  };\n}\nfunction makeEnum(typeName, values, opt) {\n  const enumObject = {};\n  for (const value of values) {\n    const n = normalizeEnumValue(value);\n    enumObject[n.localName] = n.no;\n    enumObject[n.no] = n.localName;\n  }\n  setEnumType(enumObject, typeName, values, opt);\n  return enumObject;\n}\nfunction normalizeEnumValue(value) {\n  if (\"localName\" in value) {\n    return value;\n  }\n  return Object.assign(Object.assign({}, value), { localName: value.name });\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\nvar import_buffer7 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/message.js\nvar import_buffer6 = __toESM(require_buffer(), 1);\nvar Message = class {\n  /**\n   * Compare with a message of the same type.\n   * Note that this function disregards extensions and unknown fields.\n   */\n  equals(other) {\n    return this.getType().runtime.util.equals(this.getType(), this, other);\n  }\n  /**\n   * Create a deep copy.\n   */\n  clone() {\n    return this.getType().runtime.util.clone(this);\n  }\n  /**\n   * Parse from binary data, merging fields.\n   *\n   * Repeated fields are appended. Map entries are added, overwriting\n   * existing keys.\n   *\n   * If a message field is already present, it will be merged with the\n   * new data.\n   */\n  fromBinary(bytes, options) {\n    const type = this.getType(), format = type.runtime.bin, opt = format.makeReadOptions(options);\n    format.readMessage(this, opt.readerFactory(bytes), bytes.byteLength, opt);\n    return this;\n  }\n  /**\n   * Parse a message from a JSON value.\n   */\n  fromJson(jsonValue, options) {\n    const type = this.getType(), format = type.runtime.json, opt = format.makeReadOptions(options);\n    format.readMessage(type, jsonValue, opt, this);\n    return this;\n  }\n  /**\n   * Parse a message from a JSON string.\n   */\n  fromJsonString(jsonString, options) {\n    let json;\n    try {\n      json = JSON.parse(jsonString);\n    } catch (e) {\n      throw new Error(`cannot decode ${this.getType().typeName} from JSON: ${e instanceof Error ? e.message : String(e)}`);\n    }\n    return this.fromJson(json, options);\n  }\n  /**\n   * Serialize the message to binary data.\n   */\n  toBinary(options) {\n    const type = this.getType(), bin = type.runtime.bin, opt = bin.makeWriteOptions(options), writer = opt.writerFactory();\n    bin.writeMessage(this, writer, opt);\n    return writer.finish();\n  }\n  /**\n   * Serialize the message to a JSON value, a JavaScript value that can be\n   * passed to JSON.stringify().\n   */\n  toJson(options) {\n    const type = this.getType(), json = type.runtime.json, opt = json.makeWriteOptions(options);\n    return json.writeMessage(this, opt);\n  }\n  /**\n   * Serialize the message to a JSON string.\n   */\n  toJsonString(options) {\n    var _a;\n    const value = this.toJson(options);\n    return JSON.stringify(value, null, (_a = options === null || options === void 0 ? void 0 : options.prettySpaces) !== null && _a !== void 0 ? _a : 0);\n  }\n  /**\n   * Override for serialization behavior. This will be invoked when calling\n   * JSON.stringify on this message (i.e. JSON.stringify(msg)).\n   *\n   * Note that this will not serialize google.protobuf.Any with a packed\n   * message because the protobuf JSON format specifies that it needs to be\n   * unpacked, and this is only possible with a type registry to look up the\n   * message type.  As a result, attempting to serialize a message with this\n   * type will throw an Error.\n   *\n   * This method is protected because you should not need to invoke it\n   * directly -- instead use JSON.stringify or toJsonString for\n   * stringified JSON.  Alternatively, if actual JSON is desired, you should\n   * use toJson.\n   */\n  toJSON() {\n    return this.toJson({\n      emitDefaultValues: true\n    });\n  }\n  /**\n   * Retrieve the MessageType of this message - a singleton that represents\n   * the protobuf message declaration and provides metadata for reflection-\n   * based operations.\n   */\n  getType() {\n    return Object.getPrototypeOf(this).constructor;\n  }\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/message-type.js\nfunction makeMessageType(runtime, typeName, fields, opt) {\n  var _a;\n  const localName = (_a = opt === null || opt === void 0 ? void 0 : opt.localName) !== null && _a !== void 0 ? _a : typeName.substring(typeName.lastIndexOf(\".\") + 1);\n  const type = {\n    [localName]: function(data) {\n      runtime.util.initFields(this);\n      runtime.util.initPartial(data, this);\n    }\n  }[localName];\n  Object.setPrototypeOf(type.prototype, new Message());\n  Object.assign(type, {\n    runtime,\n    typeName,\n    fields: runtime.util.newFieldList(fields),\n    fromBinary(bytes, options) {\n      return new type().fromBinary(bytes, options);\n    },\n    fromJson(jsonValue, options) {\n      return new type().fromJson(jsonValue, options);\n    },\n    fromJsonString(jsonString, options) {\n      return new type().fromJsonString(jsonString, options);\n    },\n    equals(a, b) {\n      return runtime.util.equals(type, a, b);\n    }\n  });\n  return type;\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\nvar import_buffer13 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\nvar import_buffer11 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\nvar import_buffer9 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/google/varint.js\nvar import_buffer8 = __toESM(require_buffer(), 1);\nfunction varint64read() {\n  let lowBits = 0;\n  let highBits = 0;\n  for (let shift = 0; shift < 28; shift += 7) {\n    let b = this.buf[this.pos++];\n    lowBits |= (b & 127) << shift;\n    if ((b & 128) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  let middleByte = this.buf[this.pos++];\n  lowBits |= (middleByte & 15) << 28;\n  highBits = (middleByte & 112) >> 4;\n  if ((middleByte & 128) == 0) {\n    this.assertBounds();\n    return [lowBits, highBits];\n  }\n  for (let shift = 3; shift <= 31; shift += 7) {\n    let b = this.buf[this.pos++];\n    highBits |= (b & 127) << shift;\n    if ((b & 128) == 0) {\n      this.assertBounds();\n      return [lowBits, highBits];\n    }\n  }\n  throw new Error(\"invalid varint\");\n}\nfunction varint64write(lo, hi, bytes) {\n  for (let i = 0; i < 28; i = i + 7) {\n    const shift = lo >>> i;\n    const hasNext = !(shift >>> 7 == 0 && hi == 0);\n    const byte = (hasNext ? shift | 128 : shift) & 255;\n    bytes.push(byte);\n    if (!hasNext) {\n      return;\n    }\n  }\n  const splitBits = lo >>> 28 & 15 | (hi & 7) << 4;\n  const hasMoreBits = !(hi >> 3 == 0);\n  bytes.push((hasMoreBits ? splitBits | 128 : splitBits) & 255);\n  if (!hasMoreBits) {\n    return;\n  }\n  for (let i = 3; i < 31; i = i + 7) {\n    const shift = hi >>> i;\n    const hasNext = !(shift >>> 7 == 0);\n    const byte = (hasNext ? shift | 128 : shift) & 255;\n    bytes.push(byte);\n    if (!hasNext) {\n      return;\n    }\n  }\n  bytes.push(hi >>> 31 & 1);\n}\nvar TWO_PWR_32_DBL = 4294967296;\nfunction int64FromString(dec) {\n  const minus = dec[0] === \"-\";\n  if (minus) {\n    dec = dec.slice(1);\n  }\n  const base = 1e6;\n  let lowBits = 0;\n  let highBits = 0;\n  function add1e6digit(begin, end) {\n    const digit1e6 = Number(dec.slice(begin, end));\n    highBits *= base;\n    lowBits = lowBits * base + digit1e6;\n    if (lowBits >= TWO_PWR_32_DBL) {\n      highBits = highBits + (lowBits / TWO_PWR_32_DBL | 0);\n      lowBits = lowBits % TWO_PWR_32_DBL;\n    }\n  }\n  add1e6digit(-24, -18);\n  add1e6digit(-18, -12);\n  add1e6digit(-12, -6);\n  add1e6digit(-6);\n  return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\nfunction int64ToString(lo, hi) {\n  let bits = newBits(lo, hi);\n  const negative = bits.hi & 2147483648;\n  if (negative) {\n    bits = negate(bits.lo, bits.hi);\n  }\n  const result = uInt64ToString(bits.lo, bits.hi);\n  return negative ? \"-\" + result : result;\n}\nfunction uInt64ToString(lo, hi) {\n  ({ lo, hi } = toUnsigned(lo, hi));\n  if (hi <= 2097151) {\n    return String(TWO_PWR_32_DBL * hi + lo);\n  }\n  const low = lo & 16777215;\n  const mid = (lo >>> 24 | hi << 8) & 16777215;\n  const high = hi >> 16 & 65535;\n  let digitA = low + mid * 6777216 + high * 6710656;\n  let digitB = mid + high * 8147497;\n  let digitC = high * 2;\n  const base = 1e7;\n  if (digitA >= base) {\n    digitB += Math.floor(digitA / base);\n    digitA %= base;\n  }\n  if (digitB >= base) {\n    digitC += Math.floor(digitB / base);\n    digitB %= base;\n  }\n  return digitC.toString() + decimalFrom1e7WithLeadingZeros(digitB) + decimalFrom1e7WithLeadingZeros(digitA);\n}\nfunction toUnsigned(lo, hi) {\n  return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n  return { lo: lo | 0, hi: hi | 0 };\n}\nfunction negate(lowBits, highBits) {\n  highBits = ~highBits;\n  if (lowBits) {\n    lowBits = ~lowBits + 1;\n  } else {\n    highBits += 1;\n  }\n  return newBits(lowBits, highBits);\n}\nvar decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n  const partial = String(digit1e7);\n  return \"0000000\".slice(partial.length) + partial;\n};\nfunction varint32write(value, bytes) {\n  if (value >= 0) {\n    while (value > 127) {\n      bytes.push(value & 127 | 128);\n      value = value >>> 7;\n    }\n    bytes.push(value);\n  } else {\n    for (let i = 0; i < 9; i++) {\n      bytes.push(value & 127 | 128);\n      value = value >> 7;\n    }\n    bytes.push(1);\n  }\n}\nfunction varint32read() {\n  let b = this.buf[this.pos++];\n  let result = b & 127;\n  if ((b & 128) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 127) << 7;\n  if ((b & 128) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 127) << 14;\n  if ((b & 128) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 127) << 21;\n  if ((b & 128) == 0) {\n    this.assertBounds();\n    return result;\n  }\n  b = this.buf[this.pos++];\n  result |= (b & 15) << 28;\n  for (let readBytes = 5; (b & 128) !== 0 && readBytes < 10; readBytes++)\n    b = this.buf[this.pos++];\n  if ((b & 128) != 0)\n    throw new Error(\"invalid varint\");\n  this.assertBounds();\n  return result >>> 0;\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\nfunction makeInt64Support() {\n  const dv = new DataView(new ArrayBuffer(8));\n  const ok = typeof BigInt === \"function\" && typeof dv.getBigInt64 === \"function\" && typeof dv.getBigUint64 === \"function\" && typeof dv.setBigInt64 === \"function\" && typeof dv.setBigUint64 === \"function\" && (typeof process != \"object\" || typeof process.env != \"object\" || process.env.BUF_BIGINT_DISABLE !== \"1\");\n  if (ok) {\n    const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n    return {\n      zero: BigInt(0),\n      supported: true,\n      parse(value) {\n        const bi = typeof value == \"bigint\" ? value : BigInt(value);\n        if (bi > MAX || bi < MIN) {\n          throw new Error(`int64 invalid: ${value}`);\n        }\n        return bi;\n      },\n      uParse(value) {\n        const bi = typeof value == \"bigint\" ? value : BigInt(value);\n        if (bi > UMAX || bi < UMIN) {\n          throw new Error(`uint64 invalid: ${value}`);\n        }\n        return bi;\n      },\n      enc(value) {\n        dv.setBigInt64(0, this.parse(value), true);\n        return {\n          lo: dv.getInt32(0, true),\n          hi: dv.getInt32(4, true)\n        };\n      },\n      uEnc(value) {\n        dv.setBigInt64(0, this.uParse(value), true);\n        return {\n          lo: dv.getInt32(0, true),\n          hi: dv.getInt32(4, true)\n        };\n      },\n      dec(lo, hi) {\n        dv.setInt32(0, lo, true);\n        dv.setInt32(4, hi, true);\n        return dv.getBigInt64(0, true);\n      },\n      uDec(lo, hi) {\n        dv.setInt32(0, lo, true);\n        dv.setInt32(4, hi, true);\n        return dv.getBigUint64(0, true);\n      }\n    };\n  }\n  const assertInt64String = (value) => assert(/^-?[0-9]+$/.test(value), `int64 invalid: ${value}`);\n  const assertUInt64String = (value) => assert(/^[0-9]+$/.test(value), `uint64 invalid: ${value}`);\n  return {\n    zero: \"0\",\n    supported: false,\n    parse(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertInt64String(value);\n      return value;\n    },\n    uParse(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertUInt64String(value);\n      return value;\n    },\n    enc(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertInt64String(value);\n      return int64FromString(value);\n    },\n    uEnc(value) {\n      if (typeof value != \"string\") {\n        value = value.toString();\n      }\n      assertUInt64String(value);\n      return int64FromString(value);\n    },\n    dec(lo, hi) {\n      return int64ToString(lo, hi);\n    },\n    uDec(lo, hi) {\n      return uInt64ToString(lo, hi);\n    }\n  };\n}\nvar protoInt64 = makeInt64Support();\n\n// node_modules/@bufbuild/protobuf/dist/esm/scalar.js\nvar import_buffer10 = __toESM(require_buffer(), 1);\nvar ScalarType;\n(function(ScalarType2) {\n  ScalarType2[ScalarType2[\"DOUBLE\"] = 1] = \"DOUBLE\";\n  ScalarType2[ScalarType2[\"FLOAT\"] = 2] = \"FLOAT\";\n  ScalarType2[ScalarType2[\"INT64\"] = 3] = \"INT64\";\n  ScalarType2[ScalarType2[\"UINT64\"] = 4] = \"UINT64\";\n  ScalarType2[ScalarType2[\"INT32\"] = 5] = \"INT32\";\n  ScalarType2[ScalarType2[\"FIXED64\"] = 6] = \"FIXED64\";\n  ScalarType2[ScalarType2[\"FIXED32\"] = 7] = \"FIXED32\";\n  ScalarType2[ScalarType2[\"BOOL\"] = 8] = \"BOOL\";\n  ScalarType2[ScalarType2[\"STRING\"] = 9] = \"STRING\";\n  ScalarType2[ScalarType2[\"BYTES\"] = 12] = \"BYTES\";\n  ScalarType2[ScalarType2[\"UINT32\"] = 13] = \"UINT32\";\n  ScalarType2[ScalarType2[\"SFIXED32\"] = 15] = \"SFIXED32\";\n  ScalarType2[ScalarType2[\"SFIXED64\"] = 16] = \"SFIXED64\";\n  ScalarType2[ScalarType2[\"SINT32\"] = 17] = \"SINT32\";\n  ScalarType2[ScalarType2[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (ScalarType = {}));\nvar LongType;\n(function(LongType2) {\n  LongType2[LongType2[\"BIGINT\"] = 0] = \"BIGINT\";\n  LongType2[LongType2[\"STRING\"] = 1] = \"STRING\";\n})(LongType || (LongType = {}));\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/scalars.js\nfunction scalarEquals(type, a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (type == ScalarType.BYTES) {\n    if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  switch (type) {\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      return a == b;\n  }\n  return false;\n}\nfunction scalarZeroValue(type, longType) {\n  switch (type) {\n    case ScalarType.BOOL:\n      return false;\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      return longType == 0 ? protoInt64.zero : \"0\";\n    case ScalarType.DOUBLE:\n    case ScalarType.FLOAT:\n      return 0;\n    case ScalarType.BYTES:\n      return new Uint8Array(0);\n    case ScalarType.STRING:\n      return \"\";\n    default:\n      return 0;\n  }\n}\nfunction isScalarZeroValue(type, value) {\n  switch (type) {\n    case ScalarType.BOOL:\n      return value === false;\n    case ScalarType.STRING:\n      return value === \"\";\n    case ScalarType.BYTES:\n      return value instanceof Uint8Array && !value.byteLength;\n    default:\n      return value == 0;\n  }\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/binary-encoding.js\nvar import_buffer12 = __toESM(require_buffer(), 1);\nvar WireType;\n(function(WireType2) {\n  WireType2[WireType2[\"Varint\"] = 0] = \"Varint\";\n  WireType2[WireType2[\"Bit64\"] = 1] = \"Bit64\";\n  WireType2[WireType2[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n  WireType2[WireType2[\"StartGroup\"] = 3] = \"StartGroup\";\n  WireType2[WireType2[\"EndGroup\"] = 4] = \"EndGroup\";\n  WireType2[WireType2[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (WireType = {}));\nvar BinaryWriter = class {\n  constructor(textEncoder) {\n    this.stack = [];\n    this.textEncoder = textEncoder !== null && textEncoder !== void 0 ? textEncoder : new TextEncoder();\n    this.chunks = [];\n    this.buf = [];\n  }\n  /**\n   * Return all bytes written and reset this writer.\n   */\n  finish() {\n    this.chunks.push(new Uint8Array(this.buf));\n    let len = 0;\n    for (let i = 0; i < this.chunks.length; i++)\n      len += this.chunks[i].length;\n    let bytes = new Uint8Array(len);\n    let offset = 0;\n    for (let i = 0; i < this.chunks.length; i++) {\n      bytes.set(this.chunks[i], offset);\n      offset += this.chunks[i].length;\n    }\n    this.chunks = [];\n    return bytes;\n  }\n  /**\n   * Start a new fork for length-delimited data like a message\n   * or a packed repeated field.\n   *\n   * Must be joined later with `join()`.\n   */\n  fork() {\n    this.stack.push({ chunks: this.chunks, buf: this.buf });\n    this.chunks = [];\n    this.buf = [];\n    return this;\n  }\n  /**\n   * Join the last fork. Write its length and bytes, then\n   * return to the previous state.\n   */\n  join() {\n    let chunk = this.finish();\n    let prev = this.stack.pop();\n    if (!prev)\n      throw new Error(\"invalid state, fork stack empty\");\n    this.chunks = prev.chunks;\n    this.buf = prev.buf;\n    this.uint32(chunk.byteLength);\n    return this.raw(chunk);\n  }\n  /**\n   * Writes a tag (field number and wire type).\n   *\n   * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n   *\n   * Generated code should compute the tag ahead of time and call `uint32()`.\n   */\n  tag(fieldNo, type) {\n    return this.uint32((fieldNo << 3 | type) >>> 0);\n  }\n  /**\n   * Write a chunk of raw bytes.\n   */\n  raw(chunk) {\n    if (this.buf.length) {\n      this.chunks.push(new Uint8Array(this.buf));\n      this.buf = [];\n    }\n    this.chunks.push(chunk);\n    return this;\n  }\n  /**\n   * Write a `uint32` value, an unsigned 32 bit varint.\n   */\n  uint32(value) {\n    assertUInt32(value);\n    while (value > 127) {\n      this.buf.push(value & 127 | 128);\n      value = value >>> 7;\n    }\n    this.buf.push(value);\n    return this;\n  }\n  /**\n   * Write a `int32` value, a signed 32 bit varint.\n   */\n  int32(value) {\n    assertInt32(value);\n    varint32write(value, this.buf);\n    return this;\n  }\n  /**\n   * Write a `bool` value, a variant.\n   */\n  bool(value) {\n    this.buf.push(value ? 1 : 0);\n    return this;\n  }\n  /**\n   * Write a `bytes` value, length-delimited arbitrary data.\n   */\n  bytes(value) {\n    this.uint32(value.byteLength);\n    return this.raw(value);\n  }\n  /**\n   * Write a `string` value, length-delimited data converted to UTF-8 text.\n   */\n  string(value) {\n    let chunk = this.textEncoder.encode(value);\n    this.uint32(chunk.byteLength);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `float` value, 32-bit floating point number.\n   */\n  float(value) {\n    assertFloat32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setFloat32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `double` value, a 64-bit floating point number.\n   */\n  double(value) {\n    let chunk = new Uint8Array(8);\n    new DataView(chunk.buffer).setFloat64(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32(value) {\n    assertUInt32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setUint32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32(value) {\n    assertInt32(value);\n    let chunk = new Uint8Array(4);\n    new DataView(chunk.buffer).setInt32(0, value, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32(value) {\n    assertInt32(value);\n    value = (value << 1 ^ value >> 31) >>> 0;\n    varint32write(value, this.buf);\n    return this;\n  }\n  /**\n   * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64(value) {\n    let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.enc(value);\n    view.setInt32(0, tc.lo, true);\n    view.setInt32(4, tc.hi, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64(value) {\n    let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = protoInt64.uEnc(value);\n    view.setInt32(0, tc.lo, true);\n    view.setInt32(4, tc.hi, true);\n    return this.raw(chunk);\n  }\n  /**\n   * Write a `int64` value, a signed 64-bit varint.\n   */\n  int64(value) {\n    let tc = protoInt64.enc(value);\n    varint64write(tc.lo, tc.hi, this.buf);\n    return this;\n  }\n  /**\n   * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64(value) {\n    let tc = protoInt64.enc(value), sign = tc.hi >> 31, lo = tc.lo << 1 ^ sign, hi = (tc.hi << 1 | tc.lo >>> 31) ^ sign;\n    varint64write(lo, hi, this.buf);\n    return this;\n  }\n  /**\n   * Write a `uint64` value, an unsigned 64-bit varint.\n   */\n  uint64(value) {\n    let tc = protoInt64.uEnc(value);\n    varint64write(tc.lo, tc.hi, this.buf);\n    return this;\n  }\n};\nvar BinaryReader = class {\n  constructor(buf, textDecoder) {\n    this.varint64 = varint64read;\n    this.uint32 = varint32read;\n    this.buf = buf;\n    this.len = buf.length;\n    this.pos = 0;\n    this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    this.textDecoder = textDecoder !== null && textDecoder !== void 0 ? textDecoder : new TextDecoder();\n  }\n  /**\n   * Reads a tag - field number and wire type.\n   */\n  tag() {\n    let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n    if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n      throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n    return [fieldNo, wireType];\n  }\n  /**\n   * Skip one element and return the skipped data.\n   *\n   * When skipping StartGroup, provide the tags field number to check for\n   * matching field number in the EndGroup tag.\n   */\n  skip(wireType, fieldNo) {\n    let start = this.pos;\n    switch (wireType) {\n      case WireType.Varint:\n        while (this.buf[this.pos++] & 128) {\n        }\n        break;\n      // eslint-disable-next-line\n      // @ts-ignore TS7029: Fallthrough case in switch\n      case WireType.Bit64:\n        this.pos += 4;\n      // eslint-disable-next-line\n      // @ts-ignore TS7029: Fallthrough case in switch\n      case WireType.Bit32:\n        this.pos += 4;\n        break;\n      case WireType.LengthDelimited:\n        let len = this.uint32();\n        this.pos += len;\n        break;\n      case WireType.StartGroup:\n        for (; ; ) {\n          const [fn, wt] = this.tag();\n          if (wt === WireType.EndGroup) {\n            if (fieldNo !== void 0 && fn !== fieldNo) {\n              throw new Error(\"invalid end group tag\");\n            }\n            break;\n          }\n          this.skip(wt, fn);\n        }\n        break;\n      default:\n        throw new Error(\"cant skip wire type \" + wireType);\n    }\n    this.assertBounds();\n    return this.buf.subarray(start, this.pos);\n  }\n  /**\n   * Throws error if position in byte array is out of range.\n   */\n  assertBounds() {\n    if (this.pos > this.len)\n      throw new RangeError(\"premature EOF\");\n  }\n  /**\n   * Read a `int32` field, a signed 32 bit varint.\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n  /**\n   * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n   */\n  sint32() {\n    let zze = this.uint32();\n    return zze >>> 1 ^ -(zze & 1);\n  }\n  /**\n   * Read a `int64` field, a signed 64-bit varint.\n   */\n  int64() {\n    return protoInt64.dec(...this.varint64());\n  }\n  /**\n   * Read a `uint64` field, an unsigned 64-bit varint.\n   */\n  uint64() {\n    return protoInt64.uDec(...this.varint64());\n  }\n  /**\n   * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n   */\n  sint64() {\n    let [lo, hi] = this.varint64();\n    let s = -(lo & 1);\n    lo = (lo >>> 1 | (hi & 1) << 31) ^ s;\n    hi = hi >>> 1 ^ s;\n    return protoInt64.dec(lo, hi);\n  }\n  /**\n   * Read a `bool` field, a variant.\n   */\n  bool() {\n    let [lo, hi] = this.varint64();\n    return lo !== 0 || hi !== 0;\n  }\n  /**\n   * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n   */\n  fixed32() {\n    return this.view.getUint32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n   */\n  sfixed32() {\n    return this.view.getInt32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n   */\n  fixed64() {\n    return protoInt64.uDec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n   */\n  sfixed64() {\n    return protoInt64.dec(this.sfixed32(), this.sfixed32());\n  }\n  /**\n   * Read a `float` field, 32-bit floating point number.\n   */\n  float() {\n    return this.view.getFloat32((this.pos += 4) - 4, true);\n  }\n  /**\n   * Read a `double` field, a 64-bit floating point number.\n   */\n  double() {\n    return this.view.getFloat64((this.pos += 8) - 8, true);\n  }\n  /**\n   * Read a `bytes` field, length-delimited arbitrary data.\n   */\n  bytes() {\n    let len = this.uint32(), start = this.pos;\n    this.pos += len;\n    this.assertBounds();\n    return this.buf.subarray(start, start + len);\n  }\n  /**\n   * Read a `string` field, length-delimited data converted to UTF-8 text.\n   */\n  string() {\n    return this.textDecoder.decode(this.bytes());\n  }\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/extensions.js\nfunction makeExtension(runtime, typeName, extendee, field) {\n  let fi;\n  return {\n    typeName,\n    extendee,\n    get field() {\n      if (!fi) {\n        const i = typeof field == \"function\" ? field() : field;\n        i.name = typeName.split(\".\").pop();\n        i.jsonName = `[${typeName}]`;\n        fi = runtime.util.newFieldList([i]).list()[0];\n      }\n      return fi;\n    },\n    runtime\n  };\n}\nfunction createExtensionContainer(extension) {\n  const localName = extension.field.localName;\n  const container = /* @__PURE__ */ Object.create(null);\n  container[localName] = initExtensionField(extension);\n  return [container, () => container[localName]];\n}\nfunction initExtensionField(ext) {\n  const field = ext.field;\n  if (field.repeated) {\n    return [];\n  }\n  if (field.default !== void 0) {\n    return field.default;\n  }\n  switch (field.kind) {\n    case \"enum\":\n      return field.T.values[0].no;\n    case \"scalar\":\n      return scalarZeroValue(field.T, field.L);\n    case \"message\":\n      const T = field.T, value = new T();\n      return T.fieldWrapper ? T.fieldWrapper.unwrapField(value) : value;\n    case \"map\":\n      throw \"map fields are not allowed to be extensions\";\n  }\n}\nfunction filterUnknownFields(unknownFields, field) {\n  if (!field.repeated && (field.kind == \"enum\" || field.kind == \"scalar\")) {\n    for (let i = unknownFields.length - 1; i >= 0; --i) {\n      if (unknownFields[i].no == field.no) {\n        return [unknownFields[i]];\n      }\n    }\n    return [];\n  }\n  return unknownFields.filter((uf) => uf.no === field.no);\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\nvar import_buffer19 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/proto-base64.js\nvar import_buffer14 = __toESM(require_buffer(), 1);\nvar encTable = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\nvar decTable = [];\nfor (let i = 0; i < encTable.length; i++)\n  decTable[encTable[i].charCodeAt(0)] = i;\ndecTable[\"-\".charCodeAt(0)] = encTable.indexOf(\"+\");\ndecTable[\"_\".charCodeAt(0)] = encTable.indexOf(\"/\");\nvar protoBase64 = {\n  /**\n   * Decodes a base64 string to a byte array.\n   *\n   * - ignores white-space, including line breaks and tabs\n   * - allows inner padding (can decode concatenated base64 strings)\n   * - does not require padding\n   * - understands base64url encoding:\n   *   \"-\" instead of \"+\",\n   *   \"_\" instead of \"/\",\n   *   no padding\n   */\n  dec(base64Str) {\n    let es = base64Str.length * 3 / 4;\n    if (base64Str[base64Str.length - 2] == \"=\")\n      es -= 2;\n    else if (base64Str[base64Str.length - 1] == \"=\")\n      es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, groupPos = 0, b, p = 0;\n    for (let i = 0; i < base64Str.length; i++) {\n      b = decTable[base64Str.charCodeAt(i)];\n      if (b === void 0) {\n        switch (base64Str[i]) {\n          // @ts-ignore TS7029: Fallthrough case in switch\n          case \"=\":\n            groupPos = 0;\n          // reset state when padding found\n          // @ts-ignore TS7029: Fallthrough case in switch\n          case \"\\n\":\n          case \"\\r\":\n          case \"\t\":\n          case \" \":\n            continue;\n          // skip white-space, and padding\n          default:\n            throw Error(\"invalid base64 string.\");\n        }\n      }\n      switch (groupPos) {\n        case 0:\n          p = b;\n          groupPos = 1;\n          break;\n        case 1:\n          bytes[bytePos++] = p << 2 | (b & 48) >> 4;\n          p = b;\n          groupPos = 2;\n          break;\n        case 2:\n          bytes[bytePos++] = (p & 15) << 4 | (b & 60) >> 2;\n          p = b;\n          groupPos = 3;\n          break;\n        case 3:\n          bytes[bytePos++] = (p & 3) << 6 | b;\n          groupPos = 0;\n          break;\n      }\n    }\n    if (groupPos == 1)\n      throw Error(\"invalid base64 string.\");\n    return bytes.subarray(0, bytePos);\n  },\n  /**\n   * Encode a byte array to a base64 string.\n   */\n  enc(bytes) {\n    let base64 = \"\", groupPos = 0, b, p = 0;\n    for (let i = 0; i < bytes.length; i++) {\n      b = bytes[i];\n      switch (groupPos) {\n        case 0:\n          base64 += encTable[b >> 2];\n          p = (b & 3) << 4;\n          groupPos = 1;\n          break;\n        case 1:\n          base64 += encTable[p | b >> 4];\n          p = (b & 15) << 2;\n          groupPos = 2;\n          break;\n        case 2:\n          base64 += encTable[p | b >> 6];\n          base64 += encTable[b & 63];\n          groupPos = 0;\n          break;\n      }\n    }\n    if (groupPos) {\n      base64 += encTable[p];\n      base64 += \"=\";\n      if (groupPos == 1)\n        base64 += \"=\";\n    }\n    return base64;\n  }\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/extension-accessor.js\nvar import_buffer15 = __toESM(require_buffer(), 1);\nfunction getExtension(message, extension, options) {\n  assertExtendee(extension, message);\n  const opt = extension.runtime.bin.makeReadOptions(options);\n  const ufs = filterUnknownFields(message.getType().runtime.bin.listUnknownFields(message), extension.field);\n  const [container, get] = createExtensionContainer(extension);\n  for (const uf of ufs) {\n    extension.runtime.bin.readField(container, opt.readerFactory(uf.data), extension.field, uf.wireType, opt);\n  }\n  return get();\n}\nfunction setExtension(message, extension, value, options) {\n  assertExtendee(extension, message);\n  const readOpt = extension.runtime.bin.makeReadOptions(options);\n  const writeOpt = extension.runtime.bin.makeWriteOptions(options);\n  if (hasExtension(message, extension)) {\n    const ufs = message.getType().runtime.bin.listUnknownFields(message).filter((uf) => uf.no != extension.field.no);\n    message.getType().runtime.bin.discardUnknownFields(message);\n    for (const uf of ufs) {\n      message.getType().runtime.bin.onUnknownField(message, uf.no, uf.wireType, uf.data);\n    }\n  }\n  const writer = writeOpt.writerFactory();\n  let f = extension.field;\n  if (!f.opt && !f.repeated && (f.kind == \"enum\" || f.kind == \"scalar\")) {\n    f = Object.assign(Object.assign({}, extension.field), { opt: true });\n  }\n  extension.runtime.bin.writeField(f, value, writer, writeOpt);\n  const reader = readOpt.readerFactory(writer.finish());\n  while (reader.pos < reader.len) {\n    const [no, wireType] = reader.tag();\n    const data = reader.skip(wireType, no);\n    message.getType().runtime.bin.onUnknownField(message, no, wireType, data);\n  }\n}\nfunction hasExtension(message, extension) {\n  const messageType = message.getType();\n  return extension.extendee.typeName === messageType.typeName && !!messageType.runtime.bin.listUnknownFields(message).find((uf) => uf.no == extension.field.no);\n}\nfunction assertExtendee(extension, message) {\n  assert(extension.extendee.typeName == message.getType().typeName, `extension ${extension.typeName} can only be applied to message ${extension.extendee.typeName}`);\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/reflect.js\nvar import_buffer16 = __toESM(require_buffer(), 1);\nfunction isFieldSet(field, target) {\n  const localName = field.localName;\n  if (field.repeated) {\n    return target[localName].length > 0;\n  }\n  if (field.oneof) {\n    return target[field.oneof.localName].case === localName;\n  }\n  switch (field.kind) {\n    case \"enum\":\n    case \"scalar\":\n      if (field.opt || field.req) {\n        return target[localName] !== void 0;\n      }\n      if (field.kind == \"enum\") {\n        return target[localName] !== field.T.values[0].no;\n      }\n      return !isScalarZeroValue(field.T, target[localName]);\n    case \"message\":\n      return target[localName] !== void 0;\n    case \"map\":\n      return Object.keys(target[localName]).length > 0;\n  }\n}\nfunction clearField(field, target) {\n  const localName = field.localName;\n  const implicitPresence = !field.opt && !field.req;\n  if (field.repeated) {\n    target[localName] = [];\n  } else if (field.oneof) {\n    target[field.oneof.localName] = { case: void 0 };\n  } else {\n    switch (field.kind) {\n      case \"map\":\n        target[localName] = {};\n        break;\n      case \"enum\":\n        target[localName] = implicitPresence ? field.T.values[0].no : void 0;\n        break;\n      case \"scalar\":\n        target[localName] = implicitPresence ? scalarZeroValue(field.T, field.L) : void 0;\n        break;\n      case \"message\":\n        target[localName] = void 0;\n        break;\n    }\n  }\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\nvar import_buffer18 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/is-message.js\nvar import_buffer17 = __toESM(require_buffer(), 1);\nfunction isMessage(arg, type) {\n  if (arg === null || typeof arg != \"object\") {\n    return false;\n  }\n  if (!Object.getOwnPropertyNames(Message.prototype).every((m) => m in arg && typeof arg[m] == \"function\")) {\n    return false;\n  }\n  const actualType = arg.getType();\n  if (actualType === null || typeof actualType != \"function\" || !(\"typeName\" in actualType) || typeof actualType.typeName != \"string\") {\n    return false;\n  }\n  return type === void 0 ? true : actualType.typeName == type.typeName;\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field-wrapper.js\nfunction wrapField(type, value) {\n  if (isMessage(value) || !type.fieldWrapper) {\n    return value;\n  }\n  return type.fieldWrapper.wrapField(value);\n}\nvar wktWrapperToScalarType = {\n  \"google.protobuf.DoubleValue\": ScalarType.DOUBLE,\n  \"google.protobuf.FloatValue\": ScalarType.FLOAT,\n  \"google.protobuf.Int64Value\": ScalarType.INT64,\n  \"google.protobuf.UInt64Value\": ScalarType.UINT64,\n  \"google.protobuf.Int32Value\": ScalarType.INT32,\n  \"google.protobuf.UInt32Value\": ScalarType.UINT32,\n  \"google.protobuf.BoolValue\": ScalarType.BOOL,\n  \"google.protobuf.StringValue\": ScalarType.STRING,\n  \"google.protobuf.BytesValue\": ScalarType.BYTES\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/json-format.js\nvar jsonReadDefaults = {\n  ignoreUnknownFields: false\n};\nvar jsonWriteDefaults = {\n  emitDefaultValues: false,\n  enumAsInteger: false,\n  useProtoFieldName: false,\n  prettySpaces: 0\n};\nfunction makeReadOptions(options) {\n  return options ? Object.assign(Object.assign({}, jsonReadDefaults), options) : jsonReadDefaults;\n}\nfunction makeWriteOptions(options) {\n  return options ? Object.assign(Object.assign({}, jsonWriteDefaults), options) : jsonWriteDefaults;\n}\nvar tokenNull = Symbol();\nvar tokenIgnoredUnknownEnum = Symbol();\nfunction makeJsonFormat() {\n  return {\n    makeReadOptions,\n    makeWriteOptions,\n    readMessage(type, json, options, message) {\n      if (json == null || Array.isArray(json) || typeof json != \"object\") {\n        throw new Error(`cannot decode message ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n      }\n      message = message !== null && message !== void 0 ? message : new type();\n      const oneofSeen = /* @__PURE__ */ new Map();\n      const registry = options.typeRegistry;\n      for (const [jsonKey, jsonValue] of Object.entries(json)) {\n        const field = type.fields.findJsonName(jsonKey);\n        if (field) {\n          if (field.oneof) {\n            if (jsonValue === null && field.kind == \"scalar\") {\n              continue;\n            }\n            const seen = oneofSeen.get(field.oneof);\n            if (seen !== void 0) {\n              throw new Error(`cannot decode message ${type.typeName} from JSON: multiple keys for oneof \"${field.oneof.name}\" present: \"${seen}\", \"${jsonKey}\"`);\n            }\n            oneofSeen.set(field.oneof, jsonKey);\n          }\n          readField(message, jsonValue, field, options, type);\n        } else {\n          let found = false;\n          if ((registry === null || registry === void 0 ? void 0 : registry.findExtension) && jsonKey.startsWith(\"[\") && jsonKey.endsWith(\"]\")) {\n            const ext = registry.findExtension(jsonKey.substring(1, jsonKey.length - 1));\n            if (ext && ext.extendee.typeName == type.typeName) {\n              found = true;\n              const [container, get] = createExtensionContainer(ext);\n              readField(container, jsonValue, ext.field, options, ext);\n              setExtension(message, ext, get(), options);\n            }\n          }\n          if (!found && !options.ignoreUnknownFields) {\n            throw new Error(`cannot decode message ${type.typeName} from JSON: key \"${jsonKey}\" is unknown`);\n          }\n        }\n      }\n      return message;\n    },\n    writeMessage(message, options) {\n      const type = message.getType();\n      const json = {};\n      let field;\n      try {\n        for (field of type.fields.byNumber()) {\n          if (!isFieldSet(field, message)) {\n            if (field.req) {\n              throw `required field not set`;\n            }\n            if (!options.emitDefaultValues) {\n              continue;\n            }\n            if (!canEmitFieldDefaultValue(field)) {\n              continue;\n            }\n          }\n          const value = field.oneof ? message[field.oneof.localName].value : message[field.localName];\n          const jsonValue = writeField(field, value, options);\n          if (jsonValue !== void 0) {\n            json[options.useProtoFieldName ? field.name : field.jsonName] = jsonValue;\n          }\n        }\n        const registry = options.typeRegistry;\n        if (registry === null || registry === void 0 ? void 0 : registry.findExtensionFor) {\n          for (const uf of type.runtime.bin.listUnknownFields(message)) {\n            const ext = registry.findExtensionFor(type.typeName, uf.no);\n            if (ext && hasExtension(message, ext)) {\n              const value = getExtension(message, ext, options);\n              const jsonValue = writeField(ext.field, value, options);\n              if (jsonValue !== void 0) {\n                json[ext.field.jsonName] = jsonValue;\n              }\n            }\n          }\n        }\n      } catch (e) {\n        const m = field ? `cannot encode field ${type.typeName}.${field.name} to JSON` : `cannot encode message ${type.typeName} to JSON`;\n        const r = e instanceof Error ? e.message : String(e);\n        throw new Error(m + (r.length > 0 ? `: ${r}` : \"\"));\n      }\n      return json;\n    },\n    readScalar(type, json, longType) {\n      return readScalar(type, json, longType !== null && longType !== void 0 ? longType : LongType.BIGINT, true);\n    },\n    writeScalar(type, value, emitDefaultValues) {\n      if (value === void 0) {\n        return void 0;\n      }\n      if (emitDefaultValues || isScalarZeroValue(type, value)) {\n        return writeScalar(type, value);\n      }\n      return void 0;\n    },\n    debug: debugJsonValue\n  };\n}\nfunction debugJsonValue(json) {\n  if (json === null) {\n    return \"null\";\n  }\n  switch (typeof json) {\n    case \"object\":\n      return Array.isArray(json) ? \"array\" : \"object\";\n    case \"string\":\n      return json.length > 100 ? \"string\" : `\"${json.split('\"').join('\\\\\"')}\"`;\n    default:\n      return String(json);\n  }\n}\nfunction readField(target, jsonValue, field, options, parentType) {\n  let localName = field.localName;\n  if (field.repeated) {\n    assert(field.kind != \"map\");\n    if (jsonValue === null) {\n      return;\n    }\n    if (!Array.isArray(jsonValue)) {\n      throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n    }\n    const targetArray = target[localName];\n    for (const jsonItem of jsonValue) {\n      if (jsonItem === null) {\n        throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`);\n      }\n      switch (field.kind) {\n        case \"message\":\n          targetArray.push(field.T.fromJson(jsonItem, options));\n          break;\n        case \"enum\":\n          const enumValue = readEnum(field.T, jsonItem, options.ignoreUnknownFields, true);\n          if (enumValue !== tokenIgnoredUnknownEnum) {\n            targetArray.push(enumValue);\n          }\n          break;\n        case \"scalar\":\n          try {\n            targetArray.push(readScalar(field.T, jsonItem, field.L, true));\n          } catch (e) {\n            let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonItem)}`;\n            if (e instanceof Error && e.message.length > 0) {\n              m += `: ${e.message}`;\n            }\n            throw new Error(m);\n          }\n          break;\n      }\n    }\n  } else if (field.kind == \"map\") {\n    if (jsonValue === null) {\n      return;\n    }\n    if (typeof jsonValue != \"object\" || Array.isArray(jsonValue)) {\n      throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`);\n    }\n    const targetMap = target[localName];\n    for (const [jsonMapKey, jsonMapValue] of Object.entries(jsonValue)) {\n      if (jsonMapValue === null) {\n        throw new Error(`cannot decode field ${parentType.typeName}.${field.name} from JSON: map value null`);\n      }\n      let key;\n      try {\n        key = readMapKey(field.K, jsonMapKey);\n      } catch (e) {\n        let m = `cannot decode map key for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n        if (e instanceof Error && e.message.length > 0) {\n          m += `: ${e.message}`;\n        }\n        throw new Error(m);\n      }\n      switch (field.V.kind) {\n        case \"message\":\n          targetMap[key] = field.V.T.fromJson(jsonMapValue, options);\n          break;\n        case \"enum\":\n          const enumValue = readEnum(field.V.T, jsonMapValue, options.ignoreUnknownFields, true);\n          if (enumValue !== tokenIgnoredUnknownEnum) {\n            targetMap[key] = enumValue;\n          }\n          break;\n        case \"scalar\":\n          try {\n            targetMap[key] = readScalar(field.V.T, jsonMapValue, LongType.BIGINT, true);\n          } catch (e) {\n            let m = `cannot decode map value for field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n            if (e instanceof Error && e.message.length > 0) {\n              m += `: ${e.message}`;\n            }\n            throw new Error(m);\n          }\n          break;\n      }\n    }\n  } else {\n    if (field.oneof) {\n      target = target[field.oneof.localName] = { case: localName };\n      localName = \"value\";\n    }\n    switch (field.kind) {\n      case \"message\":\n        const messageType = field.T;\n        if (jsonValue === null && messageType.typeName != \"google.protobuf.Value\") {\n          return;\n        }\n        let currentValue = target[localName];\n        if (isMessage(currentValue)) {\n          currentValue.fromJson(jsonValue, options);\n        } else {\n          target[localName] = currentValue = messageType.fromJson(jsonValue, options);\n          if (messageType.fieldWrapper && !field.oneof) {\n            target[localName] = messageType.fieldWrapper.unwrapField(currentValue);\n          }\n        }\n        break;\n      case \"enum\":\n        const enumValue = readEnum(field.T, jsonValue, options.ignoreUnknownFields, false);\n        switch (enumValue) {\n          case tokenNull:\n            clearField(field, target);\n            break;\n          case tokenIgnoredUnknownEnum:\n            break;\n          default:\n            target[localName] = enumValue;\n            break;\n        }\n        break;\n      case \"scalar\":\n        try {\n          const scalarValue = readScalar(field.T, jsonValue, field.L, false);\n          switch (scalarValue) {\n            case tokenNull:\n              clearField(field, target);\n              break;\n            default:\n              target[localName] = scalarValue;\n              break;\n          }\n        } catch (e) {\n          let m = `cannot decode field ${parentType.typeName}.${field.name} from JSON: ${debugJsonValue(jsonValue)}`;\n          if (e instanceof Error && e.message.length > 0) {\n            m += `: ${e.message}`;\n          }\n          throw new Error(m);\n        }\n        break;\n    }\n  }\n}\nfunction readMapKey(type, json) {\n  if (type === ScalarType.BOOL) {\n    switch (json) {\n      case \"true\":\n        json = true;\n        break;\n      case \"false\":\n        json = false;\n        break;\n    }\n  }\n  return readScalar(type, json, LongType.BIGINT, true).toString();\n}\nfunction readScalar(type, json, longType, nullAsZeroValue) {\n  if (json === null) {\n    if (nullAsZeroValue) {\n      return scalarZeroValue(type, longType);\n    }\n    return tokenNull;\n  }\n  switch (type) {\n    // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n    // Either numbers or strings are accepted. Exponent notation is also accepted.\n    case ScalarType.DOUBLE:\n    case ScalarType.FLOAT:\n      if (json === \"NaN\")\n        return Number.NaN;\n      if (json === \"Infinity\")\n        return Number.POSITIVE_INFINITY;\n      if (json === \"-Infinity\")\n        return Number.NEGATIVE_INFINITY;\n      if (json === \"\") {\n        break;\n      }\n      if (typeof json == \"string\" && json.trim().length !== json.length) {\n        break;\n      }\n      if (typeof json != \"string\" && typeof json != \"number\") {\n        break;\n      }\n      const float = Number(json);\n      if (Number.isNaN(float)) {\n        break;\n      }\n      if (!Number.isFinite(float)) {\n        break;\n      }\n      if (type == ScalarType.FLOAT)\n        assertFloat32(float);\n      return float;\n    // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n    case ScalarType.INT32:\n    case ScalarType.FIXED32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n    case ScalarType.UINT32:\n      let int32;\n      if (typeof json == \"number\")\n        int32 = json;\n      else if (typeof json == \"string\" && json.length > 0) {\n        if (json.trim().length === json.length)\n          int32 = Number(json);\n      }\n      if (int32 === void 0)\n        break;\n      if (type == ScalarType.UINT32 || type == ScalarType.FIXED32)\n        assertUInt32(int32);\n      else\n        assertInt32(int32);\n      return int32;\n    // int64, fixed64, uint64: JSON value will be a decimal string. Either numbers or strings are accepted.\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      if (typeof json != \"number\" && typeof json != \"string\")\n        break;\n      const long = protoInt64.parse(json);\n      return longType ? long.toString() : long;\n    case ScalarType.FIXED64:\n    case ScalarType.UINT64:\n      if (typeof json != \"number\" && typeof json != \"string\")\n        break;\n      const uLong = protoInt64.uParse(json);\n      return longType ? uLong.toString() : uLong;\n    // bool:\n    case ScalarType.BOOL:\n      if (typeof json !== \"boolean\")\n        break;\n      return json;\n    // string:\n    case ScalarType.STRING:\n      if (typeof json !== \"string\") {\n        break;\n      }\n      try {\n        encodeURIComponent(json);\n      } catch (e) {\n        throw new Error(\"invalid UTF8\");\n      }\n      return json;\n    // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n    // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n    case ScalarType.BYTES:\n      if (json === \"\")\n        return new Uint8Array(0);\n      if (typeof json !== \"string\")\n        break;\n      return protoBase64.dec(json);\n  }\n  throw new Error();\n}\nfunction readEnum(type, json, ignoreUnknownFields, nullAsZeroValue) {\n  if (json === null) {\n    if (type.typeName == \"google.protobuf.NullValue\") {\n      return 0;\n    }\n    return nullAsZeroValue ? type.values[0].no : tokenNull;\n  }\n  switch (typeof json) {\n    case \"number\":\n      if (Number.isInteger(json)) {\n        return json;\n      }\n      break;\n    case \"string\":\n      const value = type.findName(json);\n      if (value !== void 0) {\n        return value.no;\n      }\n      if (ignoreUnknownFields) {\n        return tokenIgnoredUnknownEnum;\n      }\n      break;\n  }\n  throw new Error(`cannot decode enum ${type.typeName} from JSON: ${debugJsonValue(json)}`);\n}\nfunction canEmitFieldDefaultValue(field) {\n  if (field.repeated || field.kind == \"map\") {\n    return true;\n  }\n  if (field.oneof) {\n    return false;\n  }\n  if (field.kind == \"message\") {\n    return false;\n  }\n  if (field.opt || field.req) {\n    return false;\n  }\n  return true;\n}\nfunction writeField(field, value, options) {\n  if (field.kind == \"map\") {\n    assert(typeof value == \"object\" && value != null);\n    const jsonObj = {};\n    const entries = Object.entries(value);\n    switch (field.V.kind) {\n      case \"scalar\":\n        for (const [entryKey, entryValue] of entries) {\n          jsonObj[entryKey.toString()] = writeScalar(field.V.T, entryValue);\n        }\n        break;\n      case \"message\":\n        for (const [entryKey, entryValue] of entries) {\n          jsonObj[entryKey.toString()] = entryValue.toJson(options);\n        }\n        break;\n      case \"enum\":\n        const enumType = field.V.T;\n        for (const [entryKey, entryValue] of entries) {\n          jsonObj[entryKey.toString()] = writeEnum(enumType, entryValue, options.enumAsInteger);\n        }\n        break;\n    }\n    return options.emitDefaultValues || entries.length > 0 ? jsonObj : void 0;\n  }\n  if (field.repeated) {\n    assert(Array.isArray(value));\n    const jsonArr = [];\n    switch (field.kind) {\n      case \"scalar\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(writeScalar(field.T, value[i]));\n        }\n        break;\n      case \"enum\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(writeEnum(field.T, value[i], options.enumAsInteger));\n        }\n        break;\n      case \"message\":\n        for (let i = 0; i < value.length; i++) {\n          jsonArr.push(value[i].toJson(options));\n        }\n        break;\n    }\n    return options.emitDefaultValues || jsonArr.length > 0 ? jsonArr : void 0;\n  }\n  switch (field.kind) {\n    case \"scalar\":\n      return writeScalar(field.T, value);\n    case \"enum\":\n      return writeEnum(field.T, value, options.enumAsInteger);\n    case \"message\":\n      return wrapField(field.T, value).toJson(options);\n  }\n}\nfunction writeEnum(type, value, enumAsInteger) {\n  var _a;\n  assert(typeof value == \"number\");\n  if (type.typeName == \"google.protobuf.NullValue\") {\n    return null;\n  }\n  if (enumAsInteger) {\n    return value;\n  }\n  const val = type.findNumber(value);\n  return (_a = val === null || val === void 0 ? void 0 : val.name) !== null && _a !== void 0 ? _a : value;\n}\nfunction writeScalar(type, value) {\n  switch (type) {\n    // int32, fixed32, uint32: JSON value will be a decimal number. Either numbers or strings are accepted.\n    case ScalarType.INT32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n    case ScalarType.FIXED32:\n    case ScalarType.UINT32:\n      assert(typeof value == \"number\");\n      return value;\n    // float, double: JSON value will be a number or one of the special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n    // Either numbers or strings are accepted. Exponent notation is also accepted.\n    case ScalarType.FLOAT:\n    // assertFloat32(value);\n    case ScalarType.DOUBLE:\n      assert(typeof value == \"number\");\n      if (Number.isNaN(value))\n        return \"NaN\";\n      if (value === Number.POSITIVE_INFINITY)\n        return \"Infinity\";\n      if (value === Number.NEGATIVE_INFINITY)\n        return \"-Infinity\";\n      return value;\n    // string:\n    case ScalarType.STRING:\n      assert(typeof value == \"string\");\n      return value;\n    // bool:\n    case ScalarType.BOOL:\n      assert(typeof value == \"boolean\");\n      return value;\n    // JSON value will be a decimal string. Either numbers or strings are accepted.\n    case ScalarType.UINT64:\n    case ScalarType.FIXED64:\n    case ScalarType.INT64:\n    case ScalarType.SFIXED64:\n    case ScalarType.SINT64:\n      assert(typeof value == \"bigint\" || typeof value == \"string\" || typeof value == \"number\");\n      return value.toString();\n    // bytes: JSON value will be the data encoded as a string using standard base64 encoding with paddings.\n    // Either standard or URL-safe base64 encoding with/without paddings are accepted.\n    case ScalarType.BYTES:\n      assert(value instanceof Uint8Array);\n      return protoBase64.enc(value);\n  }\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/binary-format.js\nvar import_buffer20 = __toESM(require_buffer(), 1);\nvar unknownFieldsSymbol = Symbol(\"@bufbuild/protobuf/unknown-fields\");\nvar readDefaults = {\n  readUnknownFields: true,\n  readerFactory: (bytes) => new BinaryReader(bytes)\n};\nvar writeDefaults = {\n  writeUnknownFields: true,\n  writerFactory: () => new BinaryWriter()\n};\nfunction makeReadOptions2(options) {\n  return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\nfunction makeWriteOptions2(options) {\n  return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction makeBinaryFormat() {\n  return {\n    makeReadOptions: makeReadOptions2,\n    makeWriteOptions: makeWriteOptions2,\n    listUnknownFields(message) {\n      var _a;\n      return (_a = message[unknownFieldsSymbol]) !== null && _a !== void 0 ? _a : [];\n    },\n    discardUnknownFields(message) {\n      delete message[unknownFieldsSymbol];\n    },\n    writeUnknownFields(message, writer) {\n      const m = message;\n      const c = m[unknownFieldsSymbol];\n      if (c) {\n        for (const f of c) {\n          writer.tag(f.no, f.wireType).raw(f.data);\n        }\n      }\n    },\n    onUnknownField(message, no, wireType, data) {\n      const m = message;\n      if (!Array.isArray(m[unknownFieldsSymbol])) {\n        m[unknownFieldsSymbol] = [];\n      }\n      m[unknownFieldsSymbol].push({ no, wireType, data });\n    },\n    readMessage(message, reader, lengthOrEndTagFieldNo, options, delimitedMessageEncoding) {\n      const type = message.getType();\n      const end = delimitedMessageEncoding ? reader.len : reader.pos + lengthOrEndTagFieldNo;\n      let fieldNo, wireType;\n      while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimitedMessageEncoding === true && wireType == WireType.EndGroup) {\n          break;\n        }\n        const field = type.fields.find(fieldNo);\n        if (!field) {\n          const data = reader.skip(wireType, fieldNo);\n          if (options.readUnknownFields) {\n            this.onUnknownField(message, fieldNo, wireType, data);\n          }\n          continue;\n        }\n        readField2(message, reader, field, wireType, options);\n      }\n      if (delimitedMessageEncoding && // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n      (wireType != WireType.EndGroup || fieldNo !== lengthOrEndTagFieldNo)) {\n        throw new Error(`invalid end group tag`);\n      }\n    },\n    readField: readField2,\n    writeMessage(message, writer, options) {\n      const type = message.getType();\n      for (const field of type.fields.byNumber()) {\n        if (!isFieldSet(field, message)) {\n          if (field.req) {\n            throw new Error(`cannot encode field ${type.typeName}.${field.name} to binary: required field not set`);\n          }\n          continue;\n        }\n        const value = field.oneof ? message[field.oneof.localName].value : message[field.localName];\n        writeField2(field, value, writer, options);\n      }\n      if (options.writeUnknownFields) {\n        this.writeUnknownFields(message, writer);\n      }\n      return writer;\n    },\n    writeField(field, value, writer, options) {\n      if (value === void 0) {\n        return void 0;\n      }\n      writeField2(field, value, writer, options);\n    }\n  };\n}\nfunction readField2(target, reader, field, wireType, options) {\n  let { repeated, localName } = field;\n  if (field.oneof) {\n    target = target[field.oneof.localName];\n    if (target.case != localName) {\n      delete target.value;\n    }\n    target.case = localName;\n    localName = \"value\";\n  }\n  switch (field.kind) {\n    case \"scalar\":\n    case \"enum\":\n      const scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n      let read = readScalar2;\n      if (field.kind == \"scalar\" && field.L > 0) {\n        read = readScalarLTString;\n      }\n      if (repeated) {\n        let arr = target[localName];\n        const isPacked = wireType == WireType.LengthDelimited && scalarType != ScalarType.STRING && scalarType != ScalarType.BYTES;\n        if (isPacked) {\n          let e = reader.uint32() + reader.pos;\n          while (reader.pos < e) {\n            arr.push(read(reader, scalarType));\n          }\n        } else {\n          arr.push(read(reader, scalarType));\n        }\n      } else {\n        target[localName] = read(reader, scalarType);\n      }\n      break;\n    case \"message\":\n      const messageType = field.T;\n      if (repeated) {\n        target[localName].push(readMessageField(reader, new messageType(), options, field));\n      } else {\n        if (isMessage(target[localName])) {\n          readMessageField(reader, target[localName], options, field);\n        } else {\n          target[localName] = readMessageField(reader, new messageType(), options, field);\n          if (messageType.fieldWrapper && !field.oneof && !field.repeated) {\n            target[localName] = messageType.fieldWrapper.unwrapField(target[localName]);\n          }\n        }\n      }\n      break;\n    case \"map\":\n      let [mapKey, mapVal] = readMapEntry(field, reader, options);\n      target[localName][mapKey] = mapVal;\n      break;\n  }\n}\nfunction readMessageField(reader, message, options, field) {\n  const format = message.getType().runtime.bin;\n  const delimited = field === null || field === void 0 ? void 0 : field.delimited;\n  format.readMessage(\n    message,\n    reader,\n    delimited ? field.no : reader.uint32(),\n    // eslint-disable-line @typescript-eslint/strict-boolean-expressions\n    options,\n    delimited\n  );\n  return message;\n}\nfunction readMapEntry(field, reader, options) {\n  const length = reader.uint32(), end = reader.pos + length;\n  let key, val;\n  while (reader.pos < end) {\n    const [fieldNo] = reader.tag();\n    switch (fieldNo) {\n      case 1:\n        key = readScalar2(reader, field.K);\n        break;\n      case 2:\n        switch (field.V.kind) {\n          case \"scalar\":\n            val = readScalar2(reader, field.V.T);\n            break;\n          case \"enum\":\n            val = reader.int32();\n            break;\n          case \"message\":\n            val = readMessageField(reader, new field.V.T(), options, void 0);\n            break;\n        }\n        break;\n    }\n  }\n  if (key === void 0) {\n    key = scalarZeroValue(field.K, LongType.BIGINT);\n  }\n  if (typeof key != \"string\" && typeof key != \"number\") {\n    key = key.toString();\n  }\n  if (val === void 0) {\n    switch (field.V.kind) {\n      case \"scalar\":\n        val = scalarZeroValue(field.V.T, LongType.BIGINT);\n        break;\n      case \"enum\":\n        val = field.V.T.values[0].no;\n        break;\n      case \"message\":\n        val = new field.V.T();\n        break;\n    }\n  }\n  return [key, val];\n}\nfunction readScalarLTString(reader, type) {\n  const v = readScalar2(reader, type);\n  return typeof v == \"bigint\" ? v.toString() : v;\n}\nfunction readScalar2(reader, type) {\n  switch (type) {\n    case ScalarType.STRING:\n      return reader.string();\n    case ScalarType.BOOL:\n      return reader.bool();\n    case ScalarType.DOUBLE:\n      return reader.double();\n    case ScalarType.FLOAT:\n      return reader.float();\n    case ScalarType.INT32:\n      return reader.int32();\n    case ScalarType.INT64:\n      return reader.int64();\n    case ScalarType.UINT64:\n      return reader.uint64();\n    case ScalarType.FIXED64:\n      return reader.fixed64();\n    case ScalarType.BYTES:\n      return reader.bytes();\n    case ScalarType.FIXED32:\n      return reader.fixed32();\n    case ScalarType.SFIXED32:\n      return reader.sfixed32();\n    case ScalarType.SFIXED64:\n      return reader.sfixed64();\n    case ScalarType.SINT64:\n      return reader.sint64();\n    case ScalarType.UINT32:\n      return reader.uint32();\n    case ScalarType.SINT32:\n      return reader.sint32();\n  }\n}\nfunction writeField2(field, value, writer, options) {\n  assert(value !== void 0);\n  const repeated = field.repeated;\n  switch (field.kind) {\n    case \"scalar\":\n    case \"enum\":\n      let scalarType = field.kind == \"enum\" ? ScalarType.INT32 : field.T;\n      if (repeated) {\n        assert(Array.isArray(value));\n        if (field.packed) {\n          writePacked(writer, scalarType, field.no, value);\n        } else {\n          for (const item of value) {\n            writeScalar2(writer, scalarType, field.no, item);\n          }\n        }\n      } else {\n        writeScalar2(writer, scalarType, field.no, value);\n      }\n      break;\n    case \"message\":\n      if (repeated) {\n        assert(Array.isArray(value));\n        for (const item of value) {\n          writeMessageField(writer, options, field, item);\n        }\n      } else {\n        writeMessageField(writer, options, field, value);\n      }\n      break;\n    case \"map\":\n      assert(typeof value == \"object\" && value != null);\n      for (const [key, val] of Object.entries(value)) {\n        writeMapEntry(writer, options, field, key, val);\n      }\n      break;\n  }\n}\nfunction writeMapEntry(writer, options, field, key, value) {\n  writer.tag(field.no, WireType.LengthDelimited);\n  writer.fork();\n  let keyValue = key;\n  switch (field.K) {\n    case ScalarType.INT32:\n    case ScalarType.FIXED32:\n    case ScalarType.UINT32:\n    case ScalarType.SFIXED32:\n    case ScalarType.SINT32:\n      keyValue = Number.parseInt(key);\n      break;\n    case ScalarType.BOOL:\n      assert(key == \"true\" || key == \"false\");\n      keyValue = key == \"true\";\n      break;\n  }\n  writeScalar2(writer, field.K, 1, keyValue);\n  switch (field.V.kind) {\n    case \"scalar\":\n      writeScalar2(writer, field.V.T, 2, value);\n      break;\n    case \"enum\":\n      writeScalar2(writer, ScalarType.INT32, 2, value);\n      break;\n    case \"message\":\n      assert(value !== void 0);\n      writer.tag(2, WireType.LengthDelimited).bytes(value.toBinary(options));\n      break;\n  }\n  writer.join();\n}\nfunction writeMessageField(writer, options, field, value) {\n  const message = wrapField(field.T, value);\n  if (field.delimited)\n    writer.tag(field.no, WireType.StartGroup).raw(message.toBinary(options)).tag(field.no, WireType.EndGroup);\n  else\n    writer.tag(field.no, WireType.LengthDelimited).bytes(message.toBinary(options));\n}\nfunction writeScalar2(writer, type, fieldNo, value) {\n  assert(value !== void 0);\n  let [wireType, method] = scalarTypeInfo(type);\n  writer.tag(fieldNo, wireType)[method](value);\n}\nfunction writePacked(writer, type, fieldNo, value) {\n  if (!value.length) {\n    return;\n  }\n  writer.tag(fieldNo, WireType.LengthDelimited).fork();\n  let [, method] = scalarTypeInfo(type);\n  for (let i = 0; i < value.length; i++) {\n    writer[method](value[i]);\n  }\n  writer.join();\n}\nfunction scalarTypeInfo(type) {\n  let wireType = WireType.Varint;\n  switch (type) {\n    case ScalarType.BYTES:\n    case ScalarType.STRING:\n      wireType = WireType.LengthDelimited;\n      break;\n    case ScalarType.DOUBLE:\n    case ScalarType.FIXED64:\n    case ScalarType.SFIXED64:\n      wireType = WireType.Bit64;\n      break;\n    case ScalarType.FIXED32:\n    case ScalarType.SFIXED32:\n    case ScalarType.FLOAT:\n      wireType = WireType.Bit32;\n      break;\n  }\n  const method = ScalarType[type].toLowerCase();\n  return [wireType, method];\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/util-common.js\nvar import_buffer21 = __toESM(require_buffer(), 1);\nfunction makeUtilCommon() {\n  return {\n    setEnumType,\n    initPartial(source, target) {\n      if (source === void 0) {\n        return;\n      }\n      const type = target.getType();\n      for (const member of type.fields.byMember()) {\n        const localName = member.localName, t = target, s = source;\n        if (s[localName] == null) {\n          continue;\n        }\n        switch (member.kind) {\n          case \"oneof\":\n            const sk = s[localName].case;\n            if (sk === void 0) {\n              continue;\n            }\n            const sourceField = member.findField(sk);\n            let val = s[localName].value;\n            if (sourceField && sourceField.kind == \"message\" && !isMessage(val, sourceField.T)) {\n              val = new sourceField.T(val);\n            } else if (sourceField && sourceField.kind === \"scalar\" && sourceField.T === ScalarType.BYTES) {\n              val = toU8Arr(val);\n            }\n            t[localName] = { case: sk, value: val };\n            break;\n          case \"scalar\":\n          case \"enum\":\n            let copy = s[localName];\n            if (member.T === ScalarType.BYTES) {\n              copy = member.repeated ? copy.map(toU8Arr) : toU8Arr(copy);\n            }\n            t[localName] = copy;\n            break;\n          case \"map\":\n            switch (member.V.kind) {\n              case \"scalar\":\n              case \"enum\":\n                if (member.V.T === ScalarType.BYTES) {\n                  for (const [k, v] of Object.entries(s[localName])) {\n                    t[localName][k] = toU8Arr(v);\n                  }\n                } else {\n                  Object.assign(t[localName], s[localName]);\n                }\n                break;\n              case \"message\":\n                const messageType = member.V.T;\n                for (const k of Object.keys(s[localName])) {\n                  let val2 = s[localName][k];\n                  if (!messageType.fieldWrapper) {\n                    val2 = new messageType(val2);\n                  }\n                  t[localName][k] = val2;\n                }\n                break;\n            }\n            break;\n          case \"message\":\n            const mt = member.T;\n            if (member.repeated) {\n              t[localName] = s[localName].map((val2) => isMessage(val2, mt) ? val2 : new mt(val2));\n            } else {\n              const val2 = s[localName];\n              if (mt.fieldWrapper) {\n                if (\n                  // We can't use BytesValue.typeName as that will create a circular import\n                  mt.typeName === \"google.protobuf.BytesValue\"\n                ) {\n                  t[localName] = toU8Arr(val2);\n                } else {\n                  t[localName] = val2;\n                }\n              } else {\n                t[localName] = isMessage(val2, mt) ? val2 : new mt(val2);\n              }\n            }\n            break;\n        }\n      }\n    },\n    // TODO use isFieldSet() here to support future field presence\n    equals(type, a, b) {\n      if (a === b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      return type.fields.byMember().every((m) => {\n        const va = a[m.localName];\n        const vb = b[m.localName];\n        if (m.repeated) {\n          if (va.length !== vb.length) {\n            return false;\n          }\n          switch (m.kind) {\n            case \"message\":\n              return va.every((a2, i) => m.T.equals(a2, vb[i]));\n            case \"scalar\":\n              return va.every((a2, i) => scalarEquals(m.T, a2, vb[i]));\n            case \"enum\":\n              return va.every((a2, i) => scalarEquals(ScalarType.INT32, a2, vb[i]));\n          }\n          throw new Error(`repeated cannot contain ${m.kind}`);\n        }\n        switch (m.kind) {\n          case \"message\":\n            return m.T.equals(va, vb);\n          case \"enum\":\n            return scalarEquals(ScalarType.INT32, va, vb);\n          case \"scalar\":\n            return scalarEquals(m.T, va, vb);\n          case \"oneof\":\n            if (va.case !== vb.case) {\n              return false;\n            }\n            const s = m.findField(va.case);\n            if (s === void 0) {\n              return true;\n            }\n            switch (s.kind) {\n              case \"message\":\n                return s.T.equals(va.value, vb.value);\n              case \"enum\":\n                return scalarEquals(ScalarType.INT32, va.value, vb.value);\n              case \"scalar\":\n                return scalarEquals(s.T, va.value, vb.value);\n            }\n            throw new Error(`oneof cannot contain ${s.kind}`);\n          case \"map\":\n            const keys = Object.keys(va).concat(Object.keys(vb));\n            switch (m.V.kind) {\n              case \"message\":\n                const messageType = m.V.T;\n                return keys.every((k) => messageType.equals(va[k], vb[k]));\n              case \"enum\":\n                return keys.every((k) => scalarEquals(ScalarType.INT32, va[k], vb[k]));\n              case \"scalar\":\n                const scalarType = m.V.T;\n                return keys.every((k) => scalarEquals(scalarType, va[k], vb[k]));\n            }\n            break;\n        }\n      });\n    },\n    // TODO use isFieldSet() here to support future field presence\n    clone(message) {\n      const type = message.getType(), target = new type(), any = target;\n      for (const member of type.fields.byMember()) {\n        const source = message[member.localName];\n        let copy;\n        if (member.repeated) {\n          copy = source.map(cloneSingularField);\n        } else if (member.kind == \"map\") {\n          copy = any[member.localName];\n          for (const [key, v] of Object.entries(source)) {\n            copy[key] = cloneSingularField(v);\n          }\n        } else if (member.kind == \"oneof\") {\n          const f = member.findField(source.case);\n          copy = f ? { case: source.case, value: cloneSingularField(source.value) } : { case: void 0 };\n        } else {\n          copy = cloneSingularField(source);\n        }\n        any[member.localName] = copy;\n      }\n      for (const uf of type.runtime.bin.listUnknownFields(message)) {\n        type.runtime.bin.onUnknownField(any, uf.no, uf.wireType, uf.data);\n      }\n      return target;\n    }\n  };\n}\nfunction cloneSingularField(value) {\n  if (value === void 0) {\n    return value;\n  }\n  if (isMessage(value)) {\n    return value.clone();\n  }\n  if (value instanceof Uint8Array) {\n    const c = new Uint8Array(value.byteLength);\n    c.set(value);\n    return c;\n  }\n  return value;\n}\nfunction toU8Arr(input) {\n  return input instanceof Uint8Array ? input : new Uint8Array(input);\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/proto-runtime.js\nfunction makeProtoRuntime(syntax, newFieldList, initFields) {\n  return {\n    syntax,\n    json: makeJsonFormat(),\n    bin: makeBinaryFormat(),\n    util: Object.assign(Object.assign({}, makeUtilCommon()), {\n      newFieldList,\n      initFields\n    }),\n    makeMessageType(typeName, fields, opt) {\n      return makeMessageType(this, typeName, fields, opt);\n    },\n    makeEnum,\n    makeEnumType,\n    getEnumType,\n    makeExtension(typeName, extendee, field) {\n      return makeExtension(this, typeName, extendee, field);\n    }\n  };\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field-list.js\nvar import_buffer23 = __toESM(require_buffer(), 1);\nvar InternalFieldList = class {\n  constructor(fields, normalizer) {\n    this._fields = fields;\n    this._normalizer = normalizer;\n  }\n  findJsonName(jsonName) {\n    if (!this.jsonNames) {\n      const t = {};\n      for (const f of this.list()) {\n        t[f.jsonName] = t[f.name] = f;\n      }\n      this.jsonNames = t;\n    }\n    return this.jsonNames[jsonName];\n  }\n  find(fieldNo) {\n    if (!this.numbers) {\n      const t = {};\n      for (const f of this.list()) {\n        t[f.no] = f;\n      }\n      this.numbers = t;\n    }\n    return this.numbers[fieldNo];\n  }\n  list() {\n    if (!this.all) {\n      this.all = this._normalizer(this._fields);\n    }\n    return this.all;\n  }\n  byNumber() {\n    if (!this.numbersAsc) {\n      this.numbersAsc = this.list().concat().sort((a, b) => a.no - b.no);\n    }\n    return this.numbersAsc;\n  }\n  byMember() {\n    if (!this.members) {\n      this.members = [];\n      const a = this.members;\n      let o;\n      for (const f of this.list()) {\n        if (f.oneof) {\n          if (f.oneof !== o) {\n            o = f.oneof;\n            a.push(o);\n          }\n        } else {\n          a.push(f);\n        }\n      }\n    }\n    return this.members;\n  }\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\nvar import_buffer26 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field.js\nvar import_buffer25 = __toESM(require_buffer(), 1);\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/names.js\nvar import_buffer24 = __toESM(require_buffer(), 1);\nfunction localFieldName(protoName, inOneof) {\n  const name = protoCamelCase(protoName);\n  if (inOneof) {\n    return name;\n  }\n  return safeObjectProperty(safeMessageProperty(name));\n}\nfunction localOneofName(protoName) {\n  return localFieldName(protoName, false);\n}\nvar fieldJsonName = protoCamelCase;\nfunction protoCamelCase(snakeCase) {\n  let capNext = false;\n  const b = [];\n  for (let i = 0; i < snakeCase.length; i++) {\n    let c = snakeCase.charAt(i);\n    switch (c) {\n      case \"_\":\n        capNext = true;\n        break;\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        b.push(c);\n        capNext = false;\n        break;\n      default:\n        if (capNext) {\n          capNext = false;\n          c = c.toUpperCase();\n        }\n        b.push(c);\n        break;\n    }\n  }\n  return b.join(\"\");\n}\nvar reservedObjectProperties = /* @__PURE__ */ new Set([\n  // names reserved by JavaScript\n  \"constructor\",\n  \"toString\",\n  \"toJSON\",\n  \"valueOf\"\n]);\nvar reservedMessageProperties = /* @__PURE__ */ new Set([\n  // names reserved by the runtime\n  \"getType\",\n  \"clone\",\n  \"equals\",\n  \"fromBinary\",\n  \"fromJson\",\n  \"fromJsonString\",\n  \"toBinary\",\n  \"toJson\",\n  \"toJsonString\",\n  // names reserved by the runtime for the future\n  \"toObject\"\n]);\nvar fallback = (name) => `${name}$`;\nvar safeMessageProperty = (name) => {\n  if (reservedMessageProperties.has(name)) {\n    return fallback(name);\n  }\n  return name;\n};\nvar safeObjectProperty = (name) => {\n  if (reservedObjectProperties.has(name)) {\n    return fallback(name);\n  }\n  return name;\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field.js\nvar InternalOneofInfo = class {\n  constructor(name) {\n    this.kind = \"oneof\";\n    this.repeated = false;\n    this.packed = false;\n    this.opt = false;\n    this.req = false;\n    this.default = void 0;\n    this.fields = [];\n    this.name = name;\n    this.localName = localOneofName(name);\n  }\n  addField(field) {\n    assert(field.oneof === this, `field ${field.name} not one of ${this.name}`);\n    this.fields.push(field);\n  }\n  findField(localName) {\n    if (!this._lookup) {\n      this._lookup = /* @__PURE__ */ Object.create(null);\n      for (let i = 0; i < this.fields.length; i++) {\n        this._lookup[this.fields[i].localName] = this.fields[i];\n      }\n    }\n    return this._lookup[localName];\n  }\n};\n\n// node_modules/@bufbuild/protobuf/dist/esm/private/field-normalize.js\nfunction normalizeFieldInfos(fieldInfos, packedByDefault) {\n  var _a, _b, _c, _d, _e, _f;\n  const r = [];\n  let o;\n  for (const field of typeof fieldInfos == \"function\" ? fieldInfos() : fieldInfos) {\n    const f = field;\n    f.localName = localFieldName(field.name, field.oneof !== void 0);\n    f.jsonName = (_a = field.jsonName) !== null && _a !== void 0 ? _a : fieldJsonName(field.name);\n    f.repeated = (_b = field.repeated) !== null && _b !== void 0 ? _b : false;\n    if (field.kind == \"scalar\") {\n      f.L = (_c = field.L) !== null && _c !== void 0 ? _c : LongType.BIGINT;\n    }\n    f.delimited = (_d = field.delimited) !== null && _d !== void 0 ? _d : false;\n    f.req = (_e = field.req) !== null && _e !== void 0 ? _e : false;\n    f.opt = (_f = field.opt) !== null && _f !== void 0 ? _f : false;\n    if (field.packed === void 0) {\n      if (packedByDefault) {\n        f.packed = field.kind == \"enum\" || field.kind == \"scalar\" && field.T != ScalarType.BYTES && field.T != ScalarType.STRING;\n      } else {\n        f.packed = false;\n      }\n    }\n    if (field.oneof !== void 0) {\n      const ooname = typeof field.oneof == \"string\" ? field.oneof : field.oneof.name;\n      if (!o || o.name != ooname) {\n        o = new InternalOneofInfo(ooname);\n      }\n      f.oneof = o;\n      o.addField(f);\n    }\n    r.push(f);\n  }\n  return r;\n}\n\n// node_modules/@bufbuild/protobuf/dist/esm/proto3.js\nvar proto3 = makeProtoRuntime(\n  \"proto3\",\n  (fields) => {\n    return new InternalFieldList(fields, (source) => normalizeFieldInfos(source, true));\n  },\n  // TODO merge with proto2 and initExtensionField, also see initPartial, equals, clone\n  (target) => {\n    for (const member of target.getType().fields.byMember()) {\n      if (member.opt) {\n        continue;\n      }\n      const name = member.localName, t = target;\n      if (member.repeated) {\n        t[name] = [];\n        continue;\n      }\n      switch (member.kind) {\n        case \"oneof\":\n          t[name] = { case: void 0 };\n          break;\n        case \"enum\":\n          t[name] = 0;\n          break;\n        case \"map\":\n          t[name] = {};\n          break;\n        case \"scalar\":\n          t[name] = scalarZeroValue(member.T, member.L);\n          break;\n        case \"message\":\n          break;\n      }\n    }\n  }\n);\n\n// node_modules/@bufbuild/protobuf/dist/esm/service-type.js\nvar import_buffer28 = __toESM(require_buffer(), 1);\nvar MethodKind;\n(function(MethodKind2) {\n  MethodKind2[MethodKind2[\"Unary\"] = 0] = \"Unary\";\n  MethodKind2[MethodKind2[\"ServerStreaming\"] = 1] = \"ServerStreaming\";\n  MethodKind2[MethodKind2[\"ClientStreaming\"] = 2] = \"ClientStreaming\";\n  MethodKind2[MethodKind2[\"BiDiStreaming\"] = 3] = \"BiDiStreaming\";\n})(MethodKind || (MethodKind = {}));\nvar MethodIdempotency;\n(function(MethodIdempotency2) {\n  MethodIdempotency2[MethodIdempotency2[\"NoSideEffects\"] = 1] = \"NoSideEffects\";\n  MethodIdempotency2[MethodIdempotency2[\"Idempotent\"] = 2] = \"Idempotent\";\n})(MethodIdempotency || (MethodIdempotency = {}));\n\n// node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/any_pb.js\nvar import_buffer29 = __toESM(require_buffer(), 1);\nvar Any = class _Any extends Message {\n  constructor(data) {\n    super();\n    this.typeUrl = \"\";\n    this.value = new Uint8Array(0);\n    proto3.util.initPartial(data, this);\n  }\n  toJson(options) {\n    var _a;\n    if (this.typeUrl === \"\") {\n      return {};\n    }\n    const typeName = this.typeUrlToName(this.typeUrl);\n    const messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n    if (!messageType) {\n      throw new Error(`cannot encode message google.protobuf.Any to JSON: \"${this.typeUrl}\" is not in the type registry`);\n    }\n    const message = messageType.fromBinary(this.value);\n    let json = message.toJson(options);\n    if (typeName.startsWith(\"google.protobuf.\") || (json === null || Array.isArray(json) || typeof json !== \"object\")) {\n      json = { value: json };\n    }\n    json[\"@type\"] = this.typeUrl;\n    return json;\n  }\n  fromJson(json, options) {\n    var _a;\n    if (json === null || Array.isArray(json) || typeof json != \"object\") {\n      throw new Error(`cannot decode message google.protobuf.Any from JSON: expected object but got ${json === null ? \"null\" : Array.isArray(json) ? \"array\" : typeof json}`);\n    }\n    if (Object.keys(json).length == 0) {\n      return this;\n    }\n    const typeUrl = json[\"@type\"];\n    if (typeof typeUrl != \"string\" || typeUrl == \"\") {\n      throw new Error(`cannot decode message google.protobuf.Any from JSON: \"@type\" is empty`);\n    }\n    const typeName = this.typeUrlToName(typeUrl), messageType = (_a = options === null || options === void 0 ? void 0 : options.typeRegistry) === null || _a === void 0 ? void 0 : _a.findMessage(typeName);\n    if (!messageType) {\n      throw new Error(`cannot decode message google.protobuf.Any from JSON: ${typeUrl} is not in the type registry`);\n    }\n    let message;\n    if (typeName.startsWith(\"google.protobuf.\") && Object.prototype.hasOwnProperty.call(json, \"value\")) {\n      message = messageType.fromJson(json[\"value\"], options);\n    } else {\n      const copy = Object.assign({}, json);\n      delete copy[\"@type\"];\n      message = messageType.fromJson(copy, options);\n    }\n    this.packFrom(message);\n    return this;\n  }\n  packFrom(message) {\n    this.value = message.toBinary();\n    this.typeUrl = this.typeNameToUrl(message.getType().typeName);\n  }\n  unpackTo(target) {\n    if (!this.is(target.getType())) {\n      return false;\n    }\n    target.fromBinary(this.value);\n    return true;\n  }\n  unpack(registry) {\n    if (this.typeUrl === \"\") {\n      return void 0;\n    }\n    const messageType = registry.findMessage(this.typeUrlToName(this.typeUrl));\n    if (!messageType) {\n      return void 0;\n    }\n    return messageType.fromBinary(this.value);\n  }\n  is(type) {\n    if (this.typeUrl === \"\") {\n      return false;\n    }\n    const name = this.typeUrlToName(this.typeUrl);\n    let typeName = \"\";\n    if (typeof type === \"string\") {\n      typeName = type;\n    } else {\n      typeName = type.typeName;\n    }\n    return name === typeName;\n  }\n  typeNameToUrl(name) {\n    return `type.googleapis.com/${name}`;\n  }\n  typeUrlToName(url) {\n    if (!url.length) {\n      throw new Error(`invalid type url: ${url}`);\n    }\n    const slash = url.lastIndexOf(\"/\");\n    const name = slash >= 0 ? url.substring(slash + 1) : url;\n    if (!name.length) {\n      throw new Error(`invalid type url: ${url}`);\n    }\n    return name;\n  }\n  static pack(message) {\n    const any = new _Any();\n    any.packFrom(message);\n    return any;\n  }\n  static fromBinary(bytes, options) {\n    return new _Any().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Any().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Any().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return proto3.util.equals(_Any, a, b);\n  }\n};\nAny.runtime = proto3;\nAny.typeName = \"google.protobuf.Any\";\nAny.fields = proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"type_url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  },\n  {\n    no: 2,\n    name: \"value\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\n\n// node_modules/@connectrpc/connect/dist/esm/http-headers.js\nfunction decodeBinaryHeader(value, type, options) {\n  try {\n    const bytes = protoBase64.dec(value);\n    if (type) {\n      return type.fromBinary(bytes, options);\n    }\n    return bytes;\n  } catch (e) {\n    throw ConnectError.from(e, Code.DataLoss);\n  }\n}\n\n// node_modules/@connectrpc/connect/dist/esm/any-client.js\nvar import_buffer32 = __toESM(require_buffer(), 1);\nfunction makeAnyClient(service, createMethod) {\n  const client = {};\n  for (const [localName, methodInfo] of Object.entries(service.methods)) {\n    const method = createMethod(Object.assign(Object.assign({}, methodInfo), {\n      localName,\n      service\n    }));\n    if (method != null) {\n      client[localName] = method;\n    }\n  }\n  return client;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\nvar import_buffer34 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/envelope.js\nvar import_buffer33 = __toESM(require_buffer(), 1);\nfunction createEnvelopeReadableStream(stream) {\n  let reader;\n  let buffer = new Uint8Array(0);\n  function append(chunk) {\n    const n = new Uint8Array(buffer.length + chunk.length);\n    n.set(buffer);\n    n.set(chunk, buffer.length);\n    buffer = n;\n  }\n  return new ReadableStream({\n    start() {\n      reader = stream.getReader();\n    },\n    async pull(controller) {\n      let header = void 0;\n      for (; ; ) {\n        if (header === void 0 && buffer.byteLength >= 5) {\n          let length = 0;\n          for (let i = 1; i < 5; i++) {\n            length = (length << 8) + buffer[i];\n          }\n          header = { flags: buffer[0], length };\n        }\n        if (header !== void 0 && buffer.byteLength >= header.length + 5) {\n          break;\n        }\n        const result = await reader.read();\n        if (result.done) {\n          break;\n        }\n        append(result.value);\n      }\n      if (header === void 0) {\n        if (buffer.byteLength == 0) {\n          controller.close();\n          return;\n        }\n        controller.error(new ConnectError(\"premature end of stream\", Code.DataLoss));\n        return;\n      }\n      const data = buffer.subarray(5, 5 + header.length);\n      buffer = buffer.subarray(5 + header.length);\n      controller.enqueue({\n        flags: header.flags,\n        data\n      });\n    }\n  });\n}\nfunction encodeEnvelope(flags, data) {\n  const bytes = new Uint8Array(data.length + 5);\n  bytes.set(data, 5);\n  const v = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  v.setUint8(0, flags);\n  v.setUint32(1, data.length);\n  return bytes;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/async-iterable.js\nvar __asyncValues = function(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function(v) {\n      return new Promise(function(resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function(v2) {\n      resolve({ value: v2, done: d });\n    }, reject);\n  }\n};\nvar __await = function(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n};\nvar __asyncGenerator = function(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i;\n  function awaitReturn(f) {\n    return function(v) {\n      return Promise.resolve(v).then(f, reject);\n    };\n  }\n  function verb(n, f) {\n    if (g[n]) {\n      i[n] = function(v) {\n        return new Promise(function(a, b) {\n          q.push([n, v, a, b]) > 1 || resume(n, v);\n        });\n      };\n      if (f) i[n] = f(i[n]);\n    }\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\nvar __asyncDelegator = function(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function() {\n    return this;\n  }, i;\n  function verb(n, f) {\n    i[n] = o[n] ? function(v) {\n      return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v;\n    } : f;\n  }\n};\nfunction createAsyncIterable(items) {\n  return __asyncGenerator(this, arguments, function* createAsyncIterable_1() {\n    yield __await(yield* __asyncDelegator(__asyncValues(items)));\n  });\n}\n\n// node_modules/@connectrpc/connect/dist/esm/promise-client.js\nvar import_buffer35 = __toESM(require_buffer(), 1);\nvar __asyncValues2 = function(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i);\n  function verb(n) {\n    i[n] = o[n] && function(v) {\n      return new Promise(function(resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function(v2) {\n      resolve({ value: v2, done: d });\n    }, reject);\n  }\n};\nvar __await2 = function(v) {\n  return this instanceof __await2 ? (this.v = v, this) : new __await2(v);\n};\nvar __asyncDelegator2 = function(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function() {\n    return this;\n  }, i;\n  function verb(n, f) {\n    i[n] = o[n] ? function(v) {\n      return (p = !p) ? { value: __await2(o[n](v)), done: false } : f ? f(v) : v;\n    } : f;\n  }\n};\nvar __asyncGenerator2 = function(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i;\n  function awaitReturn(f) {\n    return function(v) {\n      return Promise.resolve(v).then(f, reject);\n    };\n  }\n  function verb(n, f) {\n    if (g[n]) {\n      i[n] = function(v) {\n        return new Promise(function(a, b) {\n          q.push([n, v, a, b]) > 1 || resume(n, v);\n        });\n      };\n      if (f) i[n] = f(i[n]);\n    }\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await2 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\nfunction createPromiseClient(service, transport) {\n  return makeAnyClient(service, (method) => {\n    switch (method.kind) {\n      case MethodKind.Unary:\n        return createUnaryFn(transport, service, method);\n      case MethodKind.ServerStreaming:\n        return createServerStreamingFn(transport, service, method);\n      case MethodKind.ClientStreaming:\n        return createClientStreamingFn(transport, service, method);\n      case MethodKind.BiDiStreaming:\n        return createBiDiStreamingFn(transport, service, method);\n      default:\n        return null;\n    }\n  });\n}\nfunction createUnaryFn(transport, service, method) {\n  return async function(input, options) {\n    var _a, _b;\n    const response = await transport.unary(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, input, options === null || options === void 0 ? void 0 : options.contextValues);\n    (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n    (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n    return response.message;\n  };\n}\nfunction createServerStreamingFn(transport, service, method) {\n  return function(input, options) {\n    return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, createAsyncIterable([input]), options === null || options === void 0 ? void 0 : options.contextValues), options);\n  };\n}\nfunction createClientStreamingFn(transport, service, method) {\n  return async function(request, options) {\n    var _a, e_1, _b, _c;\n    var _d, _e;\n    const response = await transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues);\n    (_d = options === null || options === void 0 ? void 0 : options.onHeader) === null || _d === void 0 ? void 0 : _d.call(options, response.header);\n    let singleMessage;\n    try {\n      for (var _f = true, _g = __asyncValues2(response.message), _h; _h = await _g.next(), _a = _h.done, !_a; _f = true) {\n        _c = _h.value;\n        _f = false;\n        const message = _c;\n        singleMessage = message;\n      }\n    } catch (e_1_1) {\n      e_1 = { error: e_1_1 };\n    } finally {\n      try {\n        if (!_f && !_a && (_b = _g.return)) await _b.call(_g);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (!singleMessage) {\n      throw new ConnectError(\"protocol error: missing response message\", Code.Internal);\n    }\n    (_e = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _e === void 0 ? void 0 : _e.call(options, response.trailer);\n    return singleMessage;\n  };\n}\nfunction createBiDiStreamingFn(transport, service, method) {\n  return function(request, options) {\n    return handleStreamResponse(transport.stream(service, method, options === null || options === void 0 ? void 0 : options.signal, options === null || options === void 0 ? void 0 : options.timeoutMs, options === null || options === void 0 ? void 0 : options.headers, request, options === null || options === void 0 ? void 0 : options.contextValues), options);\n  };\n}\nfunction handleStreamResponse(stream, options) {\n  const it = function() {\n    var _a, _b;\n    return __asyncGenerator2(this, arguments, function* () {\n      const response = yield __await2(stream);\n      (_a = options === null || options === void 0 ? void 0 : options.onHeader) === null || _a === void 0 ? void 0 : _a.call(options, response.header);\n      yield __await2(yield* __asyncDelegator2(__asyncValues2(response.message)));\n      (_b = options === null || options === void 0 ? void 0 : options.onTrailer) === null || _b === void 0 ? void 0 : _b.call(options, response.trailer);\n    });\n  }()[Symbol.asyncIterator]();\n  return {\n    [Symbol.asyncIterator]: () => ({\n      next: () => it.next()\n    })\n  };\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/signals.js\nvar import_buffer36 = __toESM(require_buffer(), 1);\nfunction createLinkedAbortController(...signals) {\n  const controller = new AbortController();\n  const sa = signals.filter((s) => s !== void 0).concat(controller.signal);\n  for (const signal of sa) {\n    if (signal.aborted) {\n      onAbort.apply(signal);\n      break;\n    }\n    signal.addEventListener(\"abort\", onAbort);\n  }\n  function onAbort() {\n    if (!controller.signal.aborted) {\n      controller.abort(getAbortSignalReason(this));\n    }\n    for (const signal of sa) {\n      signal.removeEventListener(\"abort\", onAbort);\n    }\n  }\n  return controller;\n}\nfunction createDeadlineSignal(timeoutMs) {\n  const controller = new AbortController();\n  const listener = () => {\n    controller.abort(new ConnectError(\"the operation timed out\", Code.DeadlineExceeded));\n  };\n  let timeoutId;\n  if (timeoutMs !== void 0) {\n    if (timeoutMs <= 0)\n      listener();\n    else\n      timeoutId = setTimeout(listener, timeoutMs);\n  }\n  return {\n    signal: controller.signal,\n    cleanup: () => clearTimeout(timeoutId)\n  };\n}\nfunction getAbortSignalReason(signal) {\n  if (!signal.aborted) {\n    return void 0;\n  }\n  if (signal.reason !== void 0) {\n    return signal.reason;\n  }\n  const e = new Error(\"This operation was aborted\");\n  e.name = \"AbortError\";\n  return e;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/context-values.js\nvar import_buffer37 = __toESM(require_buffer(), 1);\nfunction createContextValues() {\n  return {\n    get(key) {\n      return key.id in this ? this[key.id] : key.defaultValue;\n    },\n    set(key, value) {\n      this[key.id] = value;\n      return this;\n    },\n    delete(key) {\n      delete this[key.id];\n      return this;\n    }\n  };\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/trailer.js\nvar import_buffer38 = __toESM(require_buffer(), 1);\nvar trailerFlag = 128;\nfunction trailerParse(data) {\n  const headers = new Headers();\n  const lines = new TextDecoder().decode(data).split(\"\\r\\n\");\n  for (const line of lines) {\n    if (line === \"\") {\n      continue;\n    }\n    const i = line.indexOf(\":\");\n    if (i > 0) {\n      const name = line.substring(0, i).trim();\n      const value = line.substring(i + 1).trim();\n      headers.append(name, value);\n    }\n  }\n  return headers;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\nvar import_buffer40 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/headers.js\nvar import_buffer39 = __toESM(require_buffer(), 1);\nvar headerContentType = \"Content-Type\";\nvar headerTimeout = \"Grpc-Timeout\";\nvar headerGrpcStatus = \"Grpc-Status\";\nvar headerGrpcMessage = \"Grpc-Message\";\nvar headerStatusDetailsBin = \"Grpc-Status-Details-Bin\";\nvar headerUserAgent = \"User-Agent\";\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/headers.js\nvar headerXUserAgent = \"X-User-Agent\";\nvar headerXGrpcWeb = \"X-Grpc-Web\";\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/content-type.js\nvar import_buffer41 = __toESM(require_buffer(), 1);\nvar contentTypeProto = \"application/grpc-web+proto\";\nvar contentTypeJson = \"application/grpc-web+json\";\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\nvar import_buffer43 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/gen/status_pb.js\nvar import_buffer42 = __toESM(require_buffer(), 1);\nvar Status = class _Status extends Message {\n  constructor(data) {\n    super();\n    this.code = 0;\n    this.message = \"\";\n    this.details = [];\n    proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Status().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Status().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Status().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return proto3.util.equals(_Status, a, b);\n  }\n};\nStatus.runtime = proto3;\nStatus.typeName = \"google.rpc.Status\";\nStatus.fields = proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"code\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  },\n  {\n    no: 2,\n    name: \"message\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  },\n  { no: 3, name: \"details\", kind: \"message\", T: Any, repeated: true }\n]);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/trailer-status.js\nvar grpcStatusOk = \"0\";\nfunction findTrailerError(headerOrTrailer) {\n  var _a;\n  const statusBytes = headerOrTrailer.get(headerStatusDetailsBin);\n  if (statusBytes != null) {\n    const status = decodeBinaryHeader(statusBytes, Status);\n    if (status.code == 0) {\n      return void 0;\n    }\n    const error = new ConnectError(status.message, status.code, headerOrTrailer);\n    error.details = status.details.map((any) => ({\n      type: any.typeUrl.substring(any.typeUrl.lastIndexOf(\"/\") + 1),\n      value: any.value\n    }));\n    return error;\n  }\n  const grpcStatus = headerOrTrailer.get(headerGrpcStatus);\n  if (grpcStatus != null) {\n    if (grpcStatus === grpcStatusOk) {\n      return void 0;\n    }\n    const code = parseInt(grpcStatus, 10);\n    if (code in Code) {\n      return new ConnectError(decodeURIComponent((_a = headerOrTrailer.get(headerGrpcMessage)) !== null && _a !== void 0 ? _a : \"\"), code, headerOrTrailer);\n    }\n    return new ConnectError(`invalid grpc-status: ${grpcStatus}`, Code.Internal, headerOrTrailer);\n  }\n  return void 0;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/create-method-url.js\nvar import_buffer44 = __toESM(require_buffer(), 1);\nfunction createMethodUrl(baseUrl, service, method) {\n  const s = typeof service == \"string\" ? service : service.typeName;\n  const m = typeof method == \"string\" ? method : method.name;\n  return baseUrl.toString().replace(/\\/?$/, `/${s}/${m}`);\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/normalize.js\nvar import_buffer45 = __toESM(require_buffer(), 1);\nfunction normalize(type, message) {\n  return message instanceof type ? message : new type(message);\n}\nfunction normalizeIterable(messageType, input) {\n  function transform(result) {\n    if (result.done === true) {\n      return result;\n    }\n    return {\n      done: result.done,\n      value: normalize(messageType, result.value)\n    };\n  }\n  return {\n    [Symbol.asyncIterator]() {\n      const it = input[Symbol.asyncIterator]();\n      const res = {\n        next: () => it.next().then(transform)\n      };\n      if (it.throw !== void 0) {\n        res.throw = (e) => it.throw(e).then(transform);\n      }\n      if (it.return !== void 0) {\n        res.return = (v) => it.return(v).then(transform);\n      }\n      return res;\n    }\n  };\n}\n\n// node_modules/@connectrpc/connect/dist/esm/interceptor.js\nvar import_buffer46 = __toESM(require_buffer(), 1);\nfunction applyInterceptors(next, interceptors) {\n  var _a;\n  return (_a = interceptors === null || interceptors === void 0 ? void 0 : interceptors.concat().reverse().reduce(\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n    (n, i) => i(n),\n    next\n  )) !== null && _a !== void 0 ? _a : next;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/serialization.js\nvar import_buffer47 = __toESM(require_buffer(), 1);\nfunction getJsonOptions(options) {\n  var _a;\n  const o = Object.assign({}, options);\n  (_a = o.ignoreUnknownFields) !== null && _a !== void 0 ? _a : o.ignoreUnknownFields = true;\n  return o;\n}\nfunction createClientMethodSerializers(method, useBinaryFormat, jsonOptions, binaryOptions) {\n  const input = useBinaryFormat ? createBinarySerialization(method.I, binaryOptions) : createJsonSerialization(method.I, jsonOptions);\n  const output = useBinaryFormat ? createBinarySerialization(method.O, binaryOptions) : createJsonSerialization(method.O, jsonOptions);\n  return { parse: output.parse, serialize: input.serialize };\n}\nfunction createBinarySerialization(messageType, options) {\n  return {\n    parse(data) {\n      try {\n        return messageType.fromBinary(data, options);\n      } catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new ConnectError(`parse binary: ${m}`, Code.InvalidArgument);\n      }\n    },\n    serialize(data) {\n      try {\n        return data.toBinary(options);\n      } catch (e) {\n        const m = e instanceof Error ? e.message : String(e);\n        throw new ConnectError(`serialize binary: ${m}`, Code.Internal);\n      }\n    }\n  };\n}\nfunction createJsonSerialization(messageType, options) {\n  var _a, _b;\n  const textEncoder = (_a = options === null || options === void 0 ? void 0 : options.textEncoder) !== null && _a !== void 0 ? _a : new TextEncoder();\n  const textDecoder = (_b = options === null || options === void 0 ? void 0 : options.textDecoder) !== null && _b !== void 0 ? _b : new TextDecoder();\n  const o = getJsonOptions(options);\n  return {\n    parse(data) {\n      try {\n        const json = textDecoder.decode(data);\n        return messageType.fromJsonString(json, o);\n      } catch (e) {\n        throw ConnectError.from(e, Code.InvalidArgument);\n      }\n    },\n    serialize(data) {\n      try {\n        const json = data.toJsonString(o);\n        return textEncoder.encode(json);\n      } catch (e) {\n        throw ConnectError.from(e, Code.Internal);\n      }\n    }\n  };\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/run-call.js\nvar import_buffer48 = __toESM(require_buffer(), 1);\nfunction runUnaryCall(opt) {\n  const next = applyInterceptors(opt.next, opt.interceptors);\n  const [signal, abort, done] = setupSignal(opt);\n  const req = Object.assign(Object.assign({}, opt.req), { message: normalize(opt.req.method.I, opt.req.message), signal });\n  return next(req).then((res) => {\n    done();\n    return res;\n  }, abort);\n}\nfunction runStreamingCall(opt) {\n  const next = applyInterceptors(opt.next, opt.interceptors);\n  const [signal, abort, done] = setupSignal(opt);\n  const req = Object.assign(Object.assign({}, opt.req), { message: normalizeIterable(opt.req.method.I, opt.req.message), signal });\n  let doneCalled = false;\n  signal.addEventListener(\"abort\", function() {\n    var _a, _b;\n    const it = opt.req.message[Symbol.asyncIterator]();\n    if (!doneCalled) {\n      (_a = it.throw) === null || _a === void 0 ? void 0 : _a.call(it, this.reason).catch(() => {\n      });\n    }\n    (_b = it.return) === null || _b === void 0 ? void 0 : _b.call(it).catch(() => {\n    });\n  });\n  return next(req).then((res) => {\n    return Object.assign(Object.assign({}, res), { message: {\n      [Symbol.asyncIterator]() {\n        const it = res.message[Symbol.asyncIterator]();\n        return {\n          next() {\n            return it.next().then((r) => {\n              if (r.done == true) {\n                doneCalled = true;\n                done();\n              }\n              return r;\n            }, abort);\n          }\n          // We deliberately omit throw/return.\n        };\n      }\n    } });\n  }, abort);\n}\nfunction setupSignal(opt) {\n  const { signal, cleanup } = createDeadlineSignal(opt.timeoutMs);\n  const controller = createLinkedAbortController(opt.signal, signal);\n  return [\n    controller.signal,\n    function abort(reason) {\n      const e = ConnectError.from(signal.aborted ? getAbortSignalReason(signal) : reason);\n      controller.abort(e);\n      cleanup();\n      return Promise.reject(e);\n    },\n    function done() {\n      cleanup();\n      controller.abort();\n    }\n  ];\n}\n\n// src/grpcTransport.web.ts\nvar import_buffer60 = __toESM(require_buffer());\n\n// node_modules/@connectrpc/connect-web/dist/esm/index.js\nvar import_buffer59 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol/index.js\nvar import_buffer50 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect-web/dist/esm/assert-fetch-api.js\nvar import_buffer51 = __toESM(require_buffer(), 1);\nfunction assertFetchApi() {\n  try {\n    new Headers();\n  } catch (_) {\n    throw new Error(\"connect-web requires the fetch API. Are you running on an old version of Node.js? Node.js is not supported in Connect for Web - please stay tuned for Connect for Node.\");\n  }\n}\n\n// node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js\nvar import_buffer58 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/index.js\nvar import_buffer57 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/validate-trailer.js\nvar import_buffer52 = __toESM(require_buffer(), 1);\nfunction validateTrailer(trailer, header) {\n  const err = findTrailerError(trailer);\n  if (err) {\n    header.forEach((value, key) => {\n      err.metadata.append(key, value);\n    });\n    throw err;\n  }\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/request-header.js\nvar import_buffer53 = __toESM(require_buffer(), 1);\nfunction requestHeader(useBinaryFormat, timeoutMs, userProvidedHeaders, setUserAgent) {\n  const result = new Headers(userProvidedHeaders !== null && userProvidedHeaders !== void 0 ? userProvidedHeaders : {});\n  result.set(headerContentType, useBinaryFormat ? contentTypeProto : contentTypeJson);\n  result.set(headerXGrpcWeb, \"1\");\n  result.set(headerXUserAgent, \"connect-es/1.4.0\");\n  if (setUserAgent) {\n    result.set(headerUserAgent, \"connect-es/1.4.0\");\n  }\n  if (timeoutMs !== void 0) {\n    result.set(headerTimeout, `${timeoutMs}m`);\n  }\n  return result;\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\nvar import_buffer55 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/http-status.js\nvar import_buffer54 = __toESM(require_buffer(), 1);\nfunction codeFromHttpStatus(httpStatus) {\n  switch (httpStatus) {\n    case 400:\n      return Code.Internal;\n    case 401:\n      return Code.Unauthenticated;\n    case 403:\n      return Code.PermissionDenied;\n    case 404:\n      return Code.Unimplemented;\n    case 429:\n      return Code.Unavailable;\n    case 502:\n      return Code.Unavailable;\n    case 503:\n      return Code.Unavailable;\n    case 504:\n      return Code.Unavailable;\n    default:\n      return Code.Unknown;\n  }\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc-web/validate-response.js\nfunction validateResponse(status, headers) {\n  var _a;\n  if (status >= 200 && status < 300) {\n    const err = findTrailerError(headers);\n    if (err) {\n      throw err;\n    }\n    return { foundStatus: headers.has(headerGrpcStatus) };\n  }\n  throw new ConnectError(decodeURIComponent((_a = headers.get(headerGrpcMessage)) !== null && _a !== void 0 ? _a : `HTTP ${status}`), codeFromHttpStatus(status), headers);\n}\n\n// node_modules/@connectrpc/connect/dist/esm/protocol-grpc/index.js\nvar import_buffer56 = __toESM(require_buffer(), 1);\n\n// node_modules/@connectrpc/connect-web/dist/esm/grpc-web-transport.js\nvar __await3 = function(v) {\n  return this instanceof __await3 ? (this.v = v, this) : new __await3(v);\n};\nvar __asyncGenerator3 = function(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function() {\n    return this;\n  }, i;\n  function awaitReturn(f) {\n    return function(v) {\n      return Promise.resolve(v).then(f, reject);\n    };\n  }\n  function verb(n, f) {\n    if (g[n]) {\n      i[n] = function(v) {\n        return new Promise(function(a, b) {\n          q.push([n, v, a, b]) > 1 || resume(n, v);\n        });\n      };\n      if (f) i[n] = f(i[n]);\n    }\n  }\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n  function step(r) {\n    r.value instanceof __await3 ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n};\nfunction createGrpcWebTransport(options) {\n  var _a;\n  assertFetchApi();\n  const useBinaryFormat = (_a = options.useBinaryFormat) !== null && _a !== void 0 ? _a : true;\n  return {\n    async unary(service, method, signal, timeoutMs, header, message, contextValues) {\n      var _a2;\n      const { serialize, parse } = createClientMethodSerializers(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n      timeoutMs = timeoutMs === void 0 ? options.defaultTimeoutMs : timeoutMs <= 0 ? void 0 : timeoutMs;\n      return await runUnaryCall({\n        interceptors: options.interceptors,\n        signal,\n        timeoutMs,\n        req: {\n          stream: false,\n          service,\n          method,\n          url: createMethodUrl(options.baseUrl, service, method),\n          init: {\n            method: \"POST\",\n            credentials: (_a2 = options.credentials) !== null && _a2 !== void 0 ? _a2 : \"same-origin\",\n            redirect: \"error\",\n            mode: \"cors\"\n          },\n          header: requestHeader(useBinaryFormat, timeoutMs, header, false),\n          contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : createContextValues(),\n          message\n        },\n        next: async (req) => {\n          var _a3;\n          const fetch = (_a3 = options.fetch) !== null && _a3 !== void 0 ? _a3 : globalThis.fetch;\n          const response = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: encodeEnvelope(0, serialize(req.message)) }));\n          validateResponse(response.status, response.headers);\n          if (!response.body) {\n            throw \"missing response body\";\n          }\n          const reader = createEnvelopeReadableStream(response.body).getReader();\n          let trailer;\n          let message2;\n          for (; ; ) {\n            const r = await reader.read();\n            if (r.done) {\n              break;\n            }\n            const { flags, data } = r.value;\n            if (flags === trailerFlag) {\n              if (trailer !== void 0) {\n                throw \"extra trailer\";\n              }\n              trailer = trailerParse(data);\n              continue;\n            }\n            if (message2 !== void 0) {\n              throw \"extra message\";\n            }\n            message2 = parse(data);\n          }\n          if (trailer === void 0) {\n            throw \"missing trailer\";\n          }\n          validateTrailer(trailer, response.headers);\n          if (message2 === void 0) {\n            throw \"missing message\";\n          }\n          return {\n            stream: false,\n            service,\n            method,\n            header: response.headers,\n            message: message2,\n            trailer\n          };\n        }\n      });\n    },\n    async stream(service, method, signal, timeoutMs, header, input, contextValues) {\n      var _a2;\n      const { serialize, parse } = createClientMethodSerializers(method, useBinaryFormat, options.jsonOptions, options.binaryOptions);\n      function parseResponseBody(body, foundStatus, trailerTarget, header2) {\n        return __asyncGenerator3(this, arguments, function* parseResponseBody_1() {\n          const reader = createEnvelopeReadableStream(body).getReader();\n          if (foundStatus) {\n            if (!(yield __await3(reader.read())).done) {\n              throw \"extra data for trailers-only\";\n            }\n            return yield __await3(void 0);\n          }\n          let trailerReceived = false;\n          for (; ; ) {\n            const result = yield __await3(reader.read());\n            if (result.done) {\n              break;\n            }\n            const { flags, data } = result.value;\n            if ((flags & trailerFlag) === trailerFlag) {\n              if (trailerReceived) {\n                throw \"extra trailer\";\n              }\n              trailerReceived = true;\n              const trailer = trailerParse(data);\n              validateTrailer(trailer, header2);\n              trailer.forEach((value, key) => trailerTarget.set(key, value));\n              continue;\n            }\n            if (trailerReceived) {\n              throw \"extra message\";\n            }\n            yield yield __await3(parse(data));\n            continue;\n          }\n          if (!trailerReceived) {\n            throw \"missing trailer\";\n          }\n        });\n      }\n      async function createRequestBody(input2) {\n        if (method.kind != MethodKind.ServerStreaming) {\n          throw \"The fetch API does not support streaming request bodies\";\n        }\n        const r = await input2[Symbol.asyncIterator]().next();\n        if (r.done == true) {\n          throw \"missing request message\";\n        }\n        return encodeEnvelope(0, serialize(r.value));\n      }\n      timeoutMs = timeoutMs === void 0 ? options.defaultTimeoutMs : timeoutMs <= 0 ? void 0 : timeoutMs;\n      return runStreamingCall({\n        interceptors: options.interceptors,\n        signal,\n        timeoutMs,\n        req: {\n          stream: true,\n          service,\n          method,\n          url: createMethodUrl(options.baseUrl, service, method),\n          init: {\n            method: \"POST\",\n            credentials: (_a2 = options.credentials) !== null && _a2 !== void 0 ? _a2 : \"same-origin\",\n            redirect: \"error\",\n            mode: \"cors\"\n          },\n          header: requestHeader(useBinaryFormat, timeoutMs, header, false),\n          contextValues: contextValues !== null && contextValues !== void 0 ? contextValues : createContextValues(),\n          message: input\n        },\n        next: async (req) => {\n          var _a3;\n          const fetch = (_a3 = options.fetch) !== null && _a3 !== void 0 ? _a3 : globalThis.fetch;\n          const fRes = await fetch(req.url, Object.assign(Object.assign({}, req.init), { headers: req.header, signal: req.signal, body: await createRequestBody(req.message) }));\n          const { foundStatus } = validateResponse(fRes.status, fRes.headers);\n          if (!fRes.body) {\n            throw \"missing response body\";\n          }\n          const trailer = new Headers();\n          const res = Object.assign(Object.assign({}, req), { header: fRes.headers, trailer, message: parseResponseBody(fRes.body, foundStatus, trailer, fRes.headers) });\n          return res;\n        }\n      });\n    }\n  };\n}\n\n// src/grpcTransport.web.ts\nvar createGrpcTransport = createGrpcWebTransport;\n\n// src/cardano.ts\n\n\n\n// src/common.ts\nvar import_buffer61 = __toESM(require_buffer());\nfunction metadataInterceptor(options) {\n  return (next) => async (req) => {\n    if (!!(options == null ? void 0 : options.headers)) {\n      Object.entries(options.headers).forEach(\n        ([key, value]) => req.header.set(key, value)\n      );\n    }\n    return await next(req);\n  };\n}\n\n// src/cardano.ts\nfunction anyChainToBlock(msg) {\n  return msg.chain.case == \"cardano\" ? msg.chain.value : null;\n}\nfunction pointToBlockRef(p) {\n  return new _utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__.sync.BlockRef({\n    index: BigInt(p.slot),\n    hash: new Uint8Array(buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(p.hash, \"hex\"))\n  });\n}\nfunction blockRefToPoint(r) {\n  return {\n    slot: r.index.toString(),\n    hash: buffer__WEBPACK_IMPORTED_MODULE_0__.Buffer.from(r.hash).toString(\"hex\")\n  };\n}\nfunction anyUtxoToChain(u) {\n  switch (u.parsedState.case) {\n    case \"cardano\":\n      return {\n        txoRef: u.txoRef,\n        parsedValued: u.parsedState.value,\n        nativeBytes: u.nativeBytes\n      };\n    default:\n      throw Error(\"source is not Cardano data\");\n  }\n}\nfunction anyParamsToChain(p) {\n  switch (p.params.case) {\n    case \"cardano\":\n      return p.params.value;\n    default:\n      throw Error(\"source is not Cardano data\");\n  }\n}\nvar SyncClient = class {\n  constructor(options) {\n    let headerInterceptor = metadataInterceptor(options);\n    const transport = createGrpcTransport({\n      httpVersion: \"2\",\n      baseUrl: options.uri,\n      interceptors: [headerInterceptor]\n    });\n    this.inner = createPromiseClient(_utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__.syncConnect.SyncService, transport);\n  }\n  async *followTip(intersect) {\n    const req = new _utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__.sync.FollowTipRequest({\n      intersect: intersect == null ? void 0 : intersect.map((p) => pointToBlockRef(p))\n    });\n    const res = this.inner.followTip(req);\n    for await (const any of res) {\n      switch (any.action.case) {\n        case \"apply\":\n          yield {\n            action: \"apply\",\n            block: anyChainToBlock(any.action.value)\n          };\n          break;\n        case \"undo\":\n          yield {\n            action: \"undo\",\n            block: anyChainToBlock(any.action.value)\n          };\n          break;\n        case \"reset\":\n          yield {\n            action: \"reset\",\n            point: blockRefToPoint(any.action.value)\n          };\n      }\n    }\n  }\n  async fetchBlock(p) {\n    const req = pointToBlockRef(p);\n    const res = await this.inner.fetchBlock({ ref: [req] });\n    return anyChainToBlock(res.block[0]);\n  }\n};\nvar QueryClient = class {\n  constructor(options) {\n    let headerInterceptor = metadataInterceptor(options);\n    const transport = createGrpcTransport({\n      httpVersion: \"2\",\n      baseUrl: options.uri,\n      interceptors: [headerInterceptor]\n    });\n    this.inner = createPromiseClient(_utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__.queryConnect.QueryService, transport);\n  }\n  async readParams() {\n    const res = await this.inner.readParams({});\n    return anyParamsToChain(res.values);\n  }\n  async readUtxosByOutputRef(refs) {\n    const searchResponse = await this.inner.readUtxos({\n      keys: refs.map((ref) => {\n        return {\n          hash: ref.txHash,\n          index: ref.outputIndex\n        };\n      })\n    });\n    return searchResponse.items.map(anyUtxoToChain);\n  }\n  async searchUtxosByMatch(pattern) {\n    const searchResponse = await this.inner.searchUtxos({\n      predicate: {\n        match: { utxoPattern: { value: pattern, case: \"cardano\" } }\n      }\n    });\n    return searchResponse.items.map(anyUtxoToChain);\n  }\n  async searchUtxosByAddress(address) {\n    return this.searchUtxosByMatch({\n      address: {\n        exactAddress: address\n      }\n    });\n  }\n  async searchUtxosByPaymentPart(paymentPart) {\n    return this.searchUtxosByMatch({\n      address: {\n        paymentPart\n      }\n    });\n  }\n  async searchUtxosByDelegationPart(delegationPart) {\n    return this.searchUtxosByMatch({\n      address: {\n        delegationPart\n      }\n    });\n  }\n  async searchUtxosByAsset(policyId, name) {\n    return this.searchUtxosByMatch({\n      asset: policyId ? { policyId } : { assetName: name }\n    });\n  }\n  async searchUtxosByAddressWithAsset(address, policyId, name) {\n    return this.searchUtxosByMatch({\n      address: {\n        exactAddress: address\n      },\n      asset: policyId ? { policyId } : { assetName: name }\n    });\n  }\n};\nvar SubmitClient = class {\n  constructor(options) {\n    let headerInterceptor = metadataInterceptor(options);\n    const transport = createGrpcTransport({\n      httpVersion: \"2\",\n      baseUrl: options.uri,\n      interceptors: [headerInterceptor]\n    });\n    this.inner = createPromiseClient(_utxorpc_spec__WEBPACK_IMPORTED_MODULE_1__.submitConnect.SubmitService, transport);\n  }\n  async submitTx(tx) {\n    const res = await this.inner.submitTx({\n      tx: [tx].map((cbor) => ({ type: { case: \"raw\", value: cbor } }))\n    });\n    return res.ref[0];\n  }\n  async *waitForTx(txHash) {\n    const updates = this.inner.waitForTx({\n      ref: [txHash]\n    });\n    for await (const change of updates) {\n      yield change.stage;\n    }\n  }\n};\n\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@utxorpc/sdk/lib/browser/index.mjs\n"));

/***/ }),

/***/ "./node_modules/@utxorpc/spec/lib/index.mjs":
/*!**************************************************!*\
  !*** ./node_modules/@utxorpc/spec/lib/index.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cardano: () => (/* binding */ cardano_pb_exports),\n/* harmony export */   query: () => (/* binding */ query_pb_exports),\n/* harmony export */   queryConnect: () => (/* binding */ query_connect_exports),\n/* harmony export */   submit: () => (/* binding */ submit_pb_exports),\n/* harmony export */   submitConnect: () => (/* binding */ submit_connect_exports),\n/* harmony export */   sync: () => (/* binding */ sync_pb_exports),\n/* harmony export */   syncConnect: () => (/* binding */ sync_connect_exports),\n/* harmony export */   watch: () => (/* binding */ watch_pb_exports),\n/* harmony export */   watchConnect: () => (/* binding */ watch_connect_exports)\n/* harmony export */ });\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto3.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/message.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/proto-int64.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/google/protobuf/field_mask_pb.js\");\n/* harmony import */ var _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @bufbuild/protobuf */ \"./node_modules/@bufbuild/protobuf/dist/esm/service-type.js\");\nvar __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/utxorpc/v1alpha/cardano/cardano_pb.ts\nvar cardano_pb_exports = {};\n__export(cardano_pb_exports, {\n  AddressPattern: () => AddressPattern,\n  Anchor: () => Anchor,\n  Asset: () => Asset,\n  AssetPattern: () => AssetPattern,\n  AuthCommitteeHotCert: () => AuthCommitteeHotCert,\n  AuxData: () => AuxData,\n  BigInt: () => BigInt,\n  Block: () => Block,\n  BlockBody: () => BlockBody,\n  BlockHeader: () => BlockHeader,\n  Certificate: () => Certificate,\n  Collateral: () => Collateral,\n  Constr: () => Constr,\n  CostModel: () => CostModel,\n  CostModels: () => CostModels,\n  DRep: () => DRep,\n  Datum: () => Datum,\n  EvalError: () => EvalError,\n  EvalTrace: () => EvalTrace,\n  ExPrices: () => ExPrices,\n  ExUnits: () => ExUnits,\n  GenesisKeyDelegationCert: () => GenesisKeyDelegationCert,\n  Metadata: () => Metadata,\n  Metadatum: () => Metadatum,\n  MetadatumArray: () => MetadatumArray,\n  MetadatumMap: () => MetadatumMap,\n  MetadatumPair: () => MetadatumPair,\n  MirCert: () => MirCert,\n  MirSource: () => MirSource,\n  MirTarget: () => MirTarget,\n  Multiasset: () => Multiasset,\n  NativeScript: () => NativeScript,\n  NativeScriptList: () => NativeScriptList,\n  PParams: () => PParams,\n  PlutusData: () => PlutusData,\n  PlutusDataArray: () => PlutusDataArray,\n  PlutusDataMap: () => PlutusDataMap,\n  PlutusDataPair: () => PlutusDataPair,\n  PoolMetadata: () => PoolMetadata,\n  PoolRegistrationCert: () => PoolRegistrationCert,\n  PoolRetirementCert: () => PoolRetirementCert,\n  ProtocolVersion: () => ProtocolVersion,\n  RationalNumber: () => RationalNumber,\n  Redeemer: () => Redeemer,\n  RedeemerPurpose: () => RedeemerPurpose,\n  RegCert: () => RegCert,\n  RegDRepCert: () => RegDRepCert,\n  Relay: () => Relay,\n  ResignCommitteeColdCert: () => ResignCommitteeColdCert,\n  Script: () => Script,\n  ScriptNOfK: () => ScriptNOfK,\n  StakeCredential: () => StakeCredential,\n  StakeDelegationCert: () => StakeDelegationCert,\n  StakeRegDelegCert: () => StakeRegDelegCert,\n  StakeVoteDelegCert: () => StakeVoteDelegCert,\n  StakeVoteRegDelegCert: () => StakeVoteRegDelegCert,\n  Tx: () => Tx,\n  TxEval: () => TxEval,\n  TxInput: () => TxInput,\n  TxOutput: () => TxOutput,\n  TxOutputPattern: () => TxOutputPattern,\n  TxPattern: () => TxPattern,\n  TxValidity: () => TxValidity,\n  UnRegCert: () => UnRegCert,\n  UnRegDRepCert: () => UnRegDRepCert,\n  UpdateDRepCert: () => UpdateDRepCert,\n  VKeyWitness: () => VKeyWitness,\n  VoteDelegCert: () => VoteDelegCert,\n  VoteRegDelegCert: () => VoteRegDelegCert,\n  Withdrawal: () => Withdrawal,\n  WitnessSet: () => WitnessSet\n});\n\nvar RedeemerPurpose = /* @__PURE__ */ ((RedeemerPurpose2) => {\n  RedeemerPurpose2[RedeemerPurpose2[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n  RedeemerPurpose2[RedeemerPurpose2[\"SPEND\"] = 1] = \"SPEND\";\n  RedeemerPurpose2[RedeemerPurpose2[\"MINT\"] = 2] = \"MINT\";\n  RedeemerPurpose2[RedeemerPurpose2[\"CERT\"] = 3] = \"CERT\";\n  RedeemerPurpose2[RedeemerPurpose2[\"REWARD\"] = 4] = \"REWARD\";\n  RedeemerPurpose2[RedeemerPurpose2[\"VOTE\"] = 5] = \"VOTE\";\n  RedeemerPurpose2[RedeemerPurpose2[\"PROPOSE\"] = 6] = \"PROPOSE\";\n  return RedeemerPurpose2;\n})(RedeemerPurpose || {});\n_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(RedeemerPurpose, \"utxorpc.v1alpha.cardano.RedeemerPurpose\", [\n  { no: 0, name: \"REDEEMER_PURPOSE_UNSPECIFIED\" },\n  { no: 1, name: \"REDEEMER_PURPOSE_SPEND\" },\n  { no: 2, name: \"REDEEMER_PURPOSE_MINT\" },\n  { no: 3, name: \"REDEEMER_PURPOSE_CERT\" },\n  { no: 4, name: \"REDEEMER_PURPOSE_REWARD\" },\n  { no: 5, name: \"REDEEMER_PURPOSE_VOTE\" },\n  { no: 6, name: \"REDEEMER_PURPOSE_PROPOSE\" }\n]);\nvar MirSource = /* @__PURE__ */ ((MirSource2) => {\n  MirSource2[MirSource2[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n  MirSource2[MirSource2[\"RESERVES\"] = 1] = \"RESERVES\";\n  MirSource2[MirSource2[\"TREASURY\"] = 2] = \"TREASURY\";\n  return MirSource2;\n})(MirSource || {});\n_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(MirSource, \"utxorpc.v1alpha.cardano.MirSource\", [\n  { no: 0, name: \"MIR_SOURCE_UNSPECIFIED\" },\n  { no: 1, name: \"MIR_SOURCE_RESERVES\" },\n  { no: 2, name: \"MIR_SOURCE_TREASURY\" }\n]);\nvar _Redeemer = class _Redeemer extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Purpose of the redeemer.\n     *\n     * @generated from field: utxorpc.v1alpha.cardano.RedeemerPurpose purpose = 1;\n     */\n    this.purpose = 0 /* UNSPECIFIED */;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Redeemer().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Redeemer().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Redeemer().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Redeemer, a, b);\n  }\n};\n_Redeemer.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Redeemer.typeName = \"utxorpc.v1alpha.cardano.Redeemer\";\n_Redeemer.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"purpose\", kind: \"enum\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(RedeemerPurpose) },\n  { no: 2, name: \"payload\", kind: \"message\", T: PlutusData }\n]);\nvar Redeemer = _Redeemer;\nvar _TxInput = class _TxInput extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Hash of the previous transaction.\n     *\n     * @generated from field: bytes tx_hash = 1;\n     */\n    this.txHash = new Uint8Array(0);\n    /**\n     * Index of the output in the previous transaction.\n     *\n     * @generated from field: uint32 output_index = 2;\n     */\n    this.outputIndex = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxInput().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxInput().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxInput().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxInput, a, b);\n  }\n};\n_TxInput.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxInput.typeName = \"utxorpc.v1alpha.cardano.TxInput\";\n_TxInput.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"tx_hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"output_index\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  },\n  { no: 3, name: \"as_output\", kind: \"message\", T: TxOutput },\n  { no: 4, name: \"redeemer\", kind: \"message\", T: Redeemer }\n]);\nvar TxInput = _TxInput;\nvar _TxOutput = class _TxOutput extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Address receiving the output.\n     *\n     * @generated from field: bytes address = 1;\n     */\n    this.address = new Uint8Array(0);\n    /**\n     * Amount of ADA in the output.\n     *\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Additional native (non-ADA) assets in the output.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Multiasset assets = 3;\n     */\n    this.assets = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxOutput().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxOutput().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxOutput().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxOutput, a, b);\n  }\n};\n_TxOutput.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxOutput.typeName = \"utxorpc.v1alpha.cardano.TxOutput\";\n_TxOutput.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"address\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 3, name: \"assets\", kind: \"message\", T: Multiasset, repeated: true },\n  { no: 4, name: \"datum\", kind: \"message\", T: Datum },\n  { no: 5, name: \"script\", kind: \"message\", T: Script }\n]);\nvar TxOutput = _TxOutput;\nvar _Datum = class _Datum extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Hash of this datum as seen on-chain\n     *\n     * @generated from field: bytes hash = 1;\n     */\n    this.hash = new Uint8Array(0);\n    /**\n     * Original cbor-encoded data as seen on-chain\n     *\n     * @generated from field: bytes original_cbor = 3;\n     */\n    this.originalCbor = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Datum().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Datum().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Datum().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Datum, a, b);\n  }\n};\n_Datum.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Datum.typeName = \"utxorpc.v1alpha.cardano.Datum\";\n_Datum.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 2, name: \"payload\", kind: \"message\", T: PlutusData },\n  {\n    no: 3,\n    name: \"original_cbor\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar Datum = _Datum;\nvar _Asset = class _Asset extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Name of the custom asset.\n     *\n     * @generated from field: bytes name = 1;\n     */\n    this.name = new Uint8Array(0);\n    /**\n     * Quantity of the custom asset in case of an output.\n     *\n     * @generated from field: uint64 output_coin = 2;\n     */\n    this.outputCoin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Quantity of the custom asset in case of a mint.\n     *\n     * @generated from field: int64 mint_coin = 3;\n     */\n    this.mintCoin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Asset().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Asset().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Asset().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Asset, a, b);\n  }\n};\n_Asset.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Asset.typeName = \"utxorpc.v1alpha.cardano.Asset\";\n_Asset.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"name\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"output_coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 3,\n    name: \"mint_coin\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }\n]);\nvar Asset = _Asset;\nvar _Multiasset = class _Multiasset extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Policy ID governing the custom assets.\n     *\n     * @generated from field: bytes policy_id = 1;\n     */\n    this.policyId = new Uint8Array(0);\n    /**\n     * List of custom assets.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Asset assets = 2;\n     */\n    this.assets = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Multiasset().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Multiasset().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Multiasset().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Multiasset, a, b);\n  }\n};\n_Multiasset.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Multiasset.typeName = \"utxorpc.v1alpha.cardano.Multiasset\";\n_Multiasset.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"policy_id\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 2, name: \"assets\", kind: \"message\", T: Asset, repeated: true },\n  { no: 3, name: \"redeemer\", kind: \"message\", T: Redeemer }\n]);\nvar Multiasset = _Multiasset;\nvar _TxValidity = class _TxValidity extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Start of the validity interval.\n     *\n     * @generated from field: uint64 start = 1;\n     */\n    this.start = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * End of the validity interval (TTL: Time to Live).\n     *\n     * @generated from field: uint64 ttl = 2;\n     */\n    this.ttl = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxValidity().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxValidity().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxValidity().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxValidity, a, b);\n  }\n};\n_TxValidity.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxValidity.typeName = \"utxorpc.v1alpha.cardano.TxValidity\";\n_TxValidity.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"start\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"ttl\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar TxValidity = _TxValidity;\nvar _Collateral = class _Collateral extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Collateral inputs for the transaction.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput collateral = 1;\n     */\n    this.collateral = [];\n    /**\n     * Total amount of collateral.\n     *\n     * @generated from field: uint64 total_collateral = 3;\n     */\n    this.totalCollateral = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Collateral().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Collateral().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Collateral().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Collateral, a, b);\n  }\n};\n_Collateral.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Collateral.typeName = \"utxorpc.v1alpha.cardano.Collateral\";\n_Collateral.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"collateral\", kind: \"message\", T: TxInput, repeated: true },\n  { no: 2, name: \"collateral_return\", kind: \"message\", T: TxOutput },\n  {\n    no: 3,\n    name: \"total_collateral\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar Collateral = _Collateral;\nvar _Withdrawal = class _Withdrawal extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Address of the reward account.\n     *\n     * @generated from field: bytes reward_account = 1;\n     */\n    this.rewardAccount = new Uint8Array(0);\n    /**\n     * Amount of ADA withdrawn.\n     *\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Withdrawal().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Withdrawal().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Withdrawal().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Withdrawal, a, b);\n  }\n};\n_Withdrawal.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Withdrawal.typeName = \"utxorpc.v1alpha.cardano.Withdrawal\";\n_Withdrawal.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"reward_account\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 3, name: \"redeemer\", kind: \"message\", T: Redeemer }\n]);\nvar Withdrawal = _Withdrawal;\nvar _WitnessSet = class _WitnessSet extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of VKey witnesses.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.VKeyWitness vkeywitness = 1;\n     */\n    this.vkeywitness = [];\n    /**\n     * List of scripts.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Script script = 2;\n     */\n    this.script = [];\n    /**\n     * List of Plutus data elements associated with the transaction.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData plutus_datums = 3;\n     */\n    this.plutusDatums = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WitnessSet().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WitnessSet().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WitnessSet().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WitnessSet, a, b);\n  }\n};\n_WitnessSet.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WitnessSet.typeName = \"utxorpc.v1alpha.cardano.WitnessSet\";\n_WitnessSet.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"vkeywitness\", kind: \"message\", T: VKeyWitness, repeated: true },\n  { no: 2, name: \"script\", kind: \"message\", T: Script, repeated: true },\n  { no: 3, name: \"plutus_datums\", kind: \"message\", T: PlutusData, repeated: true }\n]);\nvar WitnessSet = _WitnessSet;\nvar _AuxData = class _AuxData extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of auxiliary metadata elements.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Metadata metadata = 1;\n     */\n    this.metadata = [];\n    /**\n     * List of auxiliary scripts.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Script scripts = 2;\n     */\n    this.scripts = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AuxData().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AuxData().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AuxData().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AuxData, a, b);\n  }\n};\n_AuxData.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AuxData.typeName = \"utxorpc.v1alpha.cardano.AuxData\";\n_AuxData.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"metadata\", kind: \"message\", T: Metadata, repeated: true },\n  { no: 2, name: \"scripts\", kind: \"message\", T: Script, repeated: true }\n]);\nvar AuxData = _AuxData;\nvar _Tx = class _Tx extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transaction inputs\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput inputs = 1;\n     */\n    this.inputs = [];\n    /**\n     * List of transaction outputs\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.TxOutput outputs = 2;\n     */\n    this.outputs = [];\n    /**\n     * List of certificates\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Certificate certificates = 3;\n     */\n    this.certificates = [];\n    /**\n     * List of withdrawals\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Withdrawal withdrawals = 4;\n     */\n    this.withdrawals = [];\n    /**\n     * List of minted custom assets\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Multiasset mint = 5;\n     */\n    this.mint = [];\n    /**\n     * List of reference inputs\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.TxInput reference_inputs = 6;\n     */\n    this.referenceInputs = [];\n    /**\n     * Transaction fee in ADA\n     *\n     * @generated from field: uint64 fee = 9;\n     */\n    this.fee = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Flag indicating whether the transaction was successful\n     *\n     * @generated from field: bool successful = 11;\n     */\n    this.successful = false;\n    /**\n     * Hash of the transaction that serves as main identifier\n     *\n     * @generated from field: bytes hash = 13;\n     */\n    this.hash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Tx().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Tx().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Tx().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Tx, a, b);\n  }\n};\n_Tx.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Tx.typeName = \"utxorpc.v1alpha.cardano.Tx\";\n_Tx.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"inputs\", kind: \"message\", T: TxInput, repeated: true },\n  { no: 2, name: \"outputs\", kind: \"message\", T: TxOutput, repeated: true },\n  { no: 3, name: \"certificates\", kind: \"message\", T: Certificate, repeated: true },\n  { no: 4, name: \"withdrawals\", kind: \"message\", T: Withdrawal, repeated: true },\n  { no: 5, name: \"mint\", kind: \"message\", T: Multiasset, repeated: true },\n  { no: 6, name: \"reference_inputs\", kind: \"message\", T: TxInput, repeated: true },\n  { no: 7, name: \"witnesses\", kind: \"message\", T: WitnessSet },\n  { no: 8, name: \"collateral\", kind: \"message\", T: Collateral },\n  {\n    no: 9,\n    name: \"fee\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 10, name: \"validity\", kind: \"message\", T: TxValidity },\n  {\n    no: 11,\n    name: \"successful\",\n    kind: \"scalar\",\n    T: 8\n    /* ScalarType.BOOL */\n  },\n  { no: 12, name: \"auxiliary\", kind: \"message\", T: AuxData },\n  {\n    no: 13,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar Tx = _Tx;\nvar _BlockHeader = class _BlockHeader extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Slot number.\n     *\n     * @generated from field: uint64 slot = 1;\n     */\n    this.slot = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Block hash.\n     *\n     * @generated from field: bytes hash = 2;\n     */\n    this.hash = new Uint8Array(0);\n    /**\n     * Block height.\n     *\n     * @generated from field: uint64 height = 3;\n     */\n    this.height = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _BlockHeader().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _BlockHeader().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _BlockHeader().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_BlockHeader, a, b);\n  }\n};\n_BlockHeader.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_BlockHeader.typeName = \"utxorpc.v1alpha.cardano.BlockHeader\";\n_BlockHeader.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"slot\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"height\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar BlockHeader = _BlockHeader;\nvar _BlockBody = class _BlockBody extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transactions.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Tx tx = 1;\n     */\n    this.tx = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _BlockBody().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _BlockBody().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _BlockBody().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_BlockBody, a, b);\n  }\n};\n_BlockBody.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_BlockBody.typeName = \"utxorpc.v1alpha.cardano.BlockBody\";\n_BlockBody.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"tx\", kind: \"message\", T: Tx, repeated: true }\n]);\nvar BlockBody = _BlockBody;\nvar _Block = class _Block extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Block().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Block().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Block().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Block, a, b);\n  }\n};\n_Block.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Block.typeName = \"utxorpc.v1alpha.cardano.Block\";\n_Block.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"header\", kind: \"message\", T: BlockHeader },\n  { no: 2, name: \"body\", kind: \"message\", T: BlockBody }\n]);\nvar Block = _Block;\nvar _VKeyWitness = class _VKeyWitness extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Verification key.\n     *\n     * @generated from field: bytes vkey = 1;\n     */\n    this.vkey = new Uint8Array(0);\n    /**\n     * Signature generated using the associated private key.\n     *\n     * @generated from field: bytes signature = 2;\n     */\n    this.signature = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _VKeyWitness().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _VKeyWitness().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _VKeyWitness().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_VKeyWitness, a, b);\n  }\n};\n_VKeyWitness.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_VKeyWitness.typeName = \"utxorpc.v1alpha.cardano.VKeyWitness\";\n_VKeyWitness.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"vkey\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"signature\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar VKeyWitness = _VKeyWitness;\nvar _NativeScript = class _NativeScript extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.NativeScript.native_script\n     */\n    this.nativeScript = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _NativeScript().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _NativeScript().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _NativeScript().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_NativeScript, a, b);\n  }\n};\n_NativeScript.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_NativeScript.typeName = \"utxorpc.v1alpha.cardano.NativeScript\";\n_NativeScript.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"script_pubkey\", kind: \"scalar\", T: 12, oneof: \"native_script\" },\n  { no: 2, name: \"script_all\", kind: \"message\", T: NativeScriptList, oneof: \"native_script\" },\n  { no: 3, name: \"script_any\", kind: \"message\", T: NativeScriptList, oneof: \"native_script\" },\n  { no: 4, name: \"script_n_of_k\", kind: \"message\", T: ScriptNOfK, oneof: \"native_script\" },\n  { no: 5, name: \"invalid_before\", kind: \"scalar\", T: 4, oneof: \"native_script\" },\n  { no: 6, name: \"invalid_hereafter\", kind: \"scalar\", T: 4, oneof: \"native_script\" }\n]);\nvar NativeScript = _NativeScript;\nvar _NativeScriptList = class _NativeScriptList extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of native scripts.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.NativeScript items = 1;\n     */\n    this.items = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _NativeScriptList().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _NativeScriptList().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _NativeScriptList().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_NativeScriptList, a, b);\n  }\n};\n_NativeScriptList.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_NativeScriptList.typeName = \"utxorpc.v1alpha.cardano.NativeScriptList\";\n_NativeScriptList.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: NativeScript, repeated: true }\n]);\nvar NativeScriptList = _NativeScriptList;\nvar _ScriptNOfK = class _ScriptNOfK extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The number of required satisfied scripts.\n     *\n     * @generated from field: uint32 k = 1;\n     */\n    this.k = 0;\n    /**\n     * List of native scripts.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.NativeScript scripts = 2;\n     */\n    this.scripts = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ScriptNOfK().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ScriptNOfK().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ScriptNOfK().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ScriptNOfK, a, b);\n  }\n};\n_ScriptNOfK.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ScriptNOfK.typeName = \"utxorpc.v1alpha.cardano.ScriptNOfK\";\n_ScriptNOfK.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"k\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  },\n  { no: 2, name: \"scripts\", kind: \"message\", T: NativeScript, repeated: true }\n]);\nvar ScriptNOfK = _ScriptNOfK;\nvar _Constr = class _Constr extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint32 tag = 1;\n     */\n    this.tag = 0;\n    /**\n     * @generated from field: uint64 any_constructor = 2;\n     */\n    this.anyConstructor = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData fields = 3;\n     */\n    this.fields = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Constr().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Constr().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Constr().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Constr, a, b);\n  }\n};\n_Constr.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Constr.typeName = \"utxorpc.v1alpha.cardano.Constr\";\n_Constr.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"tag\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  },\n  {\n    no: 2,\n    name: \"any_constructor\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 3, name: \"fields\", kind: \"message\", T: PlutusData, repeated: true }\n]);\nvar Constr = _Constr;\nvar _BigInt = class _BigInt extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.BigInt.big_int\n     */\n    this.bigInt = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _BigInt().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _BigInt().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _BigInt().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_BigInt, a, b);\n  }\n};\n_BigInt.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_BigInt.typeName = \"utxorpc.v1alpha.cardano.BigInt\";\n_BigInt.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"int\", kind: \"scalar\", T: 3, oneof: \"big_int\" },\n  { no: 2, name: \"big_u_int\", kind: \"scalar\", T: 12, oneof: \"big_int\" },\n  { no: 3, name: \"big_n_int\", kind: \"scalar\", T: 12, oneof: \"big_int\" }\n]);\nvar BigInt = _BigInt;\nvar _PlutusDataPair = class _PlutusDataPair extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PlutusDataPair().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PlutusDataPair().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PlutusDataPair().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PlutusDataPair, a, b);\n  }\n};\n_PlutusDataPair.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PlutusDataPair.typeName = \"utxorpc.v1alpha.cardano.PlutusDataPair\";\n_PlutusDataPair.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"key\", kind: \"message\", T: PlutusData },\n  { no: 2, name: \"value\", kind: \"message\", T: PlutusData }\n]);\nvar PlutusDataPair = _PlutusDataPair;\nvar _PlutusData = class _PlutusData extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.PlutusData.plutus_data\n     */\n    this.plutusData = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PlutusData().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PlutusData().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PlutusData().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PlutusData, a, b);\n  }\n};\n_PlutusData.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PlutusData.typeName = \"utxorpc.v1alpha.cardano.PlutusData\";\n_PlutusData.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 2, name: \"constr\", kind: \"message\", T: Constr, oneof: \"plutus_data\" },\n  { no: 3, name: \"map\", kind: \"message\", T: PlutusDataMap, oneof: \"plutus_data\" },\n  { no: 4, name: \"big_int\", kind: \"message\", T: BigInt, oneof: \"plutus_data\" },\n  { no: 5, name: \"bounded_bytes\", kind: \"scalar\", T: 12, oneof: \"plutus_data\" },\n  { no: 6, name: \"array\", kind: \"message\", T: PlutusDataArray, oneof: \"plutus_data\" }\n]);\nvar PlutusData = _PlutusData;\nvar _PlutusDataMap = class _PlutusDataMap extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of key-value pairs.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusDataPair pairs = 1;\n     */\n    this.pairs = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PlutusDataMap().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PlutusDataMap().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PlutusDataMap().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PlutusDataMap, a, b);\n  }\n};\n_PlutusDataMap.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PlutusDataMap.typeName = \"utxorpc.v1alpha.cardano.PlutusDataMap\";\n_PlutusDataMap.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"pairs\", kind: \"message\", T: PlutusDataPair, repeated: true }\n]);\nvar PlutusDataMap = _PlutusDataMap;\nvar _PlutusDataArray = class _PlutusDataArray extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of Plutus data items.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.PlutusData items = 1;\n     */\n    this.items = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PlutusDataArray().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PlutusDataArray().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PlutusDataArray().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PlutusDataArray, a, b);\n  }\n};\n_PlutusDataArray.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PlutusDataArray.typeName = \"utxorpc.v1alpha.cardano.PlutusDataArray\";\n_PlutusDataArray.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: PlutusData, repeated: true }\n]);\nvar PlutusDataArray = _PlutusDataArray;\nvar _Script = class _Script extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.Script.script\n     */\n    this.script = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Script().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Script().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Script().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Script, a, b);\n  }\n};\n_Script.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Script.typeName = \"utxorpc.v1alpha.cardano.Script\";\n_Script.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"native\", kind: \"message\", T: NativeScript, oneof: \"script\" },\n  { no: 2, name: \"plutus_v1\", kind: \"scalar\", T: 12, oneof: \"script\" },\n  { no: 3, name: \"plutus_v2\", kind: \"scalar\", T: 12, oneof: \"script\" },\n  { no: 4, name: \"plutus_v3\", kind: \"scalar\", T: 12, oneof: \"script\" }\n]);\nvar Script = _Script;\nvar _Metadatum = class _Metadatum extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.Metadatum.metadatum\n     */\n    this.metadatum = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Metadatum().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Metadatum().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Metadatum().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Metadatum, a, b);\n  }\n};\n_Metadatum.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Metadatum.typeName = \"utxorpc.v1alpha.cardano.Metadatum\";\n_Metadatum.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"int\", kind: \"scalar\", T: 3, oneof: \"metadatum\" },\n  { no: 2, name: \"bytes\", kind: \"scalar\", T: 12, oneof: \"metadatum\" },\n  { no: 3, name: \"text\", kind: \"scalar\", T: 9, oneof: \"metadatum\" },\n  { no: 4, name: \"array\", kind: \"message\", T: MetadatumArray, oneof: \"metadatum\" },\n  { no: 5, name: \"map\", kind: \"message\", T: MetadatumMap, oneof: \"metadatum\" }\n]);\nvar Metadatum = _Metadatum;\nvar _MetadatumArray = class _MetadatumArray extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Metadatum items = 1;\n     */\n    this.items = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _MetadatumArray().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _MetadatumArray().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _MetadatumArray().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_MetadatumArray, a, b);\n  }\n};\n_MetadatumArray.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_MetadatumArray.typeName = \"utxorpc.v1alpha.cardano.MetadatumArray\";\n_MetadatumArray.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: Metadatum, repeated: true }\n]);\nvar MetadatumArray = _MetadatumArray;\nvar _MetadatumMap = class _MetadatumMap extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.MetadatumPair pairs = 1;\n     */\n    this.pairs = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _MetadatumMap().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _MetadatumMap().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _MetadatumMap().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_MetadatumMap, a, b);\n  }\n};\n_MetadatumMap.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_MetadatumMap.typeName = \"utxorpc.v1alpha.cardano.MetadatumMap\";\n_MetadatumMap.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"pairs\", kind: \"message\", T: MetadatumPair, repeated: true }\n]);\nvar MetadatumMap = _MetadatumMap;\nvar _MetadatumPair = class _MetadatumPair extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _MetadatumPair().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _MetadatumPair().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _MetadatumPair().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_MetadatumPair, a, b);\n  }\n};\n_MetadatumPair.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_MetadatumPair.typeName = \"utxorpc.v1alpha.cardano.MetadatumPair\";\n_MetadatumPair.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"key\", kind: \"message\", T: Metadatum },\n  { no: 2, name: \"value\", kind: \"message\", T: Metadatum }\n]);\nvar MetadatumPair = _MetadatumPair;\nvar _Metadata = class _Metadata extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 label = 1;\n     */\n    this.label = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Metadata().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Metadata().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Metadata().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Metadata, a, b);\n  }\n};\n_Metadata.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Metadata.typeName = \"utxorpc.v1alpha.cardano.Metadata\";\n_Metadata.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"label\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 2, name: \"value\", kind: \"message\", T: Metadatum }\n]);\nvar Metadata = _Metadata;\nvar _StakeCredential = class _StakeCredential extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.StakeCredential.stake_credential\n     */\n    this.stakeCredential = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _StakeCredential().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _StakeCredential().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _StakeCredential().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_StakeCredential, a, b);\n  }\n};\n_StakeCredential.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_StakeCredential.typeName = \"utxorpc.v1alpha.cardano.StakeCredential\";\n_StakeCredential.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"addr_key_hash\", kind: \"scalar\", T: 12, oneof: \"stake_credential\" },\n  { no: 2, name: \"script_hash\", kind: \"scalar\", T: 12, oneof: \"stake_credential\" }\n]);\nvar StakeCredential = _StakeCredential;\nvar _RationalNumber = class _RationalNumber extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: int32 numerator = 1;\n     */\n    this.numerator = 0;\n    /**\n     * @generated from field: uint32 denominator = 2;\n     */\n    this.denominator = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _RationalNumber().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _RationalNumber().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _RationalNumber().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_RationalNumber, a, b);\n  }\n};\n_RationalNumber.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_RationalNumber.typeName = \"utxorpc.v1alpha.cardano.RationalNumber\";\n_RationalNumber.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"numerator\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  },\n  {\n    no: 2,\n    name: \"denominator\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }\n]);\nvar RationalNumber = _RationalNumber;\nvar _Relay = class _Relay extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: bytes ip_v4 = 1;\n     */\n    this.ipV4 = new Uint8Array(0);\n    /**\n     * @generated from field: bytes ip_v6 = 2;\n     */\n    this.ipV6 = new Uint8Array(0);\n    /**\n     * @generated from field: string dns_name = 3;\n     */\n    this.dnsName = \"\";\n    /**\n     * @generated from field: uint32 port = 4;\n     */\n    this.port = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Relay().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Relay().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Relay().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Relay, a, b);\n  }\n};\n_Relay.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Relay.typeName = \"utxorpc.v1alpha.cardano.Relay\";\n_Relay.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"ip_v4\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"ip_v6\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"dns_name\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  },\n  {\n    no: 4,\n    name: \"port\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }\n]);\nvar Relay = _Relay;\nvar _PoolMetadata = class _PoolMetadata extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: string url = 1;\n     */\n    this.url = \"\";\n    /**\n     * @generated from field: bytes hash = 2;\n     */\n    this.hash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PoolMetadata().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PoolMetadata().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PoolMetadata().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PoolMetadata, a, b);\n  }\n};\n_PoolMetadata.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PoolMetadata.typeName = \"utxorpc.v1alpha.cardano.PoolMetadata\";\n_PoolMetadata.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  },\n  {\n    no: 2,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar PoolMetadata = _PoolMetadata;\nvar _Certificate = class _Certificate extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.Certificate.certificate\n     */\n    this.certificate = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Certificate().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Certificate().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Certificate().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Certificate, a, b);\n  }\n};\n_Certificate.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Certificate.typeName = \"utxorpc.v1alpha.cardano.Certificate\";\n_Certificate.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_registration\", kind: \"message\", T: StakeCredential, oneof: \"certificate\" },\n  { no: 2, name: \"stake_deregistration\", kind: \"message\", T: StakeCredential, oneof: \"certificate\" },\n  { no: 3, name: \"stake_delegation\", kind: \"message\", T: StakeDelegationCert, oneof: \"certificate\" },\n  { no: 4, name: \"pool_registration\", kind: \"message\", T: PoolRegistrationCert, oneof: \"certificate\" },\n  { no: 5, name: \"pool_retirement\", kind: \"message\", T: PoolRetirementCert, oneof: \"certificate\" },\n  { no: 6, name: \"genesis_key_delegation\", kind: \"message\", T: GenesisKeyDelegationCert, oneof: \"certificate\" },\n  { no: 7, name: \"mir_cert\", kind: \"message\", T: MirCert, oneof: \"certificate\" },\n  { no: 8, name: \"reg_cert\", kind: \"message\", T: RegCert, oneof: \"certificate\" },\n  { no: 9, name: \"unreg_cert\", kind: \"message\", T: UnRegCert, oneof: \"certificate\" },\n  { no: 10, name: \"vote_deleg_cert\", kind: \"message\", T: VoteDelegCert, oneof: \"certificate\" },\n  { no: 11, name: \"stake_vote_deleg_cert\", kind: \"message\", T: StakeVoteDelegCert, oneof: \"certificate\" },\n  { no: 12, name: \"stake_reg_deleg_cert\", kind: \"message\", T: StakeRegDelegCert, oneof: \"certificate\" },\n  { no: 13, name: \"vote_reg_deleg_cert\", kind: \"message\", T: VoteRegDelegCert, oneof: \"certificate\" },\n  { no: 14, name: \"stake_vote_reg_deleg_cert\", kind: \"message\", T: StakeVoteRegDelegCert, oneof: \"certificate\" },\n  { no: 15, name: \"auth_committee_hot_cert\", kind: \"message\", T: AuthCommitteeHotCert, oneof: \"certificate\" },\n  { no: 16, name: \"resign_committee_cold_cert\", kind: \"message\", T: ResignCommitteeColdCert, oneof: \"certificate\" },\n  { no: 17, name: \"reg_drep_cert\", kind: \"message\", T: RegDRepCert, oneof: \"certificate\" },\n  { no: 18, name: \"unreg_drep_cert\", kind: \"message\", T: UnRegDRepCert, oneof: \"certificate\" },\n  { no: 19, name: \"update_drep_cert\", kind: \"message\", T: UpdateDRepCert, oneof: \"certificate\" },\n  { no: 100, name: \"redeemer\", kind: \"message\", T: Redeemer }\n]);\nvar Certificate = _Certificate;\nvar _StakeDelegationCert = class _StakeDelegationCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Pool key hash.\n     *\n     * @generated from field: bytes pool_keyhash = 2;\n     */\n    this.poolKeyhash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _StakeDelegationCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _StakeDelegationCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _StakeDelegationCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_StakeDelegationCert, a, b);\n  }\n};\n_StakeDelegationCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_StakeDelegationCert.typeName = \"utxorpc.v1alpha.cardano.StakeDelegationCert\";\n_StakeDelegationCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"pool_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar StakeDelegationCert = _StakeDelegationCert;\nvar _PoolRegistrationCert = class _PoolRegistrationCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Operator key hash.\n     *\n     * @generated from field: bytes operator = 1;\n     */\n    this.operator = new Uint8Array(0);\n    /**\n     * VRF key hash.\n     *\n     * @generated from field: bytes vrf_keyhash = 2;\n     */\n    this.vrfKeyhash = new Uint8Array(0);\n    /**\n     * Pledge amount.\n     *\n     * @generated from field: uint64 pledge = 3;\n     */\n    this.pledge = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Pool cost.\n     *\n     * @generated from field: uint64 cost = 4;\n     */\n    this.cost = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Reward account.\n     *\n     * @generated from field: bytes reward_account = 6;\n     */\n    this.rewardAccount = new Uint8Array(0);\n    /**\n     * List of pool owner key hashes.\n     *\n     * @generated from field: repeated bytes pool_owners = 7;\n     */\n    this.poolOwners = [];\n    /**\n     * List of relays.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.cardano.Relay relays = 8;\n     */\n    this.relays = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PoolRegistrationCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PoolRegistrationCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PoolRegistrationCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PoolRegistrationCert, a, b);\n  }\n};\n_PoolRegistrationCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PoolRegistrationCert.typeName = \"utxorpc.v1alpha.cardano.PoolRegistrationCert\";\n_PoolRegistrationCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"operator\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"vrf_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"pledge\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 4,\n    name: \"cost\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 5, name: \"margin\", kind: \"message\", T: RationalNumber },\n  {\n    no: 6,\n    name: \"reward_account\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 7, name: \"pool_owners\", kind: \"scalar\", T: 12, repeated: true },\n  { no: 8, name: \"relays\", kind: \"message\", T: Relay, repeated: true },\n  { no: 9, name: \"pool_metadata\", kind: \"message\", T: PoolMetadata }\n]);\nvar PoolRegistrationCert = _PoolRegistrationCert;\nvar _PoolRetirementCert = class _PoolRetirementCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Pool key hash.\n     *\n     * @generated from field: bytes pool_keyhash = 1;\n     */\n    this.poolKeyhash = new Uint8Array(0);\n    /**\n     * Retirement epoch.\n     *\n     * @generated from field: uint64 epoch = 2;\n     */\n    this.epoch = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PoolRetirementCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PoolRetirementCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PoolRetirementCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PoolRetirementCert, a, b);\n  }\n};\n_PoolRetirementCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PoolRetirementCert.typeName = \"utxorpc.v1alpha.cardano.PoolRetirementCert\";\n_PoolRetirementCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"pool_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"epoch\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar PoolRetirementCert = _PoolRetirementCert;\nvar _GenesisKeyDelegationCert = class _GenesisKeyDelegationCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Genesis hash.\n     *\n     * @generated from field: bytes genesis_hash = 1;\n     */\n    this.genesisHash = new Uint8Array(0);\n    /**\n     * Genesis delegate hash.\n     *\n     * @generated from field: bytes genesis_delegate_hash = 2;\n     */\n    this.genesisDelegateHash = new Uint8Array(0);\n    /**\n     * VRF key hash.\n     *\n     * @generated from field: bytes vrf_keyhash = 3;\n     */\n    this.vrfKeyhash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _GenesisKeyDelegationCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _GenesisKeyDelegationCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _GenesisKeyDelegationCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_GenesisKeyDelegationCert, a, b);\n  }\n};\n_GenesisKeyDelegationCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_GenesisKeyDelegationCert.typeName = \"utxorpc.v1alpha.cardano.GenesisKeyDelegationCert\";\n_GenesisKeyDelegationCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"genesis_hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"genesis_delegate_hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"vrf_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar GenesisKeyDelegationCert = _GenesisKeyDelegationCert;\nvar _MirTarget = class _MirTarget extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: int64 delta_coin = 2;\n     */\n    this.deltaCoin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _MirTarget().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _MirTarget().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _MirTarget().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_MirTarget, a, b);\n  }\n};\n_MirTarget.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_MirTarget.typeName = \"utxorpc.v1alpha.cardano.MirTarget\";\n_MirTarget.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"delta_coin\",\n    kind: \"scalar\",\n    T: 3\n    /* ScalarType.INT64 */\n  }\n]);\nvar MirTarget = _MirTarget;\nvar _MirCert = class _MirCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: utxorpc.v1alpha.cardano.MirSource from = 1;\n     */\n    this.from = 0 /* UNSPECIFIED */;\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.MirTarget to = 2;\n     */\n    this.to = [];\n    /**\n     * @generated from field: uint64 other_pot = 3;\n     */\n    this.otherPot = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _MirCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _MirCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _MirCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_MirCert, a, b);\n  }\n};\n_MirCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_MirCert.typeName = \"utxorpc.v1alpha.cardano.MirCert\";\n_MirCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"from\", kind: \"enum\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(MirSource) },\n  { no: 2, name: \"to\", kind: \"message\", T: MirTarget, repeated: true },\n  {\n    no: 3,\n    name: \"other_pot\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar MirCert = _MirCert;\nvar _RegCert = class _RegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _RegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _RegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _RegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_RegCert, a, b);\n  }\n};\n_RegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_RegCert.typeName = \"utxorpc.v1alpha.cardano.RegCert\";\n_RegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar RegCert = _RegCert;\nvar _UnRegCert = class _UnRegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _UnRegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _UnRegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _UnRegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_UnRegCert, a, b);\n  }\n};\n_UnRegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_UnRegCert.typeName = \"utxorpc.v1alpha.cardano.UnRegCert\";\n_UnRegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar UnRegCert = _UnRegCert;\nvar _DRep = class _DRep extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.cardano.DRep.drep\n     */\n    this.drep = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _DRep().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _DRep().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _DRep().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_DRep, a, b);\n  }\n};\n_DRep.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_DRep.typeName = \"utxorpc.v1alpha.cardano.DRep\";\n_DRep.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"addr_key_hash\", kind: \"scalar\", T: 12, oneof: \"drep\" },\n  { no: 2, name: \"script_hash\", kind: \"scalar\", T: 12, oneof: \"drep\" },\n  { no: 3, name: \"abstain\", kind: \"scalar\", T: 8, oneof: \"drep\" },\n  { no: 4, name: \"no_confidence\", kind: \"scalar\", T: 8, oneof: \"drep\" }\n]);\nvar DRep = _DRep;\nvar _VoteDelegCert = class _VoteDelegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _VoteDelegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _VoteDelegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _VoteDelegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_VoteDelegCert, a, b);\n  }\n};\n_VoteDelegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_VoteDelegCert.typeName = \"utxorpc.v1alpha.cardano.VoteDelegCert\";\n_VoteDelegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  { no: 2, name: \"drep\", kind: \"message\", T: DRep }\n]);\nvar VoteDelegCert = _VoteDelegCert;\nvar _StakeVoteDelegCert = class _StakeVoteDelegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: bytes pool_keyhash = 2;\n     */\n    this.poolKeyhash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _StakeVoteDelegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _StakeVoteDelegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _StakeVoteDelegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_StakeVoteDelegCert, a, b);\n  }\n};\n_StakeVoteDelegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_StakeVoteDelegCert.typeName = \"utxorpc.v1alpha.cardano.StakeVoteDelegCert\";\n_StakeVoteDelegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"pool_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 3, name: \"drep\", kind: \"message\", T: DRep }\n]);\nvar StakeVoteDelegCert = _StakeVoteDelegCert;\nvar _StakeRegDelegCert = class _StakeRegDelegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: bytes pool_keyhash = 2;\n     */\n    this.poolKeyhash = new Uint8Array(0);\n    /**\n     * @generated from field: uint64 coin = 3;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _StakeRegDelegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _StakeRegDelegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _StakeRegDelegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_StakeRegDelegCert, a, b);\n  }\n};\n_StakeRegDelegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_StakeRegDelegCert.typeName = \"utxorpc.v1alpha.cardano.StakeRegDelegCert\";\n_StakeRegDelegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"pool_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar StakeRegDelegCert = _StakeRegDelegCert;\nvar _VoteRegDelegCert = class _VoteRegDelegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 coin = 3;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _VoteRegDelegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _VoteRegDelegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _VoteRegDelegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_VoteRegDelegCert, a, b);\n  }\n};\n_VoteRegDelegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_VoteRegDelegCert.typeName = \"utxorpc.v1alpha.cardano.VoteRegDelegCert\";\n_VoteRegDelegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  { no: 2, name: \"drep\", kind: \"message\", T: DRep },\n  {\n    no: 3,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar VoteRegDelegCert = _VoteRegDelegCert;\nvar _StakeVoteRegDelegCert = class _StakeVoteRegDelegCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: bytes pool_keyhash = 2;\n     */\n    this.poolKeyhash = new Uint8Array(0);\n    /**\n     * @generated from field: uint64 coin = 4;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _StakeVoteRegDelegCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _StakeVoteRegDelegCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _StakeVoteRegDelegCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_StakeVoteRegDelegCert, a, b);\n  }\n};\n_StakeVoteRegDelegCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_StakeVoteRegDelegCert.typeName = \"utxorpc.v1alpha.cardano.StakeVoteRegDelegCert\";\n_StakeVoteRegDelegCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"stake_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"pool_keyhash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 3, name: \"drep\", kind: \"message\", T: DRep },\n  {\n    no: 4,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar StakeVoteRegDelegCert = _StakeVoteRegDelegCert;\nvar _AuthCommitteeHotCert = class _AuthCommitteeHotCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AuthCommitteeHotCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AuthCommitteeHotCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AuthCommitteeHotCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AuthCommitteeHotCert, a, b);\n  }\n};\n_AuthCommitteeHotCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AuthCommitteeHotCert.typeName = \"utxorpc.v1alpha.cardano.AuthCommitteeHotCert\";\n_AuthCommitteeHotCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"committee_cold_credential\", kind: \"message\", T: StakeCredential },\n  { no: 2, name: \"committee_hot_credential\", kind: \"message\", T: StakeCredential }\n]);\nvar AuthCommitteeHotCert = _AuthCommitteeHotCert;\nvar _Anchor = class _Anchor extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: string url = 1;\n     */\n    this.url = \"\";\n    /**\n     * @generated from field: bytes content_hash = 2;\n     */\n    this.contentHash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _Anchor().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _Anchor().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _Anchor().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_Anchor, a, b);\n  }\n};\n_Anchor.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_Anchor.typeName = \"utxorpc.v1alpha.cardano.Anchor\";\n_Anchor.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"url\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  },\n  {\n    no: 2,\n    name: \"content_hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar Anchor = _Anchor;\nvar _ResignCommitteeColdCert = class _ResignCommitteeColdCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ResignCommitteeColdCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ResignCommitteeColdCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ResignCommitteeColdCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ResignCommitteeColdCert, a, b);\n  }\n};\n_ResignCommitteeColdCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ResignCommitteeColdCert.typeName = \"utxorpc.v1alpha.cardano.ResignCommitteeColdCert\";\n_ResignCommitteeColdCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"committee_cold_credential\", kind: \"message\", T: StakeCredential },\n  { no: 2, name: \"anchor\", kind: \"message\", T: Anchor }\n]);\nvar ResignCommitteeColdCert = _ResignCommitteeColdCert;\nvar _RegDRepCert = class _RegDRepCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _RegDRepCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _RegDRepCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _RegDRepCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_RegDRepCert, a, b);\n  }\n};\n_RegDRepCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_RegDRepCert.typeName = \"utxorpc.v1alpha.cardano.RegDRepCert\";\n_RegDRepCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"drep_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 3, name: \"anchor\", kind: \"message\", T: Anchor }\n]);\nvar RegDRepCert = _RegDRepCert;\nvar _UnRegDRepCert = class _UnRegDRepCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 coin = 2;\n     */\n    this.coin = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _UnRegDRepCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _UnRegDRepCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _UnRegDRepCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_UnRegDRepCert, a, b);\n  }\n};\n_UnRegDRepCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_UnRegDRepCert.typeName = \"utxorpc.v1alpha.cardano.UnRegDRepCert\";\n_UnRegDRepCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"drep_credential\", kind: \"message\", T: StakeCredential },\n  {\n    no: 2,\n    name: \"coin\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar UnRegDRepCert = _UnRegDRepCert;\nvar _UpdateDRepCert = class _UpdateDRepCert extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _UpdateDRepCert().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _UpdateDRepCert().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _UpdateDRepCert().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_UpdateDRepCert, a, b);\n  }\n};\n_UpdateDRepCert.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_UpdateDRepCert.typeName = \"utxorpc.v1alpha.cardano.UpdateDRepCert\";\n_UpdateDRepCert.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"drep_credential\", kind: \"message\", T: StakeCredential },\n  { no: 2, name: \"anchor\", kind: \"message\", T: Anchor }\n]);\nvar UpdateDRepCert = _UpdateDRepCert;\nvar _AddressPattern = class _AddressPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The address should match this exact address value.\n     *\n     * @generated from field: bytes exact_address = 1;\n     */\n    this.exactAddress = new Uint8Array(0);\n    /**\n     * The payment part of the address should match this value.\n     *\n     * @generated from field: bytes payment_part = 2;\n     */\n    this.paymentPart = new Uint8Array(0);\n    /**\n     * The delegation part of the address should match this value.\n     *\n     * @generated from field: bytes delegation_part = 3;\n     */\n    this.delegationPart = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AddressPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AddressPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AddressPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AddressPattern, a, b);\n  }\n};\n_AddressPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AddressPattern.typeName = \"utxorpc.v1alpha.cardano.AddressPattern\";\n_AddressPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"exact_address\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"payment_part\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 3,\n    name: \"delegation_part\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar AddressPattern = _AddressPattern;\nvar _AssetPattern = class _AssetPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The asset should belong to this policy id\n     *\n     * @generated from field: bytes policy_id = 1;\n     */\n    this.policyId = new Uint8Array(0);\n    /**\n     * The asset should present this name\n     *\n     * @generated from field: bytes asset_name = 2;\n     */\n    this.assetName = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AssetPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AssetPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AssetPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AssetPattern, a, b);\n  }\n};\n_AssetPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AssetPattern.typeName = \"utxorpc.v1alpha.cardano.AssetPattern\";\n_AssetPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"policy_id\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"asset_name\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar AssetPattern = _AssetPattern;\nvar _TxOutputPattern = class _TxOutputPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxOutputPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxOutputPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxOutputPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxOutputPattern, a, b);\n  }\n};\n_TxOutputPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxOutputPattern.typeName = \"utxorpc.v1alpha.cardano.TxOutputPattern\";\n_TxOutputPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"address\", kind: \"message\", T: AddressPattern },\n  { no: 2, name: \"asset\", kind: \"message\", T: AssetPattern }\n]);\nvar TxOutputPattern = _TxOutputPattern;\nvar _TxPattern = class _TxPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxPattern, a, b);\n  }\n};\n_TxPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxPattern.typeName = \"utxorpc.v1alpha.cardano.TxPattern\";\n_TxPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"consumes\", kind: \"message\", T: TxOutputPattern },\n  { no: 2, name: \"produces\", kind: \"message\", T: TxOutputPattern },\n  { no: 3, name: \"has_address\", kind: \"message\", T: AddressPattern },\n  { no: 4, name: \"moves_asset\", kind: \"message\", T: AssetPattern },\n  { no: 5, name: \"mints_asset\", kind: \"message\", T: AssetPattern }\n]);\nvar TxPattern = _TxPattern;\nvar _ExUnits = class _ExUnits extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 steps = 1;\n     */\n    this.steps = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * @generated from field: uint64 memory = 2;\n     */\n    this.memory = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ExUnits().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ExUnits().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ExUnits().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ExUnits, a, b);\n  }\n};\n_ExUnits.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ExUnits.typeName = \"utxorpc.v1alpha.cardano.ExUnits\";\n_ExUnits.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"steps\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"memory\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  }\n]);\nvar ExUnits = _ExUnits;\nvar _ExPrices = class _ExPrices extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ExPrices().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ExPrices().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ExPrices().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ExPrices, a, b);\n  }\n};\n_ExPrices.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ExPrices.typeName = \"utxorpc.v1alpha.cardano.ExPrices\";\n_ExPrices.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"steps\", kind: \"message\", T: RationalNumber },\n  { no: 2, name: \"memory\", kind: \"message\", T: RationalNumber }\n]);\nvar ExPrices = _ExPrices;\nvar _ProtocolVersion = class _ProtocolVersion extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint32 major = 1;\n     */\n    this.major = 0;\n    /**\n     * @generated from field: uint32 minor = 2;\n     */\n    this.minor = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ProtocolVersion().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ProtocolVersion().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ProtocolVersion().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ProtocolVersion, a, b);\n  }\n};\n_ProtocolVersion.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ProtocolVersion.typeName = \"utxorpc.v1alpha.cardano.ProtocolVersion\";\n_ProtocolVersion.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"major\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  },\n  {\n    no: 2,\n    name: \"minor\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }\n]);\nvar ProtocolVersion = _ProtocolVersion;\nvar _CostModel = class _CostModel extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: repeated int64 values = 1;\n     */\n    this.values = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _CostModel().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _CostModel().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _CostModel().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_CostModel, a, b);\n  }\n};\n_CostModel.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_CostModel.typeName = \"utxorpc.v1alpha.cardano.CostModel\";\n_CostModel.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"values\", kind: \"scalar\", T: 3, repeated: true }\n]);\nvar CostModel = _CostModel;\nvar _CostModels = class _CostModels extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _CostModels().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _CostModels().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _CostModels().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_CostModels, a, b);\n  }\n};\n_CostModels.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_CostModels.typeName = \"utxorpc.v1alpha.cardano.CostModels\";\n_CostModels.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"plutus_v1\", kind: \"message\", T: CostModel },\n  { no: 2, name: \"plutus_v2\", kind: \"message\", T: CostModel },\n  { no: 3, name: \"plutus_v3\", kind: \"message\", T: CostModel }\n]);\nvar CostModels = _CostModels;\nvar _PParams = class _PParams extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The number of coins per UTXO byte.\n     *\n     * @generated from field: uint64 coins_per_utxo_byte = 1;\n     */\n    this.coinsPerUtxoByte = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The maximum transaction size.\n     *\n     * @generated from field: uint64 max_tx_size = 2;\n     */\n    this.maxTxSize = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The minimum fee coefficient.\n     *\n     * @generated from field: uint64 min_fee_coefficient = 3;\n     */\n    this.minFeeCoefficient = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The minimum fee constant.\n     *\n     * @generated from field: uint64 min_fee_constant = 4;\n     */\n    this.minFeeConstant = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The maximum block body size.\n     *\n     * @generated from field: uint64 max_block_body_size = 5;\n     */\n    this.maxBlockBodySize = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The maximum block header size.\n     *\n     * @generated from field: uint64 max_block_header_size = 6;\n     */\n    this.maxBlockHeaderSize = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The stake key deposit.\n     *\n     * @generated from field: uint64 stake_key_deposit = 7;\n     */\n    this.stakeKeyDeposit = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The pool deposit.\n     *\n     * @generated from field: uint64 pool_deposit = 8;\n     */\n    this.poolDeposit = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The pool retirement epoch bound.\n     *\n     * @generated from field: uint64 pool_retirement_epoch_bound = 9;\n     */\n    this.poolRetirementEpochBound = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The desired number of pools.\n     *\n     * @generated from field: uint64 desired_number_of_pools = 10;\n     */\n    this.desiredNumberOfPools = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The minimum pool cost.\n     *\n     * @generated from field: uint64 min_pool_cost = 14;\n     */\n    this.minPoolCost = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The maximum value size.\n     *\n     * @generated from field: uint64 max_value_size = 16;\n     */\n    this.maxValueSize = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The collateral percentage.\n     *\n     * @generated from field: uint64 collateral_percentage = 17;\n     */\n    this.collateralPercentage = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * The maximum collateral inputs.\n     *\n     * @generated from field: uint64 max_collateral_inputs = 18;\n     */\n    this.maxCollateralInputs = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _PParams().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _PParams().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _PParams().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_PParams, a, b);\n  }\n};\n_PParams.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_PParams.typeName = \"utxorpc.v1alpha.cardano.PParams\";\n_PParams.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"coins_per_utxo_byte\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"max_tx_size\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 3,\n    name: \"min_fee_coefficient\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 4,\n    name: \"min_fee_constant\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 5,\n    name: \"max_block_body_size\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 6,\n    name: \"max_block_header_size\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 7,\n    name: \"stake_key_deposit\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 8,\n    name: \"pool_deposit\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 9,\n    name: \"pool_retirement_epoch_bound\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 10,\n    name: \"desired_number_of_pools\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 11, name: \"pool_influence\", kind: \"message\", T: RationalNumber },\n  { no: 12, name: \"monetary_expansion\", kind: \"message\", T: RationalNumber },\n  { no: 13, name: \"treasury_expansion\", kind: \"message\", T: RationalNumber },\n  {\n    no: 14,\n    name: \"min_pool_cost\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 15, name: \"protocol_version\", kind: \"message\", T: ProtocolVersion },\n  {\n    no: 16,\n    name: \"max_value_size\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 17,\n    name: \"collateral_percentage\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 18,\n    name: \"max_collateral_inputs\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 19, name: \"cost_models\", kind: \"message\", T: CostModels },\n  { no: 20, name: \"prices\", kind: \"message\", T: ExPrices },\n  { no: 21, name: \"max_execution_units_per_transaction\", kind: \"message\", T: ExUnits },\n  { no: 22, name: \"max_execution_units_per_block\", kind: \"message\", T: ExUnits }\n]);\nvar PParams = _PParams;\nvar _EvalError = class _EvalError extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: string msg = 1;\n     */\n    this.msg = \"\";\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _EvalError().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _EvalError().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _EvalError().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_EvalError, a, b);\n  }\n};\n_EvalError.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_EvalError.typeName = \"utxorpc.v1alpha.cardano.EvalError\";\n_EvalError.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"msg\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }\n]);\nvar EvalError = _EvalError;\nvar _EvalTrace = class _EvalTrace extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: string msg = 1;\n     */\n    this.msg = \"\";\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _EvalTrace().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _EvalTrace().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _EvalTrace().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_EvalTrace, a, b);\n  }\n};\n_EvalTrace.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_EvalTrace.typeName = \"utxorpc.v1alpha.cardano.EvalTrace\";\n_EvalTrace.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"msg\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }\n]);\nvar EvalTrace = _EvalTrace;\nvar _TxEval = class _TxEval extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: uint64 fee = 1;\n     */\n    this.fee = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.EvalError errors = 3;\n     */\n    this.errors = [];\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.cardano.EvalTrace traces = 4;\n     */\n    this.traces = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxEval().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxEval().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxEval().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxEval, a, b);\n  }\n};\n_TxEval.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxEval.typeName = \"utxorpc.v1alpha.cardano.TxEval\";\n_TxEval.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"fee\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  { no: 2, name: \"ex_units\", kind: \"message\", T: ExUnits },\n  { no: 3, name: \"errors\", kind: \"message\", T: EvalError, repeated: true },\n  { no: 4, name: \"traces\", kind: \"message\", T: EvalTrace, repeated: true }\n]);\nvar TxEval = _TxEval;\n\n// src/utxorpc/v1alpha/query/query_pb.ts\nvar query_pb_exports = {};\n__export(query_pb_exports, {\n  AnyChainDatum: () => AnyChainDatum,\n  AnyChainParams: () => AnyChainParams,\n  AnyUtxoData: () => AnyUtxoData,\n  AnyUtxoPattern: () => AnyUtxoPattern,\n  ChainPoint: () => ChainPoint,\n  ReadDataRequest: () => ReadDataRequest,\n  ReadDataResponse: () => ReadDataResponse,\n  ReadParamsRequest: () => ReadParamsRequest,\n  ReadParamsResponse: () => ReadParamsResponse,\n  ReadUtxosRequest: () => ReadUtxosRequest,\n  ReadUtxosResponse: () => ReadUtxosResponse,\n  SearchUtxosRequest: () => SearchUtxosRequest,\n  SearchUtxosResponse: () => SearchUtxosResponse,\n  TxoRef: () => TxoRef,\n  UtxoPredicate: () => UtxoPredicate\n});\n\nvar _ChainPoint = class _ChainPoint extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Slot number.\n     *\n     * @generated from field: uint64 slot = 1;\n     */\n    this.slot = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Block hash.\n     *\n     * @generated from field: bytes hash = 2;\n     */\n    this.hash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ChainPoint().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ChainPoint().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ChainPoint().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ChainPoint, a, b);\n  }\n};\n_ChainPoint.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ChainPoint.typeName = \"utxorpc.v1alpha.query.ChainPoint\";\n_ChainPoint.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"slot\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar ChainPoint = _ChainPoint;\nvar _TxoRef = class _TxoRef extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Tx hash.\n     *\n     * @generated from field: bytes hash = 1;\n     */\n    this.hash = new Uint8Array(0);\n    /**\n     * Output index.\n     *\n     * @generated from field: uint32 index = 2;\n     */\n    this.index = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxoRef().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxoRef().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxoRef().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxoRef, a, b);\n  }\n};\n_TxoRef.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxoRef.typeName = \"utxorpc.v1alpha.query.TxoRef\";\n_TxoRef.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"index\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  }\n]);\nvar TxoRef = _TxoRef;\nvar _ReadParamsRequest = class _ReadParamsRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadParamsRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadParamsRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadParamsRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadParamsRequest, a, b);\n  }\n};\n_ReadParamsRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadParamsRequest.typeName = \"utxorpc.v1alpha.query.ReadParamsRequest\";\n_ReadParamsRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar ReadParamsRequest = _ReadParamsRequest;\nvar _AnyChainParams = class _AnyChainParams extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.query.AnyChainParams.params\n     */\n    this.params = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainParams().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainParams().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainParams().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainParams, a, b);\n  }\n};\n_AnyChainParams.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainParams.typeName = \"utxorpc.v1alpha.query.AnyChainParams\";\n_AnyChainParams.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: PParams, oneof: \"params\" }\n]);\nvar AnyChainParams = _AnyChainParams;\nvar _ReadParamsResponse = class _ReadParamsResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadParamsResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadParamsResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadParamsResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadParamsResponse, a, b);\n  }\n};\n_ReadParamsResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadParamsResponse.typeName = \"utxorpc.v1alpha.query.ReadParamsResponse\";\n_ReadParamsResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"values\", kind: \"message\", T: AnyChainParams },\n  { no: 2, name: \"ledger_tip\", kind: \"message\", T: ChainPoint }\n]);\nvar ReadParamsResponse = _ReadParamsResponse;\nvar _AnyUtxoPattern = class _AnyUtxoPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.query.AnyUtxoPattern.utxo_pattern\n     */\n    this.utxoPattern = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyUtxoPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyUtxoPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyUtxoPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyUtxoPattern, a, b);\n  }\n};\n_AnyUtxoPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyUtxoPattern.typeName = \"utxorpc.v1alpha.query.AnyUtxoPattern\";\n_AnyUtxoPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: TxOutputPattern, oneof: \"utxo_pattern\" }\n]);\nvar AnyUtxoPattern = _AnyUtxoPattern;\nvar _UtxoPredicate = class _UtxoPredicate extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Predicate is true if tx doesn't exhibit pattern.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate not = 2;\n     */\n    this.not = [];\n    /**\n     * Predicate is true if utxo exhibits all of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate all_of = 3;\n     */\n    this.allOf = [];\n    /**\n     * Predicate is true if utxo exhibits any of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.UtxoPredicate any_of = 4;\n     */\n    this.anyOf = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _UtxoPredicate().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _UtxoPredicate().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _UtxoPredicate().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_UtxoPredicate, a, b);\n  }\n};\n_UtxoPredicate.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_UtxoPredicate.typeName = \"utxorpc.v1alpha.query.UtxoPredicate\";\n_UtxoPredicate.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"match\", kind: \"message\", T: AnyUtxoPattern },\n  { no: 2, name: \"not\", kind: \"message\", T: _UtxoPredicate, repeated: true },\n  { no: 3, name: \"all_of\", kind: \"message\", T: _UtxoPredicate, repeated: true },\n  { no: 4, name: \"any_of\", kind: \"message\", T: _UtxoPredicate, repeated: true }\n]);\nvar UtxoPredicate = _UtxoPredicate;\nvar _AnyUtxoData = class _AnyUtxoData extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Original bytes as defined by the chain\n     *\n     * @generated from field: bytes native_bytes = 1;\n     */\n    this.nativeBytes = new Uint8Array(0);\n    /**\n     * @generated from oneof utxorpc.v1alpha.query.AnyUtxoData.parsed_state\n     */\n    this.parsedState = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyUtxoData().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyUtxoData().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyUtxoData().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyUtxoData, a, b);\n  }\n};\n_AnyUtxoData.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyUtxoData.typeName = \"utxorpc.v1alpha.query.AnyUtxoData\";\n_AnyUtxoData.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"native_bytes\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 2, name: \"txo_ref\", kind: \"message\", T: TxoRef },\n  { no: 3, name: \"cardano\", kind: \"message\", T: TxOutput, oneof: \"parsed_state\" }\n]);\nvar AnyUtxoData = _AnyUtxoData;\nvar _ReadUtxosRequest = class _ReadUtxosRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of keys UTxOs.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.TxoRef keys = 1;\n     */\n    this.keys = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadUtxosRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadUtxosRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadUtxosRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadUtxosRequest, a, b);\n  }\n};\n_ReadUtxosRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadUtxosRequest.typeName = \"utxorpc.v1alpha.query.ReadUtxosRequest\";\n_ReadUtxosRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"keys\", kind: \"message\", T: TxoRef, repeated: true },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar ReadUtxosRequest = _ReadUtxosRequest;\nvar _ReadUtxosResponse = class _ReadUtxosResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of UTxOs.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.AnyUtxoData items = 1;\n     */\n    this.items = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadUtxosResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadUtxosResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadUtxosResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadUtxosResponse, a, b);\n  }\n};\n_ReadUtxosResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadUtxosResponse.typeName = \"utxorpc.v1alpha.query.ReadUtxosResponse\";\n_ReadUtxosResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: AnyUtxoData, repeated: true },\n  { no: 2, name: \"ledger_tip\", kind: \"message\", T: ChainPoint }\n]);\nvar ReadUtxosResponse = _ReadUtxosResponse;\nvar _SearchUtxosRequest = class _SearchUtxosRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The maximum number of items to return.\n     *\n     * @generated from field: int32 max_items = 3;\n     */\n    this.maxItems = 0;\n    /**\n     * The next_page_token value returned from a previous request, if any.\n     *\n     * @generated from field: string start_token = 4;\n     */\n    this.startToken = \"\";\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _SearchUtxosRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _SearchUtxosRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _SearchUtxosRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_SearchUtxosRequest, a, b);\n  }\n};\n_SearchUtxosRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_SearchUtxosRequest.typeName = \"utxorpc.v1alpha.query.SearchUtxosRequest\";\n_SearchUtxosRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"predicate\", kind: \"message\", T: UtxoPredicate },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask },\n  {\n    no: 3,\n    name: \"max_items\",\n    kind: \"scalar\",\n    T: 5\n    /* ScalarType.INT32 */\n  },\n  {\n    no: 4,\n    name: \"start_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }\n]);\nvar SearchUtxosRequest = _SearchUtxosRequest;\nvar _SearchUtxosResponse = class _SearchUtxosResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of UTxOs.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.AnyUtxoData items = 1;\n     */\n    this.items = [];\n    /**\n     * Token to retrieve the next page of results, or empty if there are no more results.\n     *\n     * @generated from field: string next_token = 3;\n     */\n    this.nextToken = \"\";\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _SearchUtxosResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _SearchUtxosResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _SearchUtxosResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_SearchUtxosResponse, a, b);\n  }\n};\n_SearchUtxosResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_SearchUtxosResponse.typeName = \"utxorpc.v1alpha.query.SearchUtxosResponse\";\n_SearchUtxosResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: AnyUtxoData, repeated: true },\n  { no: 2, name: \"ledger_tip\", kind: \"message\", T: ChainPoint },\n  {\n    no: 3,\n    name: \"next_token\",\n    kind: \"scalar\",\n    T: 9\n    /* ScalarType.STRING */\n  }\n]);\nvar SearchUtxosResponse = _SearchUtxosResponse;\nvar _ReadDataRequest = class _ReadDataRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: repeated bytes keys = 1;\n     */\n    this.keys = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadDataRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadDataRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadDataRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadDataRequest, a, b);\n  }\n};\n_ReadDataRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadDataRequest.typeName = \"utxorpc.v1alpha.query.ReadDataRequest\";\n_ReadDataRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"keys\", kind: \"scalar\", T: 12, repeated: true },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar ReadDataRequest = _ReadDataRequest;\nvar _AnyChainDatum = class _AnyChainDatum extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Original bytes as defined by the chain\n     *\n     * @generated from field: bytes native_bytes = 1;\n     */\n    this.nativeBytes = new Uint8Array(0);\n    /**\n     * @generated from field: bytes key = 2;\n     */\n    this.key = new Uint8Array(0);\n    /**\n     * @generated from oneof utxorpc.v1alpha.query.AnyChainDatum.parsed_state\n     */\n    this.parsedState = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainDatum().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainDatum().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainDatum().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainDatum, a, b);\n  }\n};\n_AnyChainDatum.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainDatum.typeName = \"utxorpc.v1alpha.query.AnyChainDatum\";\n_AnyChainDatum.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"native_bytes\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"key\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 3, name: \"cardano\", kind: \"message\", T: PlutusData, oneof: \"parsed_state\" }\n]);\nvar AnyChainDatum = _AnyChainDatum;\nvar _ReadDataResponse = class _ReadDataResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The value of each datum.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.query.AnyChainDatum values = 1;\n     */\n    this.values = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadDataResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadDataResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadDataResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadDataResponse, a, b);\n  }\n};\n_ReadDataResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadDataResponse.typeName = \"utxorpc.v1alpha.query.ReadDataResponse\";\n_ReadDataResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"values\", kind: \"message\", T: AnyChainDatum, repeated: true },\n  { no: 2, name: \"ledger_tip\", kind: \"message\", T: ChainPoint }\n]);\nvar ReadDataResponse = _ReadDataResponse;\n\n// src/utxorpc/v1alpha/query/query_connect.ts\nvar query_connect_exports = {};\n__export(query_connect_exports, {\n  QueryService: () => QueryService\n});\n\nvar QueryService = {\n  typeName: \"utxorpc.v1alpha.query.QueryService\",\n  methods: {\n    /**\n     * Get overall chain state.\n     *\n     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadParams\n     */\n    readParams: {\n      name: \"ReadParams\",\n      I: ReadParamsRequest,\n      O: ReadParamsResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Read specific UTxOs by reference.\n     *\n     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadUtxos\n     */\n    readUtxos: {\n      name: \"ReadUtxos\",\n      I: ReadUtxosRequest,\n      O: ReadUtxosResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Search for UTxO based on a pattern.\n     *\n     * @generated from rpc utxorpc.v1alpha.query.QueryService.SearchUtxos\n     */\n    searchUtxos: {\n      name: \"SearchUtxos\",\n      I: SearchUtxosRequest,\n      O: SearchUtxosResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Read specific datum by hash\n     *\n     * @generated from rpc utxorpc.v1alpha.query.QueryService.ReadData\n     */\n    readData: {\n      name: \"ReadData\",\n      I: ReadDataRequest,\n      O: ReadDataResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    }\n  }\n};\n\n// src/utxorpc/v1alpha/submit/submit_pb.ts\nvar submit_pb_exports = {};\n__export(submit_pb_exports, {\n  AnyChainEval: () => AnyChainEval,\n  AnyChainTx: () => AnyChainTx,\n  AnyChainTxPattern: () => AnyChainTxPattern,\n  EvalTxRequest: () => EvalTxRequest,\n  EvalTxResponse: () => EvalTxResponse,\n  ReadMempoolRequest: () => ReadMempoolRequest,\n  ReadMempoolResponse: () => ReadMempoolResponse,\n  Stage: () => Stage,\n  SubmitTxRequest: () => SubmitTxRequest,\n  SubmitTxResponse: () => SubmitTxResponse,\n  TxInMempool: () => TxInMempool,\n  TxPredicate: () => TxPredicate,\n  WaitForTxRequest: () => WaitForTxRequest,\n  WaitForTxResponse: () => WaitForTxResponse,\n  WatchMempoolRequest: () => WatchMempoolRequest,\n  WatchMempoolResponse: () => WatchMempoolResponse\n});\n\nvar Stage = /* @__PURE__ */ ((Stage2) => {\n  Stage2[Stage2[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n  Stage2[Stage2[\"ACKNOWLEDGED\"] = 1] = \"ACKNOWLEDGED\";\n  Stage2[Stage2[\"MEMPOOL\"] = 2] = \"MEMPOOL\";\n  Stage2[Stage2[\"NETWORK\"] = 3] = \"NETWORK\";\n  Stage2[Stage2[\"CONFIRMED\"] = 4] = \"CONFIRMED\";\n  return Stage2;\n})(Stage || {});\n_bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.setEnumType(Stage, \"utxorpc.v1alpha.submit.Stage\", [\n  { no: 0, name: \"STAGE_UNSPECIFIED\" },\n  { no: 1, name: \"STAGE_ACKNOWLEDGED\" },\n  { no: 2, name: \"STAGE_MEMPOOL\" },\n  { no: 3, name: \"STAGE_NETWORK\" },\n  { no: 4, name: \"STAGE_CONFIRMED\" }\n]);\nvar _AnyChainTx = class _AnyChainTx extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.submit.AnyChainTx.type\n     */\n    this.type = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainTx().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainTx().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainTx().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainTx, a, b);\n  }\n};\n_AnyChainTx.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainTx.typeName = \"utxorpc.v1alpha.submit.AnyChainTx\";\n_AnyChainTx.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"raw\", kind: \"scalar\", T: 12, oneof: \"type\" }\n]);\nvar AnyChainTx = _AnyChainTx;\nvar _EvalTxRequest = class _EvalTxRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transactions to evaluate.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainTx tx = 1;\n     */\n    this.tx = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _EvalTxRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _EvalTxRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _EvalTxRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_EvalTxRequest, a, b);\n  }\n};\n_EvalTxRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_EvalTxRequest.typeName = \"utxorpc.v1alpha.submit.EvalTxRequest\";\n_EvalTxRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"tx\", kind: \"message\", T: AnyChainTx, repeated: true }\n]);\nvar EvalTxRequest = _EvalTxRequest;\nvar _AnyChainEval = class _AnyChainEval extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.submit.AnyChainEval.chain\n     */\n    this.chain = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainEval().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainEval().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainEval().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainEval, a, b);\n  }\n};\n_AnyChainEval.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainEval.typeName = \"utxorpc.v1alpha.submit.AnyChainEval\";\n_AnyChainEval.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: TxEval, oneof: \"chain\" }\n]);\nvar AnyChainEval = _AnyChainEval;\nvar _EvalTxResponse = class _EvalTxResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainEval report = 1;\n     */\n    this.report = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _EvalTxResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _EvalTxResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _EvalTxResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_EvalTxResponse, a, b);\n  }\n};\n_EvalTxResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_EvalTxResponse.typeName = \"utxorpc.v1alpha.submit.EvalTxResponse\";\n_EvalTxResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"report\", kind: \"message\", T: AnyChainEval, repeated: true }\n]);\nvar EvalTxResponse = _EvalTxResponse;\nvar _SubmitTxRequest = class _SubmitTxRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transactions to submit.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.AnyChainTx tx = 1;\n     */\n    this.tx = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _SubmitTxRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _SubmitTxRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _SubmitTxRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_SubmitTxRequest, a, b);\n  }\n};\n_SubmitTxRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_SubmitTxRequest.typeName = \"utxorpc.v1alpha.submit.SubmitTxRequest\";\n_SubmitTxRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"tx\", kind: \"message\", T: AnyChainTx, repeated: true }\n]);\nvar SubmitTxRequest = _SubmitTxRequest;\nvar _SubmitTxResponse = class _SubmitTxResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transaction references.\n     *\n     * @generated from field: repeated bytes ref = 1;\n     */\n    this.ref = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _SubmitTxResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _SubmitTxResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _SubmitTxResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_SubmitTxResponse, a, b);\n  }\n};\n_SubmitTxResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_SubmitTxResponse.typeName = \"utxorpc.v1alpha.submit.SubmitTxResponse\";\n_SubmitTxResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"ref\", kind: \"scalar\", T: 12, repeated: true }\n]);\nvar SubmitTxResponse = _SubmitTxResponse;\nvar _TxInMempool = class _TxInMempool extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * The transaction reference.\n     *\n     * @generated from field: bytes ref = 1;\n     */\n    this.ref = new Uint8Array(0);\n    /**\n     * Original bytes as defined by the chain\n     *\n     * @generated from field: bytes native_bytes = 2;\n     */\n    this.nativeBytes = new Uint8Array(0);\n    /**\n     * The current stage of the tx\n     *\n     * @generated from field: utxorpc.v1alpha.submit.Stage stage = 3;\n     */\n    this.stage = 0 /* UNSPECIFIED */;\n    /**\n     * @generated from oneof utxorpc.v1alpha.submit.TxInMempool.parsed_state\n     */\n    this.parsedState = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxInMempool().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxInMempool().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxInMempool().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxInMempool, a, b);\n  }\n};\n_TxInMempool.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxInMempool.typeName = \"utxorpc.v1alpha.submit.TxInMempool\";\n_TxInMempool.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"ref\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  {\n    no: 2,\n    name: \"native_bytes\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 3, name: \"stage\", kind: \"enum\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Stage) },\n  { no: 4, name: \"cardano\", kind: \"message\", T: Tx, oneof: \"parsed_state\" }\n]);\nvar TxInMempool = _TxInMempool;\nvar _ReadMempoolRequest = class _ReadMempoolRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadMempoolRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadMempoolRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadMempoolRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadMempoolRequest, a, b);\n  }\n};\n_ReadMempoolRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadMempoolRequest.typeName = \"utxorpc.v1alpha.submit.ReadMempoolRequest\";\n_ReadMempoolRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => []);\nvar ReadMempoolRequest = _ReadMempoolRequest;\nvar _ReadMempoolResponse = class _ReadMempoolResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transaction currently on the mempool.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.TxInMempool items = 1;\n     */\n    this.items = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _ReadMempoolResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _ReadMempoolResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _ReadMempoolResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_ReadMempoolResponse, a, b);\n  }\n};\n_ReadMempoolResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_ReadMempoolResponse.typeName = \"utxorpc.v1alpha.submit.ReadMempoolResponse\";\n_ReadMempoolResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"items\", kind: \"message\", T: TxInMempool, repeated: true }\n]);\nvar ReadMempoolResponse = _ReadMempoolResponse;\nvar _WaitForTxRequest = class _WaitForTxRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of transaction references to wait for.\n     *\n     * @generated from field: repeated bytes ref = 1;\n     */\n    this.ref = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WaitForTxRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WaitForTxRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WaitForTxRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WaitForTxRequest, a, b);\n  }\n};\n_WaitForTxRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WaitForTxRequest.typeName = \"utxorpc.v1alpha.submit.WaitForTxRequest\";\n_WaitForTxRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"ref\", kind: \"scalar\", T: 12, repeated: true }\n]);\nvar WaitForTxRequest = _WaitForTxRequest;\nvar _WaitForTxResponse = class _WaitForTxResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Transaction reference.\n     *\n     * @generated from field: bytes ref = 1;\n     */\n    this.ref = new Uint8Array(0);\n    /**\n     * Stage reached by the transaction.\n     *\n     * @generated from field: utxorpc.v1alpha.submit.Stage stage = 2;\n     */\n    this.stage = 0 /* UNSPECIFIED */;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WaitForTxResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WaitForTxResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WaitForTxResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WaitForTxResponse, a, b);\n  }\n};\n_WaitForTxResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WaitForTxResponse.typeName = \"utxorpc.v1alpha.submit.WaitForTxResponse\";\n_WaitForTxResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"ref\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 2, name: \"stage\", kind: \"enum\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.getEnumType(Stage) }\n]);\nvar WaitForTxResponse = _WaitForTxResponse;\nvar _AnyChainTxPattern = class _AnyChainTxPattern extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.submit.AnyChainTxPattern.chain\n     */\n    this.chain = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainTxPattern().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainTxPattern().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainTxPattern().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainTxPattern, a, b);\n  }\n};\n_AnyChainTxPattern.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainTxPattern.typeName = \"utxorpc.v1alpha.submit.AnyChainTxPattern\";\n_AnyChainTxPattern.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: TxPattern, oneof: \"chain\" }\n]);\nvar AnyChainTxPattern = _AnyChainTxPattern;\nvar _TxPredicate = class _TxPredicate extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Predicate is true if tx doesn't exhibit pattern.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate not = 2;\n     */\n    this.not = [];\n    /**\n     * Predicate is true if tx exhibits all of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate all_of = 3;\n     */\n    this.allOf = [];\n    /**\n     * Predicate is true if tx exhibits any of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.submit.TxPredicate any_of = 4;\n     */\n    this.anyOf = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxPredicate().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxPredicate().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxPredicate().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxPredicate, a, b);\n  }\n};\n_TxPredicate.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxPredicate.typeName = \"utxorpc.v1alpha.submit.TxPredicate\";\n_TxPredicate.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"match\", kind: \"message\", T: AnyChainTxPattern },\n  { no: 2, name: \"not\", kind: \"message\", T: _TxPredicate, repeated: true },\n  { no: 3, name: \"all_of\", kind: \"message\", T: _TxPredicate, repeated: true },\n  { no: 4, name: \"any_of\", kind: \"message\", T: _TxPredicate, repeated: true }\n]);\nvar TxPredicate = _TxPredicate;\nvar _WatchMempoolRequest = class _WatchMempoolRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WatchMempoolRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WatchMempoolRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WatchMempoolRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WatchMempoolRequest, a, b);\n  }\n};\n_WatchMempoolRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WatchMempoolRequest.typeName = \"utxorpc.v1alpha.submit.WatchMempoolRequest\";\n_WatchMempoolRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"predicate\", kind: \"message\", T: TxPredicate },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar WatchMempoolRequest = _WatchMempoolRequest;\nvar _WatchMempoolResponse = class _WatchMempoolResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WatchMempoolResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WatchMempoolResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WatchMempoolResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WatchMempoolResponse, a, b);\n  }\n};\n_WatchMempoolResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WatchMempoolResponse.typeName = \"utxorpc.v1alpha.submit.WatchMempoolResponse\";\n_WatchMempoolResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"tx\", kind: \"message\", T: TxInMempool }\n]);\nvar WatchMempoolResponse = _WatchMempoolResponse;\n\n// src/utxorpc/v1alpha/submit/submit_connect.ts\nvar submit_connect_exports = {};\n__export(submit_connect_exports, {\n  SubmitService: () => SubmitService\n});\n\nvar SubmitService = {\n  typeName: \"utxorpc.v1alpha.submit.SubmitService\",\n  methods: {\n    /**\n     * Evaluates a transaction without submitting it.\n     *\n     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.EvalTx\n     */\n    evalTx: {\n      name: \"EvalTx\",\n      I: EvalTxRequest,\n      O: EvalTxResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Submit transactions to the blockchain.\n     *\n     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.SubmitTx\n     */\n    submitTx: {\n      name: \"SubmitTx\",\n      I: SubmitTxRequest,\n      O: SubmitTxResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Wait for transactions to reach a certain stage and stream the updates.\n     *\n     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.WaitForTx\n     */\n    waitForTx: {\n      name: \"WaitForTx\",\n      I: WaitForTxRequest,\n      O: WaitForTxResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming\n    },\n    /**\n     * Returns a point-in-time snapshot of the mempool.\n     *\n     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.ReadMempool\n     */\n    readMempool: {\n      name: \"ReadMempool\",\n      I: ReadMempoolRequest,\n      O: ReadMempoolResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Stream transactions from the mempool matching the specified predicates.\n     *\n     * @generated from rpc utxorpc.v1alpha.submit.SubmitService.WatchMempool\n     */\n    watchMempool: {\n      name: \"WatchMempool\",\n      I: WatchMempoolRequest,\n      O: WatchMempoolResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming\n    }\n  }\n};\n\n// src/utxorpc/v1alpha/sync/sync_pb.ts\nvar sync_pb_exports = {};\n__export(sync_pb_exports, {\n  AnyChainBlock: () => AnyChainBlock,\n  BlockRef: () => BlockRef,\n  DumpHistoryRequest: () => DumpHistoryRequest,\n  DumpHistoryResponse: () => DumpHistoryResponse,\n  FetchBlockRequest: () => FetchBlockRequest,\n  FetchBlockResponse: () => FetchBlockResponse,\n  FollowTipRequest: () => FollowTipRequest,\n  FollowTipResponse: () => FollowTipResponse\n});\n\nvar _BlockRef = class _BlockRef extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Height or slot number (depending on the blockchain)\n     *\n     * @generated from field: uint64 index = 1;\n     */\n    this.index = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Hash of the content of the block\n     *\n     * @generated from field: bytes hash = 2;\n     */\n    this.hash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _BlockRef().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _BlockRef().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _BlockRef().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_BlockRef, a, b);\n  }\n};\n_BlockRef.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_BlockRef.typeName = \"utxorpc.v1alpha.sync.BlockRef\";\n_BlockRef.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"index\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar BlockRef = _BlockRef;\nvar _AnyChainBlock = class _AnyChainBlock extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Original bytes as defined by the chain\n     *\n     * @generated from field: bytes native_bytes = 1;\n     */\n    this.nativeBytes = new Uint8Array(0);\n    /**\n     * @generated from oneof utxorpc.v1alpha.sync.AnyChainBlock.chain\n     */\n    this.chain = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainBlock().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainBlock().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainBlock().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainBlock, a, b);\n  }\n};\n_AnyChainBlock.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainBlock.typeName = \"utxorpc.v1alpha.sync.AnyChainBlock\";\n_AnyChainBlock.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"native_bytes\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  },\n  { no: 2, name: \"cardano\", kind: \"message\", T: Block, oneof: \"chain\" }\n]);\nvar AnyChainBlock = _AnyChainBlock;\nvar _FetchBlockRequest = class _FetchBlockRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of block references.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.sync.BlockRef ref = 1;\n     */\n    this.ref = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _FetchBlockRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _FetchBlockRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _FetchBlockRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_FetchBlockRequest, a, b);\n  }\n};\n_FetchBlockRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_FetchBlockRequest.typeName = \"utxorpc.v1alpha.sync.FetchBlockRequest\";\n_FetchBlockRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"ref\", kind: \"message\", T: BlockRef, repeated: true },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar FetchBlockRequest = _FetchBlockRequest;\nvar _FetchBlockResponse = class _FetchBlockResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of fetched blocks.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.sync.AnyChainBlock block = 1;\n     */\n    this.block = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _FetchBlockResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _FetchBlockResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _FetchBlockResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_FetchBlockResponse, a, b);\n  }\n};\n_FetchBlockResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_FetchBlockResponse.typeName = \"utxorpc.v1alpha.sync.FetchBlockResponse\";\n_FetchBlockResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"block\", kind: \"message\", T: AnyChainBlock, repeated: true }\n]);\nvar FetchBlockResponse = _FetchBlockResponse;\nvar _DumpHistoryRequest = class _DumpHistoryRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Maximum number of items to return.\n     *\n     * @generated from field: uint32 max_items = 3;\n     */\n    this.maxItems = 0;\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _DumpHistoryRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _DumpHistoryRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _DumpHistoryRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_DumpHistoryRequest, a, b);\n  }\n};\n_DumpHistoryRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_DumpHistoryRequest.typeName = \"utxorpc.v1alpha.sync.DumpHistoryRequest\";\n_DumpHistoryRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 2, name: \"start_token\", kind: \"message\", T: BlockRef },\n  {\n    no: 3,\n    name: \"max_items\",\n    kind: \"scalar\",\n    T: 13\n    /* ScalarType.UINT32 */\n  },\n  { no: 4, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar DumpHistoryRequest = _DumpHistoryRequest;\nvar _DumpHistoryResponse = class _DumpHistoryResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of blocks in the history.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.sync.AnyChainBlock block = 1;\n     */\n    this.block = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _DumpHistoryResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _DumpHistoryResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _DumpHistoryResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_DumpHistoryResponse, a, b);\n  }\n};\n_DumpHistoryResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_DumpHistoryResponse.typeName = \"utxorpc.v1alpha.sync.DumpHistoryResponse\";\n_DumpHistoryResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"block\", kind: \"message\", T: AnyChainBlock, repeated: true },\n  { no: 2, name: \"next_token\", kind: \"message\", T: BlockRef }\n]);\nvar DumpHistoryResponse = _DumpHistoryResponse;\nvar _FollowTipRequest = class _FollowTipRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of block references to find the intersection.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.sync.BlockRef intersect = 1;\n     */\n    this.intersect = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _FollowTipRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _FollowTipRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _FollowTipRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_FollowTipRequest, a, b);\n  }\n};\n_FollowTipRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_FollowTipRequest.typeName = \"utxorpc.v1alpha.sync.FollowTipRequest\";\n_FollowTipRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"intersect\", kind: \"message\", T: BlockRef, repeated: true },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask }\n]);\nvar FollowTipRequest = _FollowTipRequest;\nvar _FollowTipResponse = class _FollowTipResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.sync.FollowTipResponse.action\n     */\n    this.action = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _FollowTipResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _FollowTipResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _FollowTipResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_FollowTipResponse, a, b);\n  }\n};\n_FollowTipResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_FollowTipResponse.typeName = \"utxorpc.v1alpha.sync.FollowTipResponse\";\n_FollowTipResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"apply\", kind: \"message\", T: AnyChainBlock, oneof: \"action\" },\n  { no: 2, name: \"undo\", kind: \"message\", T: AnyChainBlock, oneof: \"action\" },\n  { no: 3, name: \"reset\", kind: \"message\", T: BlockRef, oneof: \"action\" }\n]);\nvar FollowTipResponse = _FollowTipResponse;\n\n// src/utxorpc/v1alpha/sync/sync_connect.ts\nvar sync_connect_exports = {};\n__export(sync_connect_exports, {\n  SyncService: () => SyncService\n});\n\nvar SyncService = {\n  typeName: \"utxorpc.v1alpha.sync.SyncService\",\n  methods: {\n    /**\n     * Fetch a block by its reference.\n     *\n     * @generated from rpc utxorpc.v1alpha.sync.SyncService.FetchBlock\n     */\n    fetchBlock: {\n      name: \"FetchBlock\",\n      I: FetchBlockRequest,\n      O: FetchBlockResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Dump the block history.\n     *\n     * @generated from rpc utxorpc.v1alpha.sync.SyncService.DumpHistory\n     */\n    dumpHistory: {\n      name: \"DumpHistory\",\n      I: DumpHistoryRequest,\n      O: DumpHistoryResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.Unary\n    },\n    /**\n     * Follow the tip of the blockchain.\n     *\n     * @generated from rpc utxorpc.v1alpha.sync.SyncService.FollowTip\n     */\n    followTip: {\n      name: \"FollowTip\",\n      I: FollowTipRequest,\n      O: FollowTipResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming\n    }\n  }\n};\n\n// src/utxorpc/v1alpha/watch/watch_pb.ts\nvar watch_pb_exports = {};\n__export(watch_pb_exports, {\n  AnyChainTx: () => AnyChainTx2,\n  AnyChainTxPattern: () => AnyChainTxPattern2,\n  BlockRef: () => BlockRef2,\n  TxPredicate: () => TxPredicate2,\n  WatchTxRequest: () => WatchTxRequest,\n  WatchTxResponse: () => WatchTxResponse\n});\n\nvar _BlockRef2 = class _BlockRef2 extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Height or slot number (depending on the blockchain)\n     *\n     * @generated from field: uint64 index = 1;\n     */\n    this.index = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_2__.protoInt64.zero;\n    /**\n     * Hash of the content of the block\n     *\n     * @generated from field: bytes hash = 2;\n     */\n    this.hash = new Uint8Array(0);\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _BlockRef2().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _BlockRef2().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _BlockRef2().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_BlockRef2, a, b);\n  }\n};\n_BlockRef2.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_BlockRef2.typeName = \"utxorpc.v1alpha.watch.BlockRef\";\n_BlockRef2.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  {\n    no: 1,\n    name: \"index\",\n    kind: \"scalar\",\n    T: 4\n    /* ScalarType.UINT64 */\n  },\n  {\n    no: 2,\n    name: \"hash\",\n    kind: \"scalar\",\n    T: 12\n    /* ScalarType.BYTES */\n  }\n]);\nvar BlockRef2 = _BlockRef2;\nvar _AnyChainTxPattern2 = class _AnyChainTxPattern2 extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.watch.AnyChainTxPattern.chain\n     */\n    this.chain = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainTxPattern2().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainTxPattern2().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainTxPattern2().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainTxPattern2, a, b);\n  }\n};\n_AnyChainTxPattern2.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainTxPattern2.typeName = \"utxorpc.v1alpha.watch.AnyChainTxPattern\";\n_AnyChainTxPattern2.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: TxPattern, oneof: \"chain\" }\n]);\nvar AnyChainTxPattern2 = _AnyChainTxPattern2;\nvar _TxPredicate2 = class _TxPredicate2 extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * Predicate is true if tx doesn't exhibit pattern.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate not = 2;\n     */\n    this.not = [];\n    /**\n     * Predicate is true if tx exhibits all of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate all_of = 3;\n     */\n    this.allOf = [];\n    /**\n     * Predicate is true if tx exhibits any of the patterns.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.watch.TxPredicate any_of = 4;\n     */\n    this.anyOf = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _TxPredicate2().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _TxPredicate2().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _TxPredicate2().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_TxPredicate2, a, b);\n  }\n};\n_TxPredicate2.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_TxPredicate2.typeName = \"utxorpc.v1alpha.watch.TxPredicate\";\n_TxPredicate2.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"match\", kind: \"message\", T: AnyChainTxPattern2 },\n  { no: 2, name: \"not\", kind: \"message\", T: _TxPredicate2, repeated: true },\n  { no: 3, name: \"all_of\", kind: \"message\", T: _TxPredicate2, repeated: true },\n  { no: 4, name: \"any_of\", kind: \"message\", T: _TxPredicate2, repeated: true }\n]);\nvar TxPredicate2 = _TxPredicate2;\nvar _WatchTxRequest = class _WatchTxRequest extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * List of block references to find the intersection.\n     *\n     * @generated from field: repeated utxorpc.v1alpha.watch.BlockRef intersect = 3;\n     */\n    this.intersect = [];\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WatchTxRequest().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WatchTxRequest().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WatchTxRequest().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WatchTxRequest, a, b);\n  }\n};\n_WatchTxRequest.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WatchTxRequest.typeName = \"utxorpc.v1alpha.watch.WatchTxRequest\";\n_WatchTxRequest.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"predicate\", kind: \"message\", T: TxPredicate2 },\n  { no: 2, name: \"field_mask\", kind: \"message\", T: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_3__.FieldMask },\n  { no: 3, name: \"intersect\", kind: \"message\", T: BlockRef2, repeated: true }\n]);\nvar WatchTxRequest = _WatchTxRequest;\nvar _AnyChainTx2 = class _AnyChainTx2 extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.watch.AnyChainTx.chain\n     */\n    this.chain = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _AnyChainTx2().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _AnyChainTx2().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _AnyChainTx2().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_AnyChainTx2, a, b);\n  }\n};\n_AnyChainTx2.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_AnyChainTx2.typeName = \"utxorpc.v1alpha.watch.AnyChainTx\";\n_AnyChainTx2.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"cardano\", kind: \"message\", T: Tx, oneof: \"chain\" }\n]);\nvar AnyChainTx2 = _AnyChainTx2;\nvar _WatchTxResponse = class _WatchTxResponse extends _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_1__.Message {\n  constructor(data) {\n    super();\n    /**\n     * @generated from oneof utxorpc.v1alpha.watch.WatchTxResponse.action\n     */\n    this.action = { case: void 0 };\n    _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.initPartial(data, this);\n  }\n  static fromBinary(bytes, options) {\n    return new _WatchTxResponse().fromBinary(bytes, options);\n  }\n  static fromJson(jsonValue, options) {\n    return new _WatchTxResponse().fromJson(jsonValue, options);\n  }\n  static fromJsonString(jsonString, options) {\n    return new _WatchTxResponse().fromJsonString(jsonString, options);\n  }\n  static equals(a, b) {\n    return _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.equals(_WatchTxResponse, a, b);\n  }\n};\n_WatchTxResponse.runtime = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3;\n_WatchTxResponse.typeName = \"utxorpc.v1alpha.watch.WatchTxResponse\";\n_WatchTxResponse.fields = _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_0__.proto3.util.newFieldList(() => [\n  { no: 1, name: \"apply\", kind: \"message\", T: AnyChainTx2, oneof: \"action\" },\n  { no: 2, name: \"undo\", kind: \"message\", T: AnyChainTx2, oneof: \"action\" }\n]);\nvar WatchTxResponse = _WatchTxResponse;\n\n// src/utxorpc/v1alpha/watch/watch_connect.ts\nvar watch_connect_exports = {};\n__export(watch_connect_exports, {\n  WatchService: () => WatchService\n});\n\nvar WatchService = {\n  typeName: \"utxorpc.v1alpha.watch.WatchService\",\n  methods: {\n    /**\n     * Stream transactions from the chain matching the specified predicates.\n     *\n     * @generated from rpc utxorpc.v1alpha.watch.WatchService.WatchTx\n     */\n    watchTx: {\n      name: \"WatchTx\",\n      I: WatchTxRequest,\n      O: WatchTxResponse,\n      kind: _bufbuild_protobuf__WEBPACK_IMPORTED_MODULE_4__.MethodKind.ServerStreaming\n    }\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@utxorpc/spec/lib/index.mjs\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/esm/blake2b.js":
/*!***********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/blake2b.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blake2b: () => (/* binding */ blake2b)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/blake2b.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst blake2b = (msg, outputLength = 64) => {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assertBytes)(msg);\n    if (outputLength <= 0 || outputLength > 64) {\n        throw Error(\"Invalid outputLength\");\n    }\n    return (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_1__.blake2b)(msg, { dkLen: outputLength });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9ibGFrZTJiLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RDtBQUNuQjtBQUNsQztBQUNQLElBQUksc0RBQVc7QUFDZjtBQUNBO0FBQ0E7QUFDQSxXQUFXLDhEQUFRLFFBQVEscUJBQXFCO0FBQ2hEIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vYmxha2UyYi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBibGFrZTJiIGFzIF9ibGFrZTJiIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvYmxha2UyYlwiO1xuaW1wb3J0IHsgYXNzZXJ0Qnl0ZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuZXhwb3J0IGNvbnN0IGJsYWtlMmIgPSAobXNnLCBvdXRwdXRMZW5ndGggPSA2NCkgPT4ge1xuICAgIGFzc2VydEJ5dGVzKG1zZyk7XG4gICAgaWYgKG91dHB1dExlbmd0aCA8PSAwIHx8IG91dHB1dExlbmd0aCA+IDY0KSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiSW52YWxpZCBvdXRwdXRMZW5ndGhcIik7XG4gICAgfVxuICAgIHJldHVybiBfYmxha2UyYihtc2csIHsgZGtMZW46IG91dHB1dExlbmd0aCB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/esm/blake2b.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/esm/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/ethereum-cryptography/esm/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertBool: () => (/* binding */ assertBool),\n/* harmony export */   assertBytes: () => (/* binding */ assertBytes),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),\n/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),\n/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),\n/* harmony export */   wrapHash: () => (/* binding */ wrapHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js\");\n\n\nconst assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bool;\nconst assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes;\n\n\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(msg);\n        return hash(msg);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ3FCO0FBQ2hFLG1CQUFtQixpRUFBVztBQUM5QixvQkFBb0Isa0VBQVk7QUFDRztBQUN5RTtBQUM1RztBQUNPO0FBQ1A7QUFDQSxvRUFBb0UsWUFBWTtBQUNoRjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsV0FBVywrREFBVztBQUN0QjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLGtFQUFZO0FBQ3BCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvZXNtL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhc3NlcnQgZnJvbSBcIkBub2JsZS9oYXNoZXMvX2Fzc2VydFwiO1xuaW1wb3J0IHsgaGV4VG9CeXRlcyBhcyBfaGV4VG9CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG5jb25zdCBhc3NlcnRCb29sID0gYXNzZXJ0LmJvb2w7XG5jb25zdCBhc3NlcnRCeXRlcyA9IGFzc2VydC5ieXRlcztcbmV4cG9ydCB7IGFzc2VydEJvb2wsIGFzc2VydEJ5dGVzIH07XG5leHBvcnQgeyBieXRlc1RvSGV4LCBieXRlc1RvSGV4IGFzIHRvSGV4LCBjb25jYXRCeXRlcywgY3JlYXRlVmlldywgdXRmOFRvQnl0ZXMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiO1xuLy8gYnVmLnRvU3RyaW5nKCd1dGY4JykgLT4gYnl0ZXNUb1V0ZjgoYnVmKVxuZXhwb3J0IGZ1bmN0aW9uIGJ5dGVzVG9VdGY4KGRhdGEpIHtcbiAgICBpZiAoIShkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgYnl0ZXNUb1V0ZjggZXhwZWN0ZWQgVWludDhBcnJheSwgZ290ICR7dHlwZW9mIGRhdGF9YCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoZGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGV4VG9CeXRlcyhkYXRhKSB7XG4gICAgY29uc3Qgc2xpY2VkID0gZGF0YS5zdGFydHNXaXRoKFwiMHhcIikgPyBkYXRhLnN1YnN0cmluZygyKSA6IGRhdGE7XG4gICAgcmV0dXJuIF9oZXhUb0J5dGVzKHNsaWNlZCk7XG59XG4vLyBidWYuZXF1YWxzKGJ1ZjIpIC0+IGVxdWFsc0J5dGVzKGJ1ZiwgYnVmMilcbmV4cG9ydCBmdW5jdGlvbiBlcXVhbHNCeXRlcyhhLCBiKSB7XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8gSW50ZXJuYWwgdXRpbHNcbmV4cG9ydCBmdW5jdGlvbiB3cmFwSGFzaChoYXNoKSB7XG4gICAgcmV0dXJuIChtc2cpID0+IHtcbiAgICAgICAgYXNzZXJ0LmJ5dGVzKG1zZyk7XG4gICAgICAgIHJldHVybiBoYXNoKG1zZyk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/esm/utils.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: () => (/* binding */ bool),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   exists: () => (/* binding */ exists),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   output: () => (/* binding */ output)\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\n\nconst assert = { number, bool, bytes, hash, exists, output };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);\n//# sourceMappingURL=_assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBLDBEQUEwRCxFQUFFO0FBQzVEO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxFQUFFO0FBQ25EO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFFBQVEsa0JBQWtCLFNBQVM7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixJQUFJO0FBQ3JGO0FBQ0E7QUFDcUQ7QUFDckQsaUJBQWlCO0FBQ2pCLGlFQUFlLE1BQU0sRUFBQztBQUN0QiIsInNvdXJjZXMiOlsiL1VzZXJzL3BhdHJpY2t0b2JsZXIvbWFzdW1pLWV4cGxvcmVyL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1jcnlwdG9ncmFwaHkvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL19hc3NlcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbnVtYmVyKG4pIHtcbiAgICBpZiAoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG4pIHx8IG4gPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHBvc2l0aXZlIGludGVnZXIgZXhwZWN0ZWQsIG5vdCAke259YCk7XG59XG5mdW5jdGlvbiBib29sKGIpIHtcbiAgICBpZiAodHlwZW9mIGIgIT09ICdib29sZWFuJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBib29sZWFuIGV4cGVjdGVkLCBub3QgJHtifWApO1xufVxuLy8gY29waWVkIGZyb20gdXRpbHNcbmV4cG9ydCBmdW5jdGlvbiBpc0J5dGVzKGEpIHtcbiAgICByZXR1cm4gKGEgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8XG4gICAgICAgIChhICE9IG51bGwgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIGEuY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSk7XG59XG5mdW5jdGlvbiBieXRlcyhiLCAuLi5sZW5ndGhzKSB7XG4gICAgaWYgKCFpc0J5dGVzKGIpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VpbnQ4QXJyYXkgZXhwZWN0ZWQnKTtcbiAgICBpZiAobGVuZ3Rocy5sZW5ndGggPiAwICYmICFsZW5ndGhzLmluY2x1ZGVzKGIubGVuZ3RoKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVaW50OEFycmF5IGV4cGVjdGVkIG9mIGxlbmd0aCAke2xlbmd0aHN9LCBub3Qgb2YgbGVuZ3RoPSR7Yi5sZW5ndGh9YCk7XG59XG5mdW5jdGlvbiBoYXNoKGgpIHtcbiAgICBpZiAodHlwZW9mIGggIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGguY3JlYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggc2hvdWxkIGJlIHdyYXBwZWQgYnkgdXRpbHMud3JhcENvbnN0cnVjdG9yJyk7XG4gICAgbnVtYmVyKGgub3V0cHV0TGVuKTtcbiAgICBudW1iZXIoaC5ibG9ja0xlbik7XG59XG5mdW5jdGlvbiBleGlzdHMoaW5zdGFuY2UsIGNoZWNrRmluaXNoZWQgPSB0cnVlKSB7XG4gICAgaWYgKGluc3RhbmNlLmRlc3Ryb3llZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZCcpO1xuICAgIGlmIChjaGVja0ZpbmlzaGVkICYmIGluc3RhbmNlLmZpbmlzaGVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2gjZGlnZXN0KCkgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQnKTtcbn1cbmZ1bmN0aW9uIG91dHB1dChvdXQsIGluc3RhbmNlKSB7XG4gICAgYnl0ZXMob3V0KTtcbiAgICBjb25zdCBtaW4gPSBpbnN0YW5jZS5vdXRwdXRMZW47XG4gICAgaWYgKG91dC5sZW5ndGggPCBtaW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBkaWdlc3RJbnRvKCkgZXhwZWN0cyBvdXRwdXQgYnVmZmVyIG9mIGxlbmd0aCBhdCBsZWFzdCAke21pbn1gKTtcbiAgICB9XG59XG5leHBvcnQgeyBudW1iZXIsIGJvb2wsIGJ5dGVzLCBoYXNoLCBleGlzdHMsIG91dHB1dCB9O1xuY29uc3QgYXNzZXJ0ID0geyBudW1iZXIsIGJvb2wsIGJ5dGVzLCBoYXNoLCBleGlzdHMsIG91dHB1dCB9O1xuZXhwb3J0IGRlZmF1bHQgYXNzZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2Fzc2VydC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_blake.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_blake.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLAKE: () => (/* binding */ BLAKE),\n/* harmony export */   SIGMA: () => (/* binding */ SIGMA)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js\");\n\n\n// Blake is based on ChaCha permutation.\n// For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n// prettier-ignore\nconst SIGMA = /* @__PURE__ */ new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nclass BLAKE extends _utils_js__WEBPACK_IMPORTED_MODULE_0__.Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.number)(blockLen);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.number)(outputLen);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.number)(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`key must be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`salt must be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`personalization must be ${persLen} byte long or undefined`);\n        this.buffer32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.toBytes)(data);\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n                this.compress(buffer32, 0, false);\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.exists)(this);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_1__.output)(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n        this.compress(buffer32, 0, true);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwap32)(buffer32);\n        const out32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.u32)(out);\n        this.get().forEach((v, i) => (out32[i] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.byteSwapIfBE)(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n//# sourceMappingURL=_blake.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_blake.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_u64.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_u64.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   add3H: () => (/* binding */ add3H),\n/* harmony export */   add3L: () => (/* binding */ add3L),\n/* harmony export */   add4H: () => (/* binding */ add4H),\n/* harmony export */   add4L: () => (/* binding */ add4L),\n/* harmony export */   add5H: () => (/* binding */ add5H),\n/* harmony export */   add5L: () => (/* binding */ add5L),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   rotlBH: () => (/* binding */ rotlBH),\n/* harmony export */   rotlBL: () => (/* binding */ rotlBL),\n/* harmony export */   rotlSH: () => (/* binding */ rotlSH),\n/* harmony export */   rotlSL: () => (/* binding */ rotlSL),\n/* harmony export */   rotr32H: () => (/* binding */ rotr32H),\n/* harmony export */   rotr32L: () => (/* binding */ rotr32L),\n/* harmony export */   rotrBH: () => (/* binding */ rotrBH),\n/* harmony export */   rotrBL: () => (/* binding */ rotrBL),\n/* harmony export */   rotrSH: () => (/* binding */ rotrSH),\n/* harmony export */   rotrSL: () => (/* binding */ rotrSL),\n/* harmony export */   shrSH: () => (/* binding */ shrSH),\n/* harmony export */   shrSL: () => (/* binding */ shrSL),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9fdTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDLGdCQUFnQixPQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDaUw7QUFDakw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsR0FBRyxFQUFDO0FBQ25CIiwic291cmNlcyI6WyIvVXNlcnMvcGF0cmlja3RvYmxlci9tYXN1bWktZXhwbG9yZXIvbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVMzJfTUFTSzY0ID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyICoqIDMyIC0gMSk7XG5jb25zdCBfMzJuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgzMik7XG4vLyBXZSBhcmUgbm90IHVzaW5nIEJpZ1VpbnQ2NEFycmF5LCBiZWNhdXNlIHRoZXkgYXJlIGV4dHJlbWVseSBzbG93IGFzIHBlciAyMDIyXG5mdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZnVuY3Rpb24gc3BsaXQobHN0LCBsZSA9IGZhbHNlKSB7XG4gICAgbGV0IEFoID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGxldCBBbCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB7IGgsIGwgfSA9IGZyb21CaWcobHN0W2ldLCBsZSk7XG4gICAgICAgIFtBaFtpXSwgQWxbaV1dID0gW2gsIGxdO1xuICAgIH1cbiAgICByZXR1cm4gW0FoLCBBbF07XG59XG5jb25zdCB0b0JpZyA9IChoLCBsKSA9PiAoQmlnSW50KGggPj4+IDApIDw8IF8zMm4pIHwgQmlnSW50KGwgPj4+IDApO1xuLy8gZm9yIFNoaWZ0IGluIFswLCAzMilcbmNvbnN0IHNoclNIID0gKGgsIF9sLCBzKSA9PiBoID4+PiBzO1xuY29uc3Qgc2hyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RyU0ggPSAoaCwgbCwgcykgPT4gKGggPj4+IHMpIHwgKGwgPDwgKDMyIC0gcykpO1xuY29uc3Qgcm90clNMID0gKGgsIGwsIHMpID0+IChoIDw8ICgzMiAtIHMpKSB8IChsID4+PiBzKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdHJCSCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoNjQgLSBzKSkgfCAobCA+Pj4gKHMgLSAzMikpO1xuY29uc3Qgcm90ckJMID0gKGgsIGwsIHMpID0+IChoID4+PiAocyAtIDMyKSkgfCAobCA8PCAoNjQgLSBzKSk7XG4vLyBSaWdodCByb3RhdGUgZm9yIHNoaWZ0PT09MzIgKGp1c3Qgc3dhcHMgbCZoKVxuY29uc3Qgcm90cjMySCA9IChfaCwgbCkgPT4gbDtcbmNvbnN0IHJvdHIzMkwgPSAoaCwgX2wpID0+IGg7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gWzEsIDMyKVxuY29uc3Qgcm90bFNIID0gKGgsIGwsIHMpID0+IChoIDw8IHMpIHwgKGwgPj4+ICgzMiAtIHMpKTtcbmNvbnN0IHJvdGxTTCA9IChoLCBsLCBzKSA9PiAobCA8PCBzKSB8IChoID4+PiAoMzIgLSBzKSk7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdGxCSCA9IChoLCBsLCBzKSA9PiAobCA8PCAocyAtIDMyKSkgfCAoaCA+Pj4gKDY0IC0gcykpO1xuY29uc3Qgcm90bEJMID0gKGgsIGwsIHMpID0+IChoIDw8IChzIC0gMzIpKSB8IChsID4+PiAoNjQgLSBzKSk7XG4vLyBKUyB1c2VzIDMyLWJpdCBzaWduZWQgaW50ZWdlcnMgZm9yIGJpdHdpc2Ugb3BlcmF0aW9ucyB3aGljaCBtZWFucyB3ZSBjYW5ub3Rcbi8vIHNpbXBsZSB0YWtlIGNhcnJ5IG91dCBvZiBsb3cgYml0IHN1bSBieSBzaGlmdCwgd2UgbmVlZCB0byB1c2UgZGl2aXNpb24uXG5mdW5jdGlvbiBhZGQoQWgsIEFsLCBCaCwgQmwpIHtcbiAgICBjb25zdCBsID0gKEFsID4+PiAwKSArIChCbCA+Pj4gMCk7XG4gICAgcmV0dXJuIHsgaDogKEFoICsgQmggKyAoKGwgLyAyICoqIDMyKSB8IDApKSB8IDAsIGw6IGwgfCAwIH07XG59XG4vLyBBZGRpdGlvbiB3aXRoIG1vcmUgdGhhbiAyIGVsZW1lbnRzXG5jb25zdCBhZGQzTCA9IChBbCwgQmwsIENsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCk7XG5jb25zdCBhZGQzSCA9IChsb3csIEFoLCBCaCwgQ2gpID0+IChBaCArIEJoICsgQ2ggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDRMID0gKEFsLCBCbCwgQ2wsIERsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApO1xuY29uc3QgYWRkNEggPSAobG93LCBBaCwgQmgsIENoLCBEaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ1TCA9IChBbCwgQmwsIENsLCBEbCwgRWwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCkgKyAoRWwgPj4+IDApO1xuY29uc3QgYWRkNUggPSAobG93LCBBaCwgQmgsIENoLCBEaCwgRWgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArIEVoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG4vLyBwcmV0dGllci1pZ25vcmVcbmV4cG9ydCB7IGZyb21CaWcsIHNwbGl0LCB0b0JpZywgc2hyU0gsIHNoclNMLCByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsIHJvdHIzMkgsIHJvdHIzMkwsIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCwgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLCB9O1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCB1NjQgPSB7XG4gICAgZnJvbUJpZywgc3BsaXQsIHRvQmlnLFxuICAgIHNoclNILCBzaHJTTCxcbiAgICByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsXG4gICAgcm90cjMySCwgcm90cjMyTCxcbiAgICByb3RsU0gsIHJvdGxTTCwgcm90bEJILCByb3RsQkwsXG4gICAgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLFxufTtcbmV4cG9ydCBkZWZhdWx0IHU2NDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV91NjQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_u64.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/blake2b.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/blake2b.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BLAKE2b: () => (/* binding */ BLAKE2b),\n/* harmony export */   blake2b: () => (/* binding */ blake2b)\n/* harmony export */ });\n/* harmony import */ var _blake_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_blake.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_blake.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// Same as SHA-512 but LE\n// prettier-ignore\nconst B2B_IV = /* @__PURE__ */ new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(Al, Bl, Xl);\n    Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotr32H(Dh, Dl), Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Bh, Bl, 24), Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3L(Al, Bl, Xl);\n    Ah = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSH(Dh, Dl, 16), Dl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBH(Bh, Bl, 63), Bl: _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends _blake_js__WEBPACK_IMPORTED_MODULE_1__.BLAKE {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.salt));\n            this.v4l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[0]);\n            this.v4h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[1]);\n            this.v5l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[2]);\n            this.v5h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(salt[3]);\n        }\n        if (opts.personalization) {\n            const pers = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.u32)((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.personalization));\n            this.v6l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[0]);\n            this.v6h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[1]);\n            this.v7l ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[2]);\n            this.v7h ^= (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.byteSwapIfBE)(pers[3]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set((0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.toBytes)(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = _u64_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = _blake_js__WEBPACK_IMPORTED_MODULE_1__.SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        BBUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nconst blake2b = /* @__PURE__ */ (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.wrapConstructorWithOpts)((opts) => new BLAKE2b(opts));\n//# sourceMappingURL=blake2b.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9ibGFrZTJiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ2Y7QUFDcUQ7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QyxnREFBZ0Q7QUFDaEQsZ0RBQWdEO0FBQ2hELGdEQUFnRDtBQUNoRCxnREFBZ0Q7QUFDaEQ7QUFDQSxhQUFhLHFEQUFTO0FBQ3RCLFNBQVMscURBQVM7QUFDbEI7QUFDQTtBQUNBLE9BQU8sU0FBUyxJQUFJLDBCQUEwQjtBQUM5QyxPQUFPLFNBQVMsSUFBSSxJQUFJLHVEQUFXLGNBQWMsdURBQVcsVUFBVTtBQUN0RTtBQUNBLE9BQU8sZUFBZSxFQUFFLG1EQUFPO0FBQy9CO0FBQ0EsT0FBTyxTQUFTLElBQUksMEJBQTBCO0FBQzlDLE9BQU8sU0FBUyxJQUFJLElBQUksc0RBQVUsa0JBQWtCLHNEQUFVLGNBQWM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsZ0RBQWdEO0FBQ2hELGdEQUFnRDtBQUNoRCxnREFBZ0Q7QUFDaEQsZ0RBQWdEO0FBQ2hEO0FBQ0EsYUFBYSxxREFBUztBQUN0QixTQUFTLHFEQUFTO0FBQ2xCO0FBQ0E7QUFDQSxPQUFPLFNBQVMsSUFBSSwwQkFBMEI7QUFDOUMsT0FBTyxTQUFTLElBQUksSUFBSSxzREFBVSxrQkFBa0Isc0RBQVUsY0FBYztBQUM1RTtBQUNBLE9BQU8sZUFBZSxFQUFFLG1EQUFPO0FBQy9CO0FBQ0EsT0FBTyxTQUFTLElBQUksMEJBQTBCO0FBQzlDLE9BQU8sU0FBUyxJQUFJLElBQUksc0RBQVUsa0JBQWtCLHNEQUFVLGNBQWM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHNCQUFzQiw0Q0FBSztBQUNsQyx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDhDQUFHLENBQUMsa0RBQU87QUFDcEMsd0JBQXdCLHVEQUFZO0FBQ3BDLHdCQUF3Qix1REFBWTtBQUNwQyx3QkFBd0IsdURBQVk7QUFDcEMsd0JBQXdCLHVEQUFZO0FBQ3BDO0FBQ0E7QUFDQSx5QkFBeUIsOENBQUcsQ0FBQyxrREFBTztBQUNwQyx3QkFBd0IsdURBQVk7QUFDcEMsd0JBQXdCLHVEQUFZO0FBQ3BDLHdCQUF3Qix1REFBWTtBQUNwQyx3QkFBd0IsdURBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQWlGO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JELDhCQUE4QjtBQUM5QixjQUFjLE9BQU8sRUFBRSx1REFBVztBQUNsQyxrQ0FBa0M7QUFDbEMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw0Q0FBSztBQUN2Qix3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdDQUFnQyxrRUFBdUI7QUFDOUQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9ibGFrZTJiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJMQUtFLCBTSUdNQSB9IGZyb20gJy4vX2JsYWtlLmpzJztcbmltcG9ydCB1NjQgZnJvbSAnLi9fdTY0LmpzJztcbmltcG9ydCB7IHRvQnl0ZXMsIHUzMiwgd3JhcENvbnN0cnVjdG9yV2l0aE9wdHMsIGJ5dGVTd2FwSWZCRSB9IGZyb20gJy4vdXRpbHMuanMnO1xuLy8gU2FtZSBhcyBTSEEtNTEyIGJ1dCBMRVxuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCBCMkJfSVYgPSAvKiBAX19QVVJFX18gKi8gbmV3IFVpbnQzMkFycmF5KFtcbiAgICAweGYzYmNjOTA4LCAweDZhMDllNjY3LCAweDg0Y2FhNzNiLCAweGJiNjdhZTg1LCAweGZlOTRmODJiLCAweDNjNmVmMzcyLCAweDVmMWQzNmYxLCAweGE1NGZmNTNhLFxuICAgIDB4YWRlNjgyZDEsIDB4NTEwZTUyN2YsIDB4MmIzZTZjMWYsIDB4OWIwNTY4OGMsIDB4ZmI0MWJkNmIsIDB4MWY4M2Q5YWIsIDB4MTM3ZTIxNzksIDB4NWJlMGNkMTlcbl0pO1xuLy8gVGVtcG9yYXJ5IGJ1ZmZlclxuY29uc3QgQkJVRiA9IC8qIEBfX1BVUkVfXyAqLyBuZXcgVWludDMyQXJyYXkoMzIpO1xuLy8gTWl4aW5nIGZ1bmN0aW9uIEcgc3BsaXR0ZWQgaW4gdHdvIGhhbGZzXG5mdW5jdGlvbiBHMWIoYSwgYiwgYywgZCwgbXNnLCB4KSB7XG4gICAgLy8gTk9URTogViBpcyBMRSBoZXJlXG4gICAgY29uc3QgWGwgPSBtc2dbeF0sIFhoID0gbXNnW3ggKyAxXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgbGV0IEFsID0gQkJVRlsyICogYV0sIEFoID0gQkJVRlsyICogYSArIDFdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBsZXQgQmwgPSBCQlVGWzIgKiBiXSwgQmggPSBCQlVGWzIgKiBiICsgMV07IC8vIHByZXR0aWVyLWlnbm9yZVxuICAgIGxldCBDbCA9IEJCVUZbMiAqIGNdLCBDaCA9IEJCVUZbMiAqIGMgKyAxXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgbGV0IERsID0gQkJVRlsyICogZF0sIERoID0gQkJVRlsyICogZCArIDFdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAvLyB2W2FdID0gKHZbYV0gKyB2W2JdICsgeCkgfCAwO1xuICAgIGxldCBsbCA9IHU2NC5hZGQzTChBbCwgQmwsIFhsKTtcbiAgICBBaCA9IHU2NC5hZGQzSChsbCwgQWgsIEJoLCBYaCk7XG4gICAgQWwgPSBsbCB8IDA7XG4gICAgLy8gdltkXSA9IHJvdHIodltkXSBeIHZbYV0sIDMyKVxuICAgICh7IERoLCBEbCB9ID0geyBEaDogRGggXiBBaCwgRGw6IERsIF4gQWwgfSk7XG4gICAgKHsgRGgsIERsIH0gPSB7IERoOiB1NjQucm90cjMySChEaCwgRGwpLCBEbDogdTY0LnJvdHIzMkwoRGgsIERsKSB9KTtcbiAgICAvLyB2W2NdID0gKHZbY10gKyB2W2RdKSB8IDA7XG4gICAgKHsgaDogQ2gsIGw6IENsIH0gPSB1NjQuYWRkKENoLCBDbCwgRGgsIERsKSk7XG4gICAgLy8gdltiXSA9IHJvdHIodltiXSBeIHZbY10sIDI0KVxuICAgICh7IEJoLCBCbCB9ID0geyBCaDogQmggXiBDaCwgQmw6IEJsIF4gQ2wgfSk7XG4gICAgKHsgQmgsIEJsIH0gPSB7IEJoOiB1NjQucm90clNIKEJoLCBCbCwgMjQpLCBCbDogdTY0LnJvdHJTTChCaCwgQmwsIDI0KSB9KTtcbiAgICAoQkJVRlsyICogYV0gPSBBbCksIChCQlVGWzIgKiBhICsgMV0gPSBBaCk7XG4gICAgKEJCVUZbMiAqIGJdID0gQmwpLCAoQkJVRlsyICogYiArIDFdID0gQmgpO1xuICAgIChCQlVGWzIgKiBjXSA9IENsKSwgKEJCVUZbMiAqIGMgKyAxXSA9IENoKTtcbiAgICAoQkJVRlsyICogZF0gPSBEbCksIChCQlVGWzIgKiBkICsgMV0gPSBEaCk7XG59XG5mdW5jdGlvbiBHMmIoYSwgYiwgYywgZCwgbXNnLCB4KSB7XG4gICAgLy8gTk9URTogViBpcyBMRSBoZXJlXG4gICAgY29uc3QgWGwgPSBtc2dbeF0sIFhoID0gbXNnW3ggKyAxXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgbGV0IEFsID0gQkJVRlsyICogYV0sIEFoID0gQkJVRlsyICogYSArIDFdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBsZXQgQmwgPSBCQlVGWzIgKiBiXSwgQmggPSBCQlVGWzIgKiBiICsgMV07IC8vIHByZXR0aWVyLWlnbm9yZVxuICAgIGxldCBDbCA9IEJCVUZbMiAqIGNdLCBDaCA9IEJCVUZbMiAqIGMgKyAxXTsgLy8gcHJldHRpZXItaWdub3JlXG4gICAgbGV0IERsID0gQkJVRlsyICogZF0sIERoID0gQkJVRlsyICogZCArIDFdOyAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAvLyB2W2FdID0gKHZbYV0gKyB2W2JdICsgeCkgfCAwO1xuICAgIGxldCBsbCA9IHU2NC5hZGQzTChBbCwgQmwsIFhsKTtcbiAgICBBaCA9IHU2NC5hZGQzSChsbCwgQWgsIEJoLCBYaCk7XG4gICAgQWwgPSBsbCB8IDA7XG4gICAgLy8gdltkXSA9IHJvdHIodltkXSBeIHZbYV0sIDE2KVxuICAgICh7IERoLCBEbCB9ID0geyBEaDogRGggXiBBaCwgRGw6IERsIF4gQWwgfSk7XG4gICAgKHsgRGgsIERsIH0gPSB7IERoOiB1NjQucm90clNIKERoLCBEbCwgMTYpLCBEbDogdTY0LnJvdHJTTChEaCwgRGwsIDE2KSB9KTtcbiAgICAvLyB2W2NdID0gKHZbY10gKyB2W2RdKSB8IDA7XG4gICAgKHsgaDogQ2gsIGw6IENsIH0gPSB1NjQuYWRkKENoLCBDbCwgRGgsIERsKSk7XG4gICAgLy8gdltiXSA9IHJvdHIodltiXSBeIHZbY10sIDYzKVxuICAgICh7IEJoLCBCbCB9ID0geyBCaDogQmggXiBDaCwgQmw6IEJsIF4gQ2wgfSk7XG4gICAgKHsgQmgsIEJsIH0gPSB7IEJoOiB1NjQucm90ckJIKEJoLCBCbCwgNjMpLCBCbDogdTY0LnJvdHJCTChCaCwgQmwsIDYzKSB9KTtcbiAgICAoQkJVRlsyICogYV0gPSBBbCksIChCQlVGWzIgKiBhICsgMV0gPSBBaCk7XG4gICAgKEJCVUZbMiAqIGJdID0gQmwpLCAoQkJVRlsyICogYiArIDFdID0gQmgpO1xuICAgIChCQlVGWzIgKiBjXSA9IENsKSwgKEJCVUZbMiAqIGMgKyAxXSA9IENoKTtcbiAgICAoQkJVRlsyICogZF0gPSBEbCksIChCQlVGWzIgKiBkICsgMV0gPSBEaCk7XG59XG5leHBvcnQgY2xhc3MgQkxBS0UyYiBleHRlbmRzIEJMQUtFIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzID0ge30pIHtcbiAgICAgICAgc3VwZXIoMTI4LCBvcHRzLmRrTGVuID09PSB1bmRlZmluZWQgPyA2NCA6IG9wdHMuZGtMZW4sIG9wdHMsIDY0LCAxNiwgMTYpO1xuICAgICAgICAvLyBTYW1lIGFzIFNIQS01MTIsIGJ1dCBMRVxuICAgICAgICB0aGlzLnYwbCA9IEIyQl9JVlswXSB8IDA7XG4gICAgICAgIHRoaXMudjBoID0gQjJCX0lWWzFdIHwgMDtcbiAgICAgICAgdGhpcy52MWwgPSBCMkJfSVZbMl0gfCAwO1xuICAgICAgICB0aGlzLnYxaCA9IEIyQl9JVlszXSB8IDA7XG4gICAgICAgIHRoaXMudjJsID0gQjJCX0lWWzRdIHwgMDtcbiAgICAgICAgdGhpcy52MmggPSBCMkJfSVZbNV0gfCAwO1xuICAgICAgICB0aGlzLnYzbCA9IEIyQl9JVls2XSB8IDA7XG4gICAgICAgIHRoaXMudjNoID0gQjJCX0lWWzddIHwgMDtcbiAgICAgICAgdGhpcy52NGwgPSBCMkJfSVZbOF0gfCAwO1xuICAgICAgICB0aGlzLnY0aCA9IEIyQl9JVls5XSB8IDA7XG4gICAgICAgIHRoaXMudjVsID0gQjJCX0lWWzEwXSB8IDA7XG4gICAgICAgIHRoaXMudjVoID0gQjJCX0lWWzExXSB8IDA7XG4gICAgICAgIHRoaXMudjZsID0gQjJCX0lWWzEyXSB8IDA7XG4gICAgICAgIHRoaXMudjZoID0gQjJCX0lWWzEzXSB8IDA7XG4gICAgICAgIHRoaXMudjdsID0gQjJCX0lWWzE0XSB8IDA7XG4gICAgICAgIHRoaXMudjdoID0gQjJCX0lWWzE1XSB8IDA7XG4gICAgICAgIGNvbnN0IGtleUxlbmd0aCA9IG9wdHMua2V5ID8gb3B0cy5rZXkubGVuZ3RoIDogMDtcbiAgICAgICAgdGhpcy52MGwgXj0gdGhpcy5vdXRwdXRMZW4gfCAoa2V5TGVuZ3RoIDw8IDgpIHwgKDB4MDEgPDwgMTYpIHwgKDB4MDEgPDwgMjQpO1xuICAgICAgICBpZiAob3B0cy5zYWx0KSB7XG4gICAgICAgICAgICBjb25zdCBzYWx0ID0gdTMyKHRvQnl0ZXMob3B0cy5zYWx0KSk7XG4gICAgICAgICAgICB0aGlzLnY0bCBePSBieXRlU3dhcElmQkUoc2FsdFswXSk7XG4gICAgICAgICAgICB0aGlzLnY0aCBePSBieXRlU3dhcElmQkUoc2FsdFsxXSk7XG4gICAgICAgICAgICB0aGlzLnY1bCBePSBieXRlU3dhcElmQkUoc2FsdFsyXSk7XG4gICAgICAgICAgICB0aGlzLnY1aCBePSBieXRlU3dhcElmQkUoc2FsdFszXSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdHMucGVyc29uYWxpemF0aW9uKSB7XG4gICAgICAgICAgICBjb25zdCBwZXJzID0gdTMyKHRvQnl0ZXMob3B0cy5wZXJzb25hbGl6YXRpb24pKTtcbiAgICAgICAgICAgIHRoaXMudjZsIF49IGJ5dGVTd2FwSWZCRShwZXJzWzBdKTtcbiAgICAgICAgICAgIHRoaXMudjZoIF49IGJ5dGVTd2FwSWZCRShwZXJzWzFdKTtcbiAgICAgICAgICAgIHRoaXMudjdsIF49IGJ5dGVTd2FwSWZCRShwZXJzWzJdKTtcbiAgICAgICAgICAgIHRoaXMudjdoIF49IGJ5dGVTd2FwSWZCRShwZXJzWzNdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0cy5rZXkpIHtcbiAgICAgICAgICAgIC8vIFBhZCB0byBibG9ja0xlbiBhbmQgdXBkYXRlXG4gICAgICAgICAgICBjb25zdCB0bXAgPSBuZXcgVWludDhBcnJheSh0aGlzLmJsb2NrTGVuKTtcbiAgICAgICAgICAgIHRtcC5zZXQodG9CeXRlcyhvcHRzLmtleSkpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGUodG1wKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBnZXQoKSB7XG4gICAgICAgIGxldCB7IHYwbCwgdjBoLCB2MWwsIHYxaCwgdjJsLCB2MmgsIHYzbCwgdjNoLCB2NGwsIHY0aCwgdjVsLCB2NWgsIHY2bCwgdjZoLCB2N2wsIHY3aCB9ID0gdGhpcztcbiAgICAgICAgcmV0dXJuIFt2MGwsIHYwaCwgdjFsLCB2MWgsIHYybCwgdjJoLCB2M2wsIHYzaCwgdjRsLCB2NGgsIHY1bCwgdjVoLCB2NmwsIHY2aCwgdjdsLCB2N2hdO1xuICAgIH1cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBzZXQodjBsLCB2MGgsIHYxbCwgdjFoLCB2MmwsIHYyaCwgdjNsLCB2M2gsIHY0bCwgdjRoLCB2NWwsIHY1aCwgdjZsLCB2NmgsIHY3bCwgdjdoKSB7XG4gICAgICAgIHRoaXMudjBsID0gdjBsIHwgMDtcbiAgICAgICAgdGhpcy52MGggPSB2MGggfCAwO1xuICAgICAgICB0aGlzLnYxbCA9IHYxbCB8IDA7XG4gICAgICAgIHRoaXMudjFoID0gdjFoIHwgMDtcbiAgICAgICAgdGhpcy52MmwgPSB2MmwgfCAwO1xuICAgICAgICB0aGlzLnYyaCA9IHYyaCB8IDA7XG4gICAgICAgIHRoaXMudjNsID0gdjNsIHwgMDtcbiAgICAgICAgdGhpcy52M2ggPSB2M2ggfCAwO1xuICAgICAgICB0aGlzLnY0bCA9IHY0bCB8IDA7XG4gICAgICAgIHRoaXMudjRoID0gdjRoIHwgMDtcbiAgICAgICAgdGhpcy52NWwgPSB2NWwgfCAwO1xuICAgICAgICB0aGlzLnY1aCA9IHY1aCB8IDA7XG4gICAgICAgIHRoaXMudjZsID0gdjZsIHwgMDtcbiAgICAgICAgdGhpcy52NmggPSB2NmggfCAwO1xuICAgICAgICB0aGlzLnY3bCA9IHY3bCB8IDA7XG4gICAgICAgIHRoaXMudjdoID0gdjdoIHwgMDtcbiAgICB9XG4gICAgY29tcHJlc3MobXNnLCBvZmZzZXQsIGlzTGFzdCkge1xuICAgICAgICB0aGlzLmdldCgpLmZvckVhY2goKHYsIGkpID0+IChCQlVGW2ldID0gdikpOyAvLyBGaXJzdCBoYWxmIGZyb20gc3RhdGUuXG4gICAgICAgIEJCVUYuc2V0KEIyQl9JViwgMTYpOyAvLyBTZWNvbmQgaGFsZiBmcm9tIElWLlxuICAgICAgICBsZXQgeyBoLCBsIH0gPSB1NjQuZnJvbUJpZyhCaWdJbnQodGhpcy5sZW5ndGgpKTtcbiAgICAgICAgQkJVRlsyNF0gPSBCMkJfSVZbOF0gXiBsOyAvLyBMb3cgd29yZCBvZiB0aGUgb2Zmc2V0LlxuICAgICAgICBCQlVGWzI1XSA9IEIyQl9JVls5XSBeIGg7IC8vIEhpZ2ggd29yZC5cbiAgICAgICAgLy8gSW52ZXJ0IGFsbCBiaXRzIGZvciBsYXN0IGJsb2NrXG4gICAgICAgIGlmIChpc0xhc3QpIHtcbiAgICAgICAgICAgIEJCVUZbMjhdID0gfkJCVUZbMjhdO1xuICAgICAgICAgICAgQkJVRlsyOV0gPSB+QkJVRlsyOV07XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGogPSAwO1xuICAgICAgICBjb25zdCBzID0gU0lHTUE7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTI7IGkrKykge1xuICAgICAgICAgICAgRzFiKDAsIDQsIDgsIDEyLCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzJiKDAsIDQsIDgsIDEyLCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzFiKDEsIDUsIDksIDEzLCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzJiKDEsIDUsIDksIDEzLCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzFiKDIsIDYsIDEwLCAxNCwgbXNnLCBvZmZzZXQgKyAyICogc1tqKytdKTtcbiAgICAgICAgICAgIEcyYigyLCA2LCAxMCwgMTQsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMWIoMywgNywgMTEsIDE1LCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzJiKDMsIDcsIDExLCAxNSwgbXNnLCBvZmZzZXQgKyAyICogc1tqKytdKTtcbiAgICAgICAgICAgIEcxYigwLCA1LCAxMCwgMTUsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMmIoMCwgNSwgMTAsIDE1LCBtc2csIG9mZnNldCArIDIgKiBzW2orK10pO1xuICAgICAgICAgICAgRzFiKDEsIDYsIDExLCAxMiwgbXNnLCBvZmZzZXQgKyAyICogc1tqKytdKTtcbiAgICAgICAgICAgIEcyYigxLCA2LCAxMSwgMTIsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMWIoMiwgNywgOCwgMTMsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMmIoMiwgNywgOCwgMTMsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMWIoMywgNCwgOSwgMTQsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgICAgICBHMmIoMywgNCwgOSwgMTQsIG1zZywgb2Zmc2V0ICsgMiAqIHNbaisrXSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52MGwgXj0gQkJVRlswXSBeIEJCVUZbMTZdO1xuICAgICAgICB0aGlzLnYwaCBePSBCQlVGWzFdIF4gQkJVRlsxN107XG4gICAgICAgIHRoaXMudjFsIF49IEJCVUZbMl0gXiBCQlVGWzE4XTtcbiAgICAgICAgdGhpcy52MWggXj0gQkJVRlszXSBeIEJCVUZbMTldO1xuICAgICAgICB0aGlzLnYybCBePSBCQlVGWzRdIF4gQkJVRlsyMF07XG4gICAgICAgIHRoaXMudjJoIF49IEJCVUZbNV0gXiBCQlVGWzIxXTtcbiAgICAgICAgdGhpcy52M2wgXj0gQkJVRls2XSBeIEJCVUZbMjJdO1xuICAgICAgICB0aGlzLnYzaCBePSBCQlVGWzddIF4gQkJVRlsyM107XG4gICAgICAgIHRoaXMudjRsIF49IEJCVUZbOF0gXiBCQlVGWzI0XTtcbiAgICAgICAgdGhpcy52NGggXj0gQkJVRls5XSBeIEJCVUZbMjVdO1xuICAgICAgICB0aGlzLnY1bCBePSBCQlVGWzEwXSBeIEJCVUZbMjZdO1xuICAgICAgICB0aGlzLnY1aCBePSBCQlVGWzExXSBeIEJCVUZbMjddO1xuICAgICAgICB0aGlzLnY2bCBePSBCQlVGWzEyXSBeIEJCVUZbMjhdO1xuICAgICAgICB0aGlzLnY2aCBePSBCQlVGWzEzXSBeIEJCVUZbMjldO1xuICAgICAgICB0aGlzLnY3bCBePSBCQlVGWzE0XSBeIEJCVUZbMzBdO1xuICAgICAgICB0aGlzLnY3aCBePSBCQlVGWzE1XSBeIEJCVUZbMzFdO1xuICAgICAgICBCQlVGLmZpbGwoMCk7XG4gICAgfVxuICAgIGRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5idWZmZXIzMi5maWxsKDApO1xuICAgICAgICB0aGlzLnNldCgwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwKTtcbiAgICB9XG59XG4vKipcbiAqIEJMQUtFMmIgLSBvcHRpbWl6ZWQgZm9yIDY0LWJpdCBwbGF0Zm9ybXMuIEpTIGRvZXNuJ3QgaGF2ZSB1aW50NjQsIHNvIGl0J3Mgc2xvd2VyIHRoYW4gQkxBS0Uycy5cbiAqIEBwYXJhbSBtc2cgLSBtZXNzYWdlIHRoYXQgd291bGQgYmUgaGFzaGVkXG4gKiBAcGFyYW0gb3B0cyAtIGRrTGVuLCBrZXksIHNhbHQsIHBlcnNvbmFsaXphdGlvblxuICovXG5leHBvcnQgY29uc3QgYmxha2UyYiA9IC8qIEBfX1BVUkVfXyAqLyB3cmFwQ29uc3RydWN0b3JXaXRoT3B0cygob3B0cykgPT4gbmV3IEJMQUtFMmIob3B0cykpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ymxha2UyYi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/blake2b.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/crypto.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/crypto.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto)\n/* harmony export */ });\nconst crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9wYXRyaWNrdG9ibGVyL21hc3VtaS1leHBsb3Jlci9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG8uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNyeXB0byA9IHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JyAmJiAnY3J5cHRvJyBpbiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcy5jcnlwdG8gOiB1bmRlZmluZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/crypto.js\n"));

/***/ }),

/***/ "./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),\n/* harmony export */   byteSwap: () => (/* binding */ byteSwap),\n/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),\n/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   rotl: () => (/* binding */ rotl),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),\n/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),\n/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/crypto */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/crypto.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/_assert.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nconst byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.randomBytes === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ethereum-cryptography/node_modules/@noble/hashes/esm/utils.js\n"));

/***/ }),

/***/ "./plutus-minting-contract.json":
/*!**************************************!*\
  !*** ./plutus-minting-contract.json ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"preamble":{"title":"schaier-io/permission-based-wallet","description":"Aiken contracts for project \'schaier-io/permission-based-wallet\'","version":"0.0.0","plutusVersion":"v3","compiler":{"name":"Aiken","version":"v1.1.0+be31a7c"},"license":"Apache-2.0"},"validators":[{"title":"mint.mintUnique.mint","redeemer":{"title":"redeemer","schema":{"$ref":"#/definitions/mint~1Action"}},"parameters":[{"title":"_paymentContractAddress","schema":{"$ref":"#/definitions/ByteArray"}}],"compiledCode":"59021c0101003232323232323223225333004323232323253323300a3001300b3754004264646464a66601c600a0022a66602260206ea801c540085854ccc038c00c00454ccc044c040dd50038a8010b0b18071baa00613232323232325333015301800213232325333015300c3016375401c264a66602c601a602e6ea80044c94ccc05ccdc78029b9432337146eb8c004c068dd51800980d1baa0023337929452008375a603a603c60346ea8c004c068dd50011180e8008a99980b9806002098060018a5014a0603660306ea800458ccc8c0040048894ccc06c0085300103d87a800013232533301a301100313374a90001980f00125eb804ccc014014004cdc0001a4002603e006603a00401090000a99980a99b87002480044c02800452819198008009980300380591299980c8008a4000266e01200233002002301c001375a602a0046eb8c04c00458c058004cc00400801888c94ccc048c01cc04cdd50008a5eb7bdb1804dd5980b980a1baa001323300100100322533301600114c103d87a800013232323253330173372200e0042a66602e66e3c01c0084cdd2a4000660366e980052f5c02980103d87a8000133006006003375660300066eb8c058008c068008c060004dd59809980a180a180a180a0011bac3012001300e375400e6e1d2002375c601e60186ea8008dc3a40002c601a601c004601800260180046014002600c6ea800452613656375c002ae6955ceaab9e5573eae815d0aba201","hash":"af9ed1537dd07c3039f8b666ea74c8b262063b9713ba2823d10fc288"},{"title":"mint.mintUnique.else","parameters":[{"title":"_paymentContractAddress","schema":{"$ref":"#/definitions/ByteArray"}}],"compiledCode":"59021c0101003232323232323223225333004323232323253323300a3001300b3754004264646464a66601c600a0022a66602260206ea801c540085854ccc038c00c00454ccc044c040dd50038a8010b0b18071baa00613232323232325333015301800213232325333015300c3016375401c264a66602c601a602e6ea80044c94ccc05ccdc78029b9432337146eb8c004c068dd51800980d1baa0023337929452008375a603a603c60346ea8c004c068dd50011180e8008a99980b9806002098060018a5014a0603660306ea800458ccc8c0040048894ccc06c0085300103d87a800013232533301a301100313374a90001980f00125eb804ccc014014004cdc0001a4002603e006603a00401090000a99980a99b87002480044c02800452819198008009980300380591299980c8008a4000266e01200233002002301c001375a602a0046eb8c04c00458c058004cc00400801888c94ccc048c01cc04cdd50008a5eb7bdb1804dd5980b980a1baa001323300100100322533301600114c103d87a800013232323253330173372200e0042a66602e66e3c01c0084cdd2a4000660366e980052f5c02980103d87a8000133006006003375660300066eb8c058008c068008c060004dd59809980a180a180a180a0011bac3012001300e375400e6e1d2002375c601e60186ea8008dc3a40002c601a601c004601800260180046014002600c6ea800452613656375c002ae6955ceaab9e5573eae815d0aba201","hash":"af9ed1537dd07c3039f8b666ea74c8b262063b9713ba2823d10fc288"}],"definitions":{"ByteArray":{"dataType":"bytes"},"mint/Action":{"title":"Action","anyOf":[{"title":"MintAction","dataType":"constructor","index":0,"fields":[]},{"title":"BurnAction","dataType":"constructor","index":1,"fields":[]}]}}}');

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["pages/_app","main"], () => (__webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fpatricktobler%2Fmasumi-explorer%2Fsrc%2Fpages%2Fregister-agent.tsx&page=%2Fregister-agent!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);